{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/header.jpg","path":"images/header.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/wechatpay.png","path":"images/wechatpay.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/alipay.jpg","path":"images/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"841c4514c15a424dc61fc99a0a5bb555fcd0eb85","modified":1595607758695},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1595503172349},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1595503172349},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1595503172349},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1595503172349},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1595503172349},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1595503172349},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1595503172349},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1595503172349},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1595503172349},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1595503172349},{"_id":"themes/next/README.cn.md","hash":"263b74f1ac7c0f6f9424b8cced4b0b320ae61efc","modified":1595503172349},{"_id":"themes/next/README.md","hash":"287c7e6b7a6ddf75d815dda0df8bd228e3f285c5","modified":1595503172349},{"_id":"themes/next/_config.yml","hash":"59caaff9c09a20582b7763d2f839353ddd3c8820","modified":1595611726464},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1595503172349},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1595503172349},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1595503172357},{"_id":"source/_posts/Django.md","hash":"a7e7abea3a1c138ffdfb7be0dc68759323576b69","modified":1595490904979},{"_id":"source/_posts/Go基础.md","hash":"fee1e3c19b0ab64c6690c2f38d66e24f3f4efb64","modified":1595495641466},{"_id":"source/_posts/Python中不同赋值形式的差异.md","hash":"761152167b6f5c38e2a7de0501b1c4a77102655e","modified":1595508946910},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1595323213105},{"_id":"source/_posts/计算机网络基础.md","hash":"978378c819db0c42cede33b59e2232f84c1a82c3","modified":1595495637842},{"_id":"source/about/index.md","hash":"bdf508ae8691f1be7bab02cfc1bf1842c906180a","modified":1595509324426},{"_id":"source/categories/index.md","hash":"66d346f3f7e0f0b0efbe96722400c5691247387c","modified":1595500113005},{"_id":"source/tags/index.md","hash":"f6ef1414813f7e1b2146a92fbb53d420c47c9971","modified":1595499885927},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1595503172349},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"50d48c47162817a3810a9d9ad51104e83947419a","modified":1595503172349},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1595503172349},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1595503172349},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1595503172349},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1595503172349},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1595503172349},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1595503172349},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1595503172349},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1595503172349},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1595503172349},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1595503172349},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1595503172349},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1595503172349},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1595503172349},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1595503172349},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1595503172349},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1595503172349},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1595503172349},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1595503172349},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1595503172349},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1595503172353},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1595503172353},{"_id":"themes/next/layout/index.swig","hash":"bc27019f0f367711e9adb907b405e30038142519","modified":1595611431437},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1595503172353},{"_id":"themes/next/layout/post.swig","hash":"0f0bd3fc39b1c6faf6cb7e5d5208470ae8cf65e6","modified":1595611384127},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1595503172353},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1595503172353},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1595503172357},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1595503172357},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1595503172385},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1595503172385},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1595503172385},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1595503172361},{"_id":"source/_posts/Django/Django学习图片-1.jpg","hash":"0cfc7635c5bc4750b658844ed7adae8c121bb9c3","modified":1577170271966},{"_id":"source/_posts/Django/Django学习图片11.png","hash":"bd3a7e2d845035adaeeae16151acddd3e0e20065","modified":1577170271966},{"_id":"source/_posts/Django/Django学习图片12.png","hash":"00806d8b9d11f91bc3238106ad096a54457b1f5f","modified":1577170271966},{"_id":"source/_posts/Django/Django学习图片2.jpg","hash":"efbe95a722ebc2dfb071fc811741cbefcf8a4e51","modified":1577170271966},{"_id":"source/_posts/Django/Django学习图片3.jpg","hash":"b93a4c6defd014b862951d07c23fd71a7d29797d","modified":1577170271966},{"_id":"source/_posts/Django/Django学习图片4.png","hash":"1e9fa89c6b7b43cee3434747c95a04ff5a1f854a","modified":1577170271966},{"_id":"source/_posts/Django/Django学习图片6.jpg","hash":"97391b395a2184ed4aaf96d0c431acf402fcc4e0","modified":1577170271966},{"_id":"source/_posts/Django/Django学习图片7.png","hash":"8d6521d74d1f5cef8aeff32f2141062cc8261df7","modified":1577170271966},{"_id":"source/_posts/Django/Django学习图片8.png","hash":"5dca2f34beb2cc74bfee39917699b4c8f08cbebc","modified":1577170271966},{"_id":"source/_posts/Django/Django学习图片9.png","hash":"9ff96aa099b8e885274060374b82a130bc03ebe1","modified":1577170271966},{"_id":"source/_posts/Django/斗图1.jpg","hash":"b6403c7f7bdfc3eceebbb52bd97f273675cdece4","modified":1577170271966},{"_id":"source/_posts/Django/斗图2.jpg","hash":"c9caeebeee835386b30a652916db6f35a48d81cb","modified":1577170271966},{"_id":"source/_posts/Django/斗图3.jpg","hash":"39cfb270ff3150bc7bc1f93a4bf69e847b2b724a","modified":1577170271966},{"_id":"source/_posts/计算机网络基础/TCP报文段结构.gif","hash":"87c35a4ffd6dcf982f121f0dc490270500ed468d","modified":1582813052771},{"_id":"source/_posts/计算机网络基础/TCP报文段结构.jpg","hash":"73e8f6f49484faca6ac73dd955164191d0203859","modified":1582813052771},{"_id":"source/_posts/计算机网络基础/一点点.jpg","hash":"6aef2999575657c8af548b6e068aff315647e656","modified":1582813052771},{"_id":"source/_posts/计算机网络基础/三次握手.png","hash":"5b5fbbe2114d3e9fee185bfded644578fe502cae","modified":1582813052771},{"_id":"source/_posts/计算机网络基础/停.jpg","hash":"453a48b69d844cfc9c8ded83cae90462d24b4dee","modified":1582813052771},{"_id":"source/_posts/计算机网络基础/四次挥手.png","hash":"4b5cec8aa905b20efc1456e5dde31275ca2c8afd","modified":1582813052771},{"_id":"source/_posts/计算机网络基础/控制过程.jpg","hash":"eb91dea45aa9e28f47309dc10b829fdeb37c9a8d","modified":1582813052771},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1595503172349},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1595503172349},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1595503172349},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1595503172349},{"_id":"themes/next/layout/_macro/post.swig","hash":"b920f78dd1c03757a36cf9cc04824b47a65aeb91","modified":1595611299162},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1595503172349},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1595503172349},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1595503172349},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1595503172349},{"_id":"themes/next/layout/_partials/footer.swig","hash":"bccb90cd20c1e89a4d3d857f6cfbd65756aa3faa","modified":1595611038563},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1595503172349},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1595503172353},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1595503172353},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1595503172353},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1595503172353},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1595503172353},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1595503172353},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1595503172353},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1595503172353},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1595503172353},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1595503172353},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1595503172353},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1595503172353},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1595503172353},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1595503172353},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1595503172357},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1595503172357},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1595503172357},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1595503172357},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1595503172357},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1595503172357},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1595503172357},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1595503172357},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1595503172357},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1595503172361},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1595503172361},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1595503172361},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1595503172361},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1595503172361},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1595503172361},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1595503172361},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1595503172361},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1595503172361},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1595503172361},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1595503172361},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1595503172361},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1595503172361},{"_id":"themes/next/source/images/header.jpg","hash":"531b3f4a1d2d8f5600d5abee352a27390e7e73aa","modified":1595506013127},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1595503172361},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1595503172361},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1595503172361},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1595503172361},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1595503172361},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1595503172361},{"_id":"themes/next/source/images/wechatpay.png","hash":"ca6a5b5bf4f04f864d6efd43b08b733adca1b502","modified":1595513086421},{"_id":"source/_posts/Django/Django学习图片10.png","hash":"8b89fc8d6467e68800e90cebb6f9b0d24fc9e442","modified":1577170271966},{"_id":"source/_posts/Django/Django学习图片13.png","hash":"b051af8c72f8f6be8ec6459f2fbdbf1de2eb41f0","modified":1577170271966},{"_id":"source/_posts/Django/Django学习图片5.jpg.png","hash":"2fabce9f5914e712f430534f87519b64966183c0","modified":1577170271966},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1595503172353},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1595503172353},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1595503172361},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1595503172361},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1595503172361},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1595503172361},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1595503172361},{"_id":"themes/next/source/images/alipay.jpg","hash":"af2390daa92cdf2c5b0b272ad2651b7ea9776c8b","modified":1595513086429},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1595503172349},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1595503172353},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1595503172353},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1595503172353},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1595503172353},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1595503172353},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1595503172353},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1595503172353},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1595503172353},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1595503172353},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1595503172353},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1595503172353},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1595503172353},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1595503172353},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1595503172353},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1595503172353},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1595503172353},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1595503172353},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1595503172353},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1595503172353},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1595503172353},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1595503172353},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1595503172353},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1595503172353},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1595503172353},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1595503172353},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1595503172353},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1595503172353},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1595503172353},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1595503172353},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1595503172353},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1595503172353},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1595503172353},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1595503172353},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1595503172353},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1595503172353},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1595503172353},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1595503172353},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1595503172361},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1595503172361},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1595503172361},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1595503172361},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1595503172361},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1595503172361},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1595503172361},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1595503172361},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1595503172361},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1595503172361},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1595503172361},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1595503172361},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1595503172361},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1595503172361},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1595503172361},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1595503172361},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1595503172361},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1595503172361},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1595503172361},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1595503172369},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1595503172369},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1595503172369},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1595503172369},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1595503172369},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1595503172369},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1595503172369},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1595503172369},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1595503172369},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1595503172369},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1595503172369},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1595503172369},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1595503172369},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1595503172381},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1595503172381},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1595503172381},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1595503172381},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1595503172381},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1595503172381},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1595503172381},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1595503172381},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1595503172381},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1595503172381},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1595503172381},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1595503172381},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1595503172381},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1595503172381},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1595503172381},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1595503172381},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1595503172381},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1595503172381},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1595503172381},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1595503172381},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1595503172381},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1595503172381},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1595503172381},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1595503172381},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1595503172381},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1595503172381},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1595503172381},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1595503172385},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1595503172385},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1595503172385},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1595503172385},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1595503172385},{"_id":"source/_posts/Django/Django学习图片14.png","hash":"e51d02f00b64745651e20a0591a66c9549537d15","modified":1577170271966},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1595503172361},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1595503172381},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1595503172353},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1595503172353},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1595503172357},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1595503172361},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1595503172361},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1595503172361},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1595503172361},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1595503172361},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1595503172361},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1595503172361},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1595503172361},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1595503172361},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1595503172361},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1595503172361},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1595503172361},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1595503172361},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1595503172361},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1595503172361},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1595503172361},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1595503172361},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1595503172361},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1595503172361},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1595503172361},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1595503172361},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1595503172361},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1595503172361},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1595503172361},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1595503172361},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1595503172361},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1595503172361},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1595503172361},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1595503172361},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1595503172369},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1595503172369},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1595503172369},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1595503172369},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1595503172369},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1595503172369},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1595503172369},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1595503172369},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1595503172369},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1595503172369},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1595503172369},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1595503172369},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1595503172369},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1595503172369},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1595503172385},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1595503172385},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1595503172361},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1595503172381},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1595503172381},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1595503172385},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"9fea6dba537ede12ad5dd3623e1be823dc2f6304","modified":1595510429179},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1595503172357},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1595503172357},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1595503172361},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1595503172361},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1595503172361},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1595503172361},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1595503172361},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1595503172361},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1595503172361},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1595503172361},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1595503172361},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1595503172369},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1595503172369},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1595503172369},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1595503172369},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1595503172369},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1595503172369},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1595503172373},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1595503172381},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1595503172373},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1595503172369},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1595503172385},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1595503172377},{"_id":"public/atom.xml","hash":"9e1358c02acafb61ac2c7e3063c36ddde582b305","modified":1595611462675},{"_id":"public/search.xml","hash":"6f1e9464a79dcb89859f547b3740e2a6c53a8c15","modified":1595611462675},{"_id":"public/categories/index.html","hash":"6883499c0089b0a2cc610af2c1b4f95371fe6ff2","modified":1595611740470},{"_id":"public/tags/index.html","hash":"385a4eb1fcbc48101e5d37252d258cc5fd95550f","modified":1595611740470},{"_id":"public/2020/07/23/Go基础/index.html","hash":"6a4cc7088ea7756e93d0ece7c2a795dfdeb0ab08","modified":1595611740470},{"_id":"public/2020/07/21/hello-world/index.html","hash":"e67610bec2f4677ca03f153239337cb98c9ff435","modified":1595611740470},{"_id":"public/2020/04/07/Python中不同赋值形式的差异/index.html","hash":"a92300492b77c453c5e17dfaffe808b50691c595","modified":1595611740470},{"_id":"public/2020/01/17/计算机网络基础/index.html","hash":"5e4af5133427dfb72b07cd13b9e425871a2c162f","modified":1595611740470},{"_id":"public/2019/07/23/Django/index.html","hash":"de3eaf9d3c65dbb54784c0ee0502ebb4244d14b3","modified":1595611740470},{"_id":"public/archives/index.html","hash":"cde1e90a7ed9f2bb3911159560f9bb98035db98d","modified":1595611740470},{"_id":"public/archives/2019/index.html","hash":"3e3503309d79919227b9cc8b65259627285ba7c9","modified":1595611740470},{"_id":"public/archives/2019/07/index.html","hash":"9e07e53863bd145772a3323312e9863fca6ac373","modified":1595611740470},{"_id":"public/archives/2020/index.html","hash":"91f484ee834f1c14cfbe78a0b4a4174e3601bd26","modified":1595611740470},{"_id":"public/archives/2020/01/index.html","hash":"841634941924ae7228bb8988310143ab40be73ef","modified":1595611740470},{"_id":"public/archives/2020/04/index.html","hash":"8d9d739a706f12b2c6d94ae71b2de97be7aab4b0","modified":1595611740470},{"_id":"public/archives/2020/07/index.html","hash":"23da8e60476e2261e7867d2e53495326bc751d21","modified":1595611740470},{"_id":"public/index.html","hash":"2615f8d78afca529c2f19d382eff3a272fb5a8cd","modified":1595611740470},{"_id":"public/tags/python/index.html","hash":"9e344a66c06acc9567a4cddde8c039daba173290","modified":1595611740470},{"_id":"public/tags/network/index.html","hash":"190f24fdbe5277f465c8b71680c29296fc328366","modified":1595611740470},{"_id":"public/CNAME","hash":"841c4514c15a424dc61fc99a0a5bb555fcd0eb85","modified":1595611462675},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1595611462675},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1595611462675},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1595611462675},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1595611462675},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1595611462675},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1595611462675},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1595611462675},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1595611462675},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1595611462675},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1595611462675},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1595611462675},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1595611462675},{"_id":"public/images/header.jpg","hash":"531b3f4a1d2d8f5600d5abee352a27390e7e73aa","modified":1595611462675},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1595611462675},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1595611462675},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1595611462675},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1595611462675},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1595611462675},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1595611462675},{"_id":"public/images/wechatpay.png","hash":"ca6a5b5bf4f04f864d6efd43b08b733adca1b502","modified":1595611462675},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1595611462675},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1595611462675},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1595611462675},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1595611462675},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1595611462675},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1595611462675},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1595611462675},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1595611462675},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1595611462675},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1595611462675},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1595611462675},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1595611462675},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1595611462675},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1595611462675},{"_id":"public/2020/01/17/计算机网络基础/TCP报文段结构.gif","hash":"87c35a4ffd6dcf982f121f0dc490270500ed468d","modified":1595611462675},{"_id":"public/2020/01/17/计算机网络基础/TCP报文段结构.jpg","hash":"73e8f6f49484faca6ac73dd955164191d0203859","modified":1595611462675},{"_id":"public/2020/01/17/计算机网络基础/一点点.jpg","hash":"6aef2999575657c8af548b6e068aff315647e656","modified":1595611462675},{"_id":"public/2020/01/17/计算机网络基础/三次握手.png","hash":"5b5fbbe2114d3e9fee185bfded644578fe502cae","modified":1595611462675},{"_id":"public/2020/01/17/计算机网络基础/停.jpg","hash":"453a48b69d844cfc9c8ded83cae90462d24b4dee","modified":1595611462675},{"_id":"public/2020/01/17/计算机网络基础/四次挥手.png","hash":"4b5cec8aa905b20efc1456e5dde31275ca2c8afd","modified":1595611462675},{"_id":"public/2020/01/17/计算机网络基础/控制过程.jpg","hash":"eb91dea45aa9e28f47309dc10b829fdeb37c9a8d","modified":1595611462675},{"_id":"public/2019/07/23/Django/Django学习图片11.png","hash":"bd3a7e2d845035adaeeae16151acddd3e0e20065","modified":1595611462675},{"_id":"public/2019/07/23/Django/Django学习图片12.png","hash":"00806d8b9d11f91bc3238106ad096a54457b1f5f","modified":1595611462675},{"_id":"public/2019/07/23/Django/Django学习图片2.jpg","hash":"efbe95a722ebc2dfb071fc811741cbefcf8a4e51","modified":1595611462675},{"_id":"public/2019/07/23/Django/Django学习图片4.png","hash":"1e9fa89c6b7b43cee3434747c95a04ff5a1f854a","modified":1595611462675},{"_id":"public/2019/07/23/Django/Django学习图片6.jpg","hash":"97391b395a2184ed4aaf96d0c431acf402fcc4e0","modified":1595611462675},{"_id":"public/2019/07/23/Django/Django学习图片7.png","hash":"8d6521d74d1f5cef8aeff32f2141062cc8261df7","modified":1595611462675},{"_id":"public/2019/07/23/Django/Django学习图片9.png","hash":"9ff96aa099b8e885274060374b82a130bc03ebe1","modified":1595611462675},{"_id":"public/2019/07/23/Django/斗图1.jpg","hash":"b6403c7f7bdfc3eceebbb52bd97f273675cdece4","modified":1595611462675},{"_id":"public/2019/07/23/Django/斗图2.jpg","hash":"c9caeebeee835386b30a652916db6f35a48d81cb","modified":1595611462675},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1595611462675},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1595611462675},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1595611462675},{"_id":"public/2019/07/23/Django/Django学习图片-1.jpg","hash":"0cfc7635c5bc4750b658844ed7adae8c121bb9c3","modified":1595611462675},{"_id":"public/2019/07/23/Django/Django学习图片3.jpg","hash":"b93a4c6defd014b862951d07c23fd71a7d29797d","modified":1595611462675},{"_id":"public/2019/07/23/Django/Django学习图片8.png","hash":"5dca2f34beb2cc74bfee39917699b4c8f08cbebc","modified":1595611462675},{"_id":"public/2019/07/23/Django/斗图3.jpg","hash":"39cfb270ff3150bc7bc1f93a4bf69e847b2b724a","modified":1595611462675},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1595611462675},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1595611462675},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1595611462675},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1595611462675},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1595611462675},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1595611462675},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1595611462675},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1595611462675},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1595611462675},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1595611462675},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1595611462675},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1595611462675},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1595611462675},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1595611462675},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1595611462675},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1595611462675},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1595611462675},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1595611462675},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1595611462675},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1595611462675},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1595611462675},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1595611462675},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1595611462675},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1595611462675},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1595611462675},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1595611462675},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1595611462675},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1595611462675},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1595611462675},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1595611462675},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1595611462675},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1595611462675},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1595611462675},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1595611462675},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1595611462675},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1595611462675},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1595611462675},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1595611462675},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1595611462675},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1595611462675},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1595611462675},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1595611462675},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1595611462675},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1595611462675},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1595611462675},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1595611462675},{"_id":"public/lib/fastclick/README.html","hash":"b9e008af0866799103e596e2eda466a33d7dde18","modified":1595611462675},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"7eecc5e472416b9870580c53b7ed0c44474ed23a","modified":1595611462675},{"_id":"public/lib/jquery_lazyload/README.html","hash":"9c91bba4263a20004f2c10772d438cfa8312c308","modified":1595611462675},{"_id":"public/css/main.css","hash":"98e06381420c6fc973f94ca54c62840c5a253941","modified":1595611462675},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1595611462675},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1595611462675},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1595611462675},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1595611462675},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1595611462675},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1595611462675},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1595611462675},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1595611462675},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1595611462675},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1595611462675},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1595611462675},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1595611462675},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1595611462675},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1595611462675},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1595611462675},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1595611462675},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1595611462675},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1595611462675},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1595611462675},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1595611462675},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1595611462675},{"_id":"public/2019/07/23/Django/Django学习图片13.png","hash":"b051af8c72f8f6be8ec6459f2fbdbf1de2eb41f0","modified":1595611462675},{"_id":"public/images/alipay.jpg","hash":"af2390daa92cdf2c5b0b272ad2651b7ea9776c8b","modified":1595611462675},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1595611462675},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1595611462675},{"_id":"public/2019/07/23/Django/Django学习图片5.jpg.png","hash":"2fabce9f5914e712f430534f87519b64966183c0","modified":1595611462675},{"_id":"public/2019/07/23/Django/Django学习图片14.png","hash":"e51d02f00b64745651e20a0591a66c9549537d15","modified":1595611462675},{"_id":"public/2019/07/23/Django/Django学习图片10.png","hash":"8b89fc8d6467e68800e90cebb6f9b0d24fc9e442","modified":1595611462675},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1595611462675}],"Category":[],"Data":[],"Page":[{"title":"分类","date":"2020-07-23T10:27:16.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2020-07-23 18:27:16\ntype: \"categories\"\ncomments: false\n---\n","updated":"2020-07-23T10:28:33.005Z","path":"categories/index.html","layout":"page","_id":"ckd0hv9hy0001j7jx6zhr679m","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2020-07-23T10:22:24.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2020-07-23 18:22:24\ntype: \"tags\"\ncomments: false\n---\n","updated":"2020-07-23T10:24:45.927Z","path":"tags/index.html","layout":"page","_id":"ckd0hv9i40003j7jxcq6uf8b4","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Django","date":"2019-07-23T07:21:52.000Z","_content":"# Django 框架\n\n>> **本文基于Linux环境下操作**\n\n## MVT框架\n* M：Model **模型**&emsp;&emsp;作用：和后台数据库进行交互。\n* V：View：**视图**&emsp;&emsp;&nbsp;作用：接受浏览器请求，进行处理并与模型和模板进行交互，返回应答。\n* T: Template **模板**&nbsp;&nbsp;&nbsp;&emsp;作用：产生html页面。\n<!--more-->\n---\n\n## 环境配置\n1. **安装虚拟环境**&nbsp;(仅仅只是Python环境的复制版本，并不是另一套系统)\n```\nsudo pip install virtualenv  # 利用pip下载virtualenv包\n```\n2. **安装虚拟环境扩展包**\n```\nsudo pip install virtualenvwrapper\n```\n3. **编辑家目录下面的.bashrc文件，添加下面两行。**\n```\nexport WORKON_HOME=$HOME/.virtualenvs\nsource /usr/local/bin/virtualenvwrapper.sh\n```\n4. **使用下面的命令使虚拟环境生效**\n```\nsource .bashrc\n```\n5. **创建虚拟环境**\n```\nmkvirtualenv 虚拟环境名  # 此时为Python2的解释器创建\nmkvirtualenv -p python3 bj11_py3\nworkon 虚拟环境名  # 进入虚拟环境工作\nworkon 空格 + 两个tab键  # 查看主机上所有的虚拟环境\ndeactivate  # 退出虚拟环境\nrmvirtualenv 虚拟环境名  #删除虚拟环境\n```\n6. **安装Django环境**\n```\npip install django==1.8.2  # 注意：不能使用sudo安装，sudo会安装到真是的主机环境上，而不是虚拟环境中\npip list  # 可以查看虚拟环境中安装了哪些python包\n```\n---\n\n## 项目创建\n```\ndjango-admin startproject 项目名称\n```\n***注意：创建应用必须先进入虚拟环境。***\n![1](./Django学习图片-1.jpg)\n\n#### 各个文件的说明\n* _ _init_ _.py:说明该项目是一个Python包\n* settings.py:项目配置文件\n* urls.py:进行url路由的配置\n* wsgi.py:web服务器和Django交互的入口\n* manage.py:项目的管理文件\n\n*注：一个项目由多个应用组成，每个应用完成一个特定的功能，在Django中，每个模块使用一个Django应用来开发*\n\n**因此，接下来将了解如何创建一个应用**\n\n## 应用创建\n```\npython manage.py startapp 应用名称   # 创建应用时需先进入到项目目录\n```\n\n![1](./Django学习图片2.jpg)\n\n\n#### 各个文件的说明\n* _ _init__.py:说明该目录是一个Python模块\n* models.py:用来写和数据库交互的功能\n* views.py:定义处理函数，称为视图函数\n* tests.py:用来写测试代码的文件\n* admin.py:网站后台管理的相关文件\n\n**在建立了项目与应用之后，还需要对应用进行注册，才能使该项目和该应用关联**\n\n#### 方法：修改settings.py中的INSTALLED_APPS配置项。\n\n![1](./Django学习图片3.jpg)\n\n### 运行Django框架命令(在项目目录下进行)\n```\npython manage.py runserver\n```\n\n***完成了上述动作之后就已经构建起了基本的Django的框架，接下来就可以向此框架中添加配置了！***\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;![1](./斗图1.jpg)\n\n---\n\n## ORM模型(对象——关系映射)\n\n**Django中内嵌了ORM框架，ORM的作用是将类和数据表进行关联，即只需要对类和对象进行操作就可以对数据库进行更改，并且ORM可以根据设计的类自动生成表。**\n\n**注意：在应用下的model.py文件中设计模型类时，该类必须继承models.Model类**\n![1](./Django学习图片4.png)\n\n如上图所示，bookinfo类继承了models.Model类，并且可以看出bookinfo有两种属性，分别是bittle和bpub_date,代表了图书的名称和出版日期。\n\n## 模型类生成表\n\n**刚刚说到ORM可以根据模型类自动生成表，那么要如何操作呢，接下来就来看看.**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;![1](./斗图2.jpg)\n\n* 生成迁移文件\n```\npython manage.py makemigrations\n```\n\n![1](./Django学习图片5.jpg.png)\n\n* 执行迁移文件生成表\n```\npython manage.py migrate\n```\n**生成表的默认格式：应用名_模型类名(小写)**\n***注意：先在生成的数据库是sqlite3数据库，如果你想看到图形化的数据库界面，可以安装sqliteman，使用如下命令***\n```\nsudo apt-get install sqliteman\nsqliteman     # 即可启动sqliteman查看图形化的sqlite数据库\n```\n#### pip和apt-get的区别\n这里简单介绍一下二者的区别，apt-get一般用于安装软件，而pip是Python管理包的工具，通常用于进行Python包和模块的安装\n\n---\n\n\n## 通过模型类操作数据表\n\n**进入Python shell的命令**\n```\npython manage.py shell\n```\n\n*应当先导入刚才在应用中建立的models类*\n```\nfrom 应用名.models import 类名\n```\n\n**以下为在相互shell终端中演示的例子：**\n```\n1) 向booktest_bookinfo表中插入一条数据。\n    b = BookInfo() #定义一个BookInfo类的对象\n    b.btitle ='天龙八部' #定义b对象的属性并赋值\n    b.bpub_date = date(1990,10,11) \n    b.save() #才会将数据保存进数据库\n\n2）查询出booktest_bookinfo表中id为1的数据。\n    b = BookInfo.objects.get(id=1)\n     \n3）在上一步的基础上改变b对应图书的出版日期。\n    b.bpub_date = date(1989,10,21)\n    b.save() #才会更新表格中的数据\n\n4）紧接上一步，删除b对应的图书的数据。\n    b.delete() #才会删除\n\n5）向booktest_heroInfo表中插入一条数据。\n    h = HeroInfo()\n    h.hname = '郭靖'\n    h.hgender = False\n    h.hcomment = ‘降龙十八掌’\n    b2 = BookInfo.objects.get(id=2)\n    h.hbook = b2  #给关系属性赋值，英雄对象所属的图书对象\n    h.save() \n\n6）查询图书表里面的所有内容。\n    BookInfo.objects.all()\n    HeroInfo.objects.all()\n    \n7）查询出id为2的图书中所有英雄人物的信息。\n    b = BookInfo.objects.get(id=2)\n    b.heroinfo_set.all() #查询出b图书中所有英雄人物的信息\n\n```\n**多类之间的关系**\n![1](./Django学习图片6.jpg)\n\n---\n\n## 后台管理\n1. 本地化\n\n进行语言和时区的本地化\n\n修改settings.py文件。\n![1](./Django学习图片7.png)\n\n2. 创建管理员\n```\npython manage.py createsuperuser\n```\n3. 注册模型类\n\n在应用下的admin.py中注册模型类。\n告诉djang框架根据注册的模型类来生成对应表管理页面。\n![1](./Django学习图片8.png)\n\n---\n\n## 视图\n\n**在Django中，通过浏览器去请求一个页面时，使用视图函数来处理这个请求的，视图函数处理之后，要给浏览器返回页面内容。**\n\n### 视图函数的使用\n\n* 定义视图函数\n\n**视图函数定义在views.py中。**\n例：\n```\ndef index(request):\n    #  进行处理\n    return HttpResponse('hello python')\n```\n视图函数必须有一个参数request，进行处理之后，需要返回一个HttpResponse的类对象，hello python就是返回给浏览器显示的内容。\n\n* 进行URL配置\n\nurl配置的目的是让建立url和视图函数的对应关系。\n\nurl配置项定义在urlpatterns的列表中，每一个配置项都调用url函数。\n\nurl函数有两个参数，第一个参数是一个正则表达式，第二个是对应的处理动作。\n\n配置url时，有两种语法格式：\n1. url(正则表达式，视图函数名)\n2. url(正则表达式，include(应用中的urls文件))\n\n**实际在配置url时，首先在项目的urls.py文件中添加配置项时，并不写具体的url和视图函数之间的对应关系，而是包含具体应用的urls.py文件，在应用的urls.py文件中写url和视图函数的对应关系。**\n\nURL配置方式\n![1](Django学习图片9.png)\n\n### URL的匹配过程\n\n**在项目的urls.py文件中包含具体应用的urls.py文件，应用的urls.py文件中写url和视图函数的对应关系。**\n\n### 匹配方式和运行机制\n\n![1](Django学习图片10.png)\n\n当用户输入如http://127.0.0.1:8000/aindex时， **去除域名和最前面的/，剩下aindex，拿aindex字符串到项目的urls文件中进行匹配，配置成功之后，去除匹配的a字符，那剩下的index字符串继续到项目的urls文件中进行正则匹配，匹配成功之后执行视图函数index** ，index视图函数返回内容hello python给浏览器来显示。\n\n---\n\n## 模板\n\n*不仅仅是一个HTML文件*\n\n### 模板文件的使用\n\n1. 创建模板文件夹(templates文件夹)\n2. 配置模板目录\n\n**在项目文件中修改settings文件，将其TEMPLATES下的'DIRS'改为[os.path.join(BASE_DIR, 'templates')]**\n\n![1](./Django学习图片11.png)\n\n其中BASE_DIR是项目的绝对路径\n\n3. 使用模板文件\n\n**在templates文件夹下建立与应用同名的文件夹，防止混淆**\n\n* 加载模板文件\n\n在模板目录下面获取HTML文件的内容，得到一个模板对象\n```\nfrom django.templates import loader\ntemp = loader.get_template('相对于templates文件的相对路径')\n```\n\n* 定义模板上下文\n```\nfrom django.templates import RequestContext\ncontext = RequestContext(request, {一个字典，替代模板中变量的值})\n```\n\n向模板文件中传递数据\n\n* 模板渲染\n\n得到一个标准的HTML文件\n```\nres_html = temp.render(context)    # 渲染完成的HTML内容\nreturn HttpResponse(res_html)\n```\n\n**以上三点在Django内部已经进行了封装，可直接调用render函数返回**\n```\nreturn render(request, '相对于templates文件的相对路径', {一个字典，替代模板中变量的值})\n```\n\n### 在模板文件中定义变量\n1. 模板变量的使用 ： {{模板变量名}}\n2. for循环的使用 ： \n{% raw %}{% for i in list %}{% endraw %}\n\n{% raw %}{% empty %}{% endraw %}   # 当for循环中没有任何变量时显示的数据\n\n{% raw %}{% endfor %}{% endraw %}\n\n---\n\n## 模型\n\n### Django ORM\n![1](./Django学习图片12.png)\n\n**O：(objects)->类和对象。**<br>\n**R：(Relation)->关系，关系数据库中的表格。**<br>\n**M：（Mapping）->映射。**\n\n### Django ORM 框架的功能\n\n1. 建立模型类和表之间的对应关系，允许我们通过面向对象的方式操作数据库\n2. 根据设计的模型类生成数据库的表格\n3. 通过方便的配置就可以进行数据库的切换\n\n*在此之前使用的数据库都是Django默认的sqlite数据库，接下来我们将对Django配置进行修改，改为熟悉的MySQL数据库*\n### MySQL数据库配置\n\n**修改settings.py中的DATABASES。**\n![1](./Django学习图片13.png)\n***注意：django框架不会自动帮我们生成mysql数据库，所以我们需要自己去创建。***\n\n**切换mysql数据库之后不能启动服务器：**<br>\n安装mysqlPython包: <br>\npython2：\n  pip install mysql-python<br>\npython3:\n安装pymysql:\n  pip install pymysql<br>\n在test1/__init__.py中加如下内容：<br>\n```\nimport pymysql\npymysql.install_as_MySQLdb()\n```\n进行如上操作之后便完成了MySQL数据库的配置！\n\n![1](./斗图3.jpg)\n\n### 重定向\n最后在讲解一下重定向，当浏览器点击某一功能时，仍需要返回原网址。则需使用重定向。\n\n代码如下：\n```\nreturn HttpResponseRedirect('/当前网址')\n\nfrom django.shortcuts import redirct\nreturn redirect('/当前网址')    # 使用Django中封装好的重定向函数redirect返回\n```\n\n---\n\n## 字段属性和选项\n\n**属性命名限制：**\n1. 不能是python的保留关键字。\n2. 不允许使用连续的下划线，这是由django的查询方式决定的。\n3. 定义属性时需要指定字段类型，通过字段类型的参数指定选项，语法如下：\n属性名=models.字段类型(选项)\n\n### 字段类型\n**使用时需要引入django.db.models包**，字段类型如下：<br>\n**AutoField**：自动增长的IntegerField，通常不用指定，不指定时Django会自动创建属性名为id的自动增长属性。<br>\n**BooleanField**：布尔字段，值为True或False。<br>\n**NullBooleanField**：支持Null、True、False三种值。<br>\n**CharField(max_length=字符长度)**：字符串。\n参数max_length表示最大字符个数。<br>\n**TextField**：大文本字段，一般超过4000个字符时使用。<br>\n**IntegerField**：整数。<br>\n**DecimalField(max_digits=None, decimal_places=None)**：十进制浮点数。\n参数max_digits表示总位数。\n参数decimal_places表示小数位数。<br>\n**FloatField**：浮点数。<br>\n**DateField([auto_now=False, auto_now_add=False])**：日期。<br>\n*参数auto_now表示每次保存对象时，自动设置该字段为当前时间，用于\"最后一次修改\"的时间戳，它总是使用当前日期，默认为false。*<br>\n*参数auto_now_add表示当对象第一次被创建时自动设置当前时间，用于创建的时间戳，它总是使用当前日期，默认为false。*<br>\n**参数auto_now_add和auto_now是相互排斥的，组合将会发生错误。**<br>\n**imeField**：时间，参数同DateField。<br>\n**DateTimeField**：日期时间，参数同DateField。<br>\n**FileField**：上传文件字段。<br>\n**ImageField**：继承于FileField，对上传的内容进行校验，确保是有效的图片。<br>\n\n### 选项\n\n**通过选项实现对字段的约束，选项如下**：<br>\n**null**：如果为True，表示允许为空，默认值是False。<br>\n**blank**：如果为True，则该字段允许为空白，默认值是False。<br>\n***对比：null是数据库范畴的概念，blank是表单验证证范畴的。***<br>\n**db_column**：字段的名称，如果未指定，则使用属性的名称。<br>\n**db_index**：若值为True, 则在表中会为此字段创建索引，默认值是False。<br>\n**default**：默认值。<br>\n**primary_key**：若为True，则该字段会成为模型的主键字段，默认值是False，一般作为AutoField的选项使用。<br>\n**unique**：如果为True, 这个字段在表中必须有唯一值，默认值是False。<br>\n\n---\n\n## 查询\n\n### 查看MySQL的日志文件\n\n1. sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf **68 69行 注释取消**\n2. sudo service mysql restart 重启mysql服务\n3. /var/log/mysql/mysql.log #mysql操作的记录文件。\n4. sudo tail -f /var/log/mysql/mysql.log #实时查看mysql文件的内容。\n\n### 查询MySQL数据库中数据的方法\n\n**get()**:返回表中满足条件的一条且只能有一条数据。<br>\n如果查到多条数据，则抛异常：MultipleObjectsReturned<br>\n查询不到数据，则抛异常：\nDoesNotExist<br>\n\n**all()**:返回模型类对应表格中的所有数据。QuerySet类型，查询集<br>\n\n**filter()**:参数写查询条件，返回满足条件的数据。QuerySet<br>\n*条件格式：模型类属性名__条件名=值*\n\n### 查询条件\n\n1.  判等 exact。<br>\n例：查询编号为1的图书。<br>\nBookInfo.objects.get(id=1)<br>\nBookInfo.objects.get(id__exact=1)\n2.  模糊查询 contains<br>\n例：查询书名包含'传'的图书。<br>\nBookInfo.objects.filter(btitle__contains='传')<br>\n例：查询书名以'部'结尾的图书 endswith 开头:startswith<br>\nBookInfo.objects.filter(btitle__endswith='部')\n3.  空查询 isnull *(select * from booktest_bookinfo where title is not null)*<br>\n例：查询书名不为空的图书。<br>\nBookInfo.objects.filte(btitle__isnull=False)\n4.  范围查询 in *(select * from booktest_bookinfo where id in (1,3,5))*<br>\n例：查询编号为1或3或5的图书。<br>\nBookInfo.objects.filter(id__in = [1,3,5])\n5.  比较查询 <br>\n例：查询编号大于3的图书。gt(大于) lt(小于） gte(大于等于) lte(小于等于)<br>\nBookInfo.objects.filter(id__gt = 3)\n\n6.  日期查询<br>\n例：查询1980年发表的图书。<br>\nBookInfo.objects.filter(bpub_date__year=1980)<br>\n例：查询1980年1月1日后发表的图书。<br>\nfrom datetime import date\nBookInfo.objects.filter(bpub_date__gt = date(1980,1,1))<br>\n7. exclude:返回不满足条件的数据。QuerySet<br>\n例：查询id不为3的图书信息。<br>\nBookInfo.objects.exclude(id=3)<br>\n\n### F对象\n**作用：用于类属性之间的比较条件。**<br>\n使用之前需要先导入：<br>\n**from django.db.models import F**<br>\n例：查询图书阅读量大于评论量图书信息。<br>\nBookInfo.objects.filter(bread__gt = F('bcomment'))<br>\n例：查询图书阅读量大于2倍评论量图书信息。<br>\nBookInfo.objects.filter(bread__gt = F('bcomment')*2)\n\n\n### Q对象\n**作用：用于查询时的逻辑条件。not and or，可以对Q对象进行& | ~操作。**\n使用之前需要先导入：<br>\n**from django.db.models import Q**<br>\n例：查询id大于3且阅读量大于30的图书的信息。<br>\nBookInfo.objects.filter(id__gt=3, bread__gt=30)<br>\nBookInfo.objects.filter(Q(id__gt=3)&Q(bread__gt=30))<br>\n例：查询id大于3或者阅读量大于30的图书的信息。<br>\nBookInfo.objects.filter(Q(id__gt=3)|Q(bread__gt=30))<br>\n例：查询id不等于3图书的信息。<br>\nBookInfo.objects.filter(~Q(id=3))<br>\n### 排序 **order_by** QuerySet\n**作用：进行查询结果进行排序。**<br>\n例：查询所有图书的信息，按照id从小到大进行排序。<br>\nBookInfo.objects.all().order_by('id')<br>\nBookInfo.objects.order_by('id')<br>\n例：查询所有图书的信息，按照id从大到小进行排序。<br>\nBookInfo.objects.all().order_by(**'-id'**)<br>\n例：把id大于3的图书信息按阅读量从大到小排序显示；<br>\nBookInfo.objects.filter(id__gt=3).order_by('-bread')\n\n### 聚合函数\n**作用：对查询结果进行聚合操作。**<br>\n**sum count max min avg**<br>\n**aggregate**：调用这个函数来使用聚合。 返回值是一个字典<br>\n使用前需先导入聚合类： <br>\n**from django.db.models import Sum,Count,Max,Min,Avg**<br>\n例：查询所有图书的数目。Count<br>\nBookInfo.objects.aggregate(Count('id'))<br>\n返回值类型:\n{'id__count': 5}<br>\n例：查询所有图书阅读量的总和。<br>\nBookInfo.objects.aggregate(Sum('bread'))<br>\n返回值类型：\n{'bread__sum': 126}<br>\n**count函数 返回值是一个数字**<br>\n**作用：统计满足条件数据的数目。**<br>\n例：统计所有图书的数目。<br>\nBookInfo.objects.count()<br>\n例：统计id大于3的所有图书的数目。<br>\nBookInfo.objects.filter(id__gt=3).count()<br>\n\n\n**查询相关函数返回值总结：**<br>\n**get**:返回一个对象 <br>\n**all**:QuerySet 返回所有数据<br>\n**filter**:QuerySet 返回满足条件的数据<br>\n**exclude**:QuerySet 返回不满条件的数据 <br>\n**order_by**:QuerySet 对查询结果进行排序<br>\n**aggregate**:字典 进行聚合操作<br>\n**count**:数字 返回查询集中数据的数目<br>\nget,filter,exclude参数中可以写查询条件。<br>\n\n### 查询集\n**all, filter, exclude, order_by调用这些函数会产生一个查询集，可以在查询集上继续调用这些函数。**\n查询集特性：\n1. 惰性查询：只有在实际使用查询集中的数据的时候才会发生对数据库的真正查询。\n2. 缓存：当使用的是同一个查询集时，第一次的时候会发生实际数据库的查询，然后把结果缓存起来，之后再使用这个查询集时，使用的是缓存中的结果。\n限制查询集：<br>\n**可以对一个查询集进行取下标或者切片操作来限制查询集的结果。**<br>\nb[0]就是取出查询集的第一条数据，b[0:1].get()也可取出查询集的第一条数据。如果b[0]不存在，会抛出IndexError异常，如果b[0:1].get()不存在，会抛出DoesNotExist异常。多条时抛MultiObjectsReturned异常\n对一个查询集进行切片操作会产生一个新的查询集，下标不允许为负数。<br>\n**exists**:判断一个查询集中是否有数据。(True False)\n\n---\n\n## 模型类关系\n### 三种关系模式\n1. 一对多关系<br>\n例：图书类-英雄类 \nmodels.ForeignKey() 定义在多的类中。\n2. 多对多关系<br>\n例：新闻类-新闻类型类 体育新闻 国际<br>\nmodels.ManyToManyField() 定义在哪个类中都可以。\n3. 一对一关系<br>\n例：员工基本信息类-员工详细信息类<br>\nmodels.OneToOneField() 定义在哪个类中都可以。\n### 关联查询(一对多)\n**在一对多关系中，一对应的类我们把它叫做一类，多对应的那个类我们把它叫做多类，我们把多类中定义的建立关联的类属性叫做关联属性。**<br>\n例：查询图书id为1的所有英雄的信息。<br>\n    book = BookInfo.objects.get(id=1)<br>\n    book.heroinfo_set.all()<br>\n通过模型类查询：<br>\n    **HeroInfo.objects.filter(hbook_id=1)**<br>\n例：查询id为1的英雄所属图书信息。<br>\n    hero =HeroInfo.objects.get(id=1)<br>\n    hero.hbook<br>\n通过模型类查询：<br>\n    **BookInfo.objects.filter(heroinfo__id=1)**<br>\n    ![1](Django学习图片6.jpg)\n**由一类的对象查询多类的时候：**<br>\n    一类的对象.多类名小写_set.all() #查询所用数据<br>\n**由多类的对象查询一类的时候：**<br>\n    多类的对象.关联属性  #查询多类的对象对应的一类的对象<br>\n**由多类的对象查询一类对象的id时候：**<br>\n    多类的对象. 关联属性_id<br>\n***通过模型类实现关联查询：***<br>\n例：查询图书信息，要求图书中英雄的描述包含'八'。<br>\nBookInfo.objects.filter(heroinfo__hcomment__contains='八')<br>\n例：查询图书信息，要求图书中的英雄的id大于3.<br>\nBookInfo.objects.filter(heroinfo__id__gt=3)<br>\n例：查询书名为“天龙八部”的所有英雄。<br>\nHeroInfo.objects.filter(hbook__btitle='天龙八部')<br>\n**通过多类的条件查询一类的数据：**<br>\n    一类名.objects.filter(多类名小写__多类属性名__条件名) <br>\n**通过一类的条件查询多类的数据：**<br>\n    多类名.objects.filter(关联属性__一类属性名__条件名)<br>\n### 插入，更新和删除\n  调用一个模型类对象的save方法的时候就可以实现对模型类对应数据表的插入和更新。<br>\n调用一个模型类对象的delete方法的时候就可以实现对模型类对应数据表数据的删除。\n### 自关联\n**自关联是一种特殊的一对多的关系。即在一个表中建立外键。**<br>\n注：mysql终端中批量执行sql语句：source areas.sql;\n### 管理器\n在查询语句中都会使用到**类名.objects.方法**，那么objects是什么呢？<br>\nobjects是Django帮我自动生成的管理器对象，通过这个管理器可以实现对数据的查询。<br>\nobjects是models.Manger类的一个对象。自定义管理器之后Django不再帮我们生成默认的objects管理器。\n\n1. 自定义一个管理器类，这个类继承models.Manger类。\n```\nclass BookInfoManager(models.Manager):\n```\n2. 再在具体的模型类里定义一个自定义管理器类的对象。\n```\nobject = 自定义的管理器类()\n```\n自定义管理器类的应用场景：\n1. 改变查询的结果集。\n比如调用BookInfo.books.all()返回的是没有删除的图书的数据。\n2. 添加额外的方法。\n管理器类中定义一个方法帮我们创建对应的模型类对象。\n使用self.model()就可以创建一个跟自定义管理器对应的模型类对象。\n\n![1](Django学习图片14.png)\n\n### 元选项\nDjango默认生成的表名：<br>\n    **应用名小写_模型类名小写。**<br>\n元选项：<br>\n需要在模型类中定义一个元类Meta,在里面定义一个类属性db_table就可以指定表名。\n```\nclass Meta:\n    db_table = '表名'\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/Django.md","raw":"---\ntitle: Django\ndate: 2019-07-23 15:21:52\ntags: python\n---\n# Django 框架\n\n>> **本文基于Linux环境下操作**\n\n## MVT框架\n* M：Model **模型**&emsp;&emsp;作用：和后台数据库进行交互。\n* V：View：**视图**&emsp;&emsp;&nbsp;作用：接受浏览器请求，进行处理并与模型和模板进行交互，返回应答。\n* T: Template **模板**&nbsp;&nbsp;&nbsp;&emsp;作用：产生html页面。\n<!--more-->\n---\n\n## 环境配置\n1. **安装虚拟环境**&nbsp;(仅仅只是Python环境的复制版本，并不是另一套系统)\n```\nsudo pip install virtualenv  # 利用pip下载virtualenv包\n```\n2. **安装虚拟环境扩展包**\n```\nsudo pip install virtualenvwrapper\n```\n3. **编辑家目录下面的.bashrc文件，添加下面两行。**\n```\nexport WORKON_HOME=$HOME/.virtualenvs\nsource /usr/local/bin/virtualenvwrapper.sh\n```\n4. **使用下面的命令使虚拟环境生效**\n```\nsource .bashrc\n```\n5. **创建虚拟环境**\n```\nmkvirtualenv 虚拟环境名  # 此时为Python2的解释器创建\nmkvirtualenv -p python3 bj11_py3\nworkon 虚拟环境名  # 进入虚拟环境工作\nworkon 空格 + 两个tab键  # 查看主机上所有的虚拟环境\ndeactivate  # 退出虚拟环境\nrmvirtualenv 虚拟环境名  #删除虚拟环境\n```\n6. **安装Django环境**\n```\npip install django==1.8.2  # 注意：不能使用sudo安装，sudo会安装到真是的主机环境上，而不是虚拟环境中\npip list  # 可以查看虚拟环境中安装了哪些python包\n```\n---\n\n## 项目创建\n```\ndjango-admin startproject 项目名称\n```\n***注意：创建应用必须先进入虚拟环境。***\n![1](./Django学习图片-1.jpg)\n\n#### 各个文件的说明\n* _ _init_ _.py:说明该项目是一个Python包\n* settings.py:项目配置文件\n* urls.py:进行url路由的配置\n* wsgi.py:web服务器和Django交互的入口\n* manage.py:项目的管理文件\n\n*注：一个项目由多个应用组成，每个应用完成一个特定的功能，在Django中，每个模块使用一个Django应用来开发*\n\n**因此，接下来将了解如何创建一个应用**\n\n## 应用创建\n```\npython manage.py startapp 应用名称   # 创建应用时需先进入到项目目录\n```\n\n![1](./Django学习图片2.jpg)\n\n\n#### 各个文件的说明\n* _ _init__.py:说明该目录是一个Python模块\n* models.py:用来写和数据库交互的功能\n* views.py:定义处理函数，称为视图函数\n* tests.py:用来写测试代码的文件\n* admin.py:网站后台管理的相关文件\n\n**在建立了项目与应用之后，还需要对应用进行注册，才能使该项目和该应用关联**\n\n#### 方法：修改settings.py中的INSTALLED_APPS配置项。\n\n![1](./Django学习图片3.jpg)\n\n### 运行Django框架命令(在项目目录下进行)\n```\npython manage.py runserver\n```\n\n***完成了上述动作之后就已经构建起了基本的Django的框架，接下来就可以向此框架中添加配置了！***\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;![1](./斗图1.jpg)\n\n---\n\n## ORM模型(对象——关系映射)\n\n**Django中内嵌了ORM框架，ORM的作用是将类和数据表进行关联，即只需要对类和对象进行操作就可以对数据库进行更改，并且ORM可以根据设计的类自动生成表。**\n\n**注意：在应用下的model.py文件中设计模型类时，该类必须继承models.Model类**\n![1](./Django学习图片4.png)\n\n如上图所示，bookinfo类继承了models.Model类，并且可以看出bookinfo有两种属性，分别是bittle和bpub_date,代表了图书的名称和出版日期。\n\n## 模型类生成表\n\n**刚刚说到ORM可以根据模型类自动生成表，那么要如何操作呢，接下来就来看看.**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;![1](./斗图2.jpg)\n\n* 生成迁移文件\n```\npython manage.py makemigrations\n```\n\n![1](./Django学习图片5.jpg.png)\n\n* 执行迁移文件生成表\n```\npython manage.py migrate\n```\n**生成表的默认格式：应用名_模型类名(小写)**\n***注意：先在生成的数据库是sqlite3数据库，如果你想看到图形化的数据库界面，可以安装sqliteman，使用如下命令***\n```\nsudo apt-get install sqliteman\nsqliteman     # 即可启动sqliteman查看图形化的sqlite数据库\n```\n#### pip和apt-get的区别\n这里简单介绍一下二者的区别，apt-get一般用于安装软件，而pip是Python管理包的工具，通常用于进行Python包和模块的安装\n\n---\n\n\n## 通过模型类操作数据表\n\n**进入Python shell的命令**\n```\npython manage.py shell\n```\n\n*应当先导入刚才在应用中建立的models类*\n```\nfrom 应用名.models import 类名\n```\n\n**以下为在相互shell终端中演示的例子：**\n```\n1) 向booktest_bookinfo表中插入一条数据。\n    b = BookInfo() #定义一个BookInfo类的对象\n    b.btitle ='天龙八部' #定义b对象的属性并赋值\n    b.bpub_date = date(1990,10,11) \n    b.save() #才会将数据保存进数据库\n\n2）查询出booktest_bookinfo表中id为1的数据。\n    b = BookInfo.objects.get(id=1)\n     \n3）在上一步的基础上改变b对应图书的出版日期。\n    b.bpub_date = date(1989,10,21)\n    b.save() #才会更新表格中的数据\n\n4）紧接上一步，删除b对应的图书的数据。\n    b.delete() #才会删除\n\n5）向booktest_heroInfo表中插入一条数据。\n    h = HeroInfo()\n    h.hname = '郭靖'\n    h.hgender = False\n    h.hcomment = ‘降龙十八掌’\n    b2 = BookInfo.objects.get(id=2)\n    h.hbook = b2  #给关系属性赋值，英雄对象所属的图书对象\n    h.save() \n\n6）查询图书表里面的所有内容。\n    BookInfo.objects.all()\n    HeroInfo.objects.all()\n    \n7）查询出id为2的图书中所有英雄人物的信息。\n    b = BookInfo.objects.get(id=2)\n    b.heroinfo_set.all() #查询出b图书中所有英雄人物的信息\n\n```\n**多类之间的关系**\n![1](./Django学习图片6.jpg)\n\n---\n\n## 后台管理\n1. 本地化\n\n进行语言和时区的本地化\n\n修改settings.py文件。\n![1](./Django学习图片7.png)\n\n2. 创建管理员\n```\npython manage.py createsuperuser\n```\n3. 注册模型类\n\n在应用下的admin.py中注册模型类。\n告诉djang框架根据注册的模型类来生成对应表管理页面。\n![1](./Django学习图片8.png)\n\n---\n\n## 视图\n\n**在Django中，通过浏览器去请求一个页面时，使用视图函数来处理这个请求的，视图函数处理之后，要给浏览器返回页面内容。**\n\n### 视图函数的使用\n\n* 定义视图函数\n\n**视图函数定义在views.py中。**\n例：\n```\ndef index(request):\n    #  进行处理\n    return HttpResponse('hello python')\n```\n视图函数必须有一个参数request，进行处理之后，需要返回一个HttpResponse的类对象，hello python就是返回给浏览器显示的内容。\n\n* 进行URL配置\n\nurl配置的目的是让建立url和视图函数的对应关系。\n\nurl配置项定义在urlpatterns的列表中，每一个配置项都调用url函数。\n\nurl函数有两个参数，第一个参数是一个正则表达式，第二个是对应的处理动作。\n\n配置url时，有两种语法格式：\n1. url(正则表达式，视图函数名)\n2. url(正则表达式，include(应用中的urls文件))\n\n**实际在配置url时，首先在项目的urls.py文件中添加配置项时，并不写具体的url和视图函数之间的对应关系，而是包含具体应用的urls.py文件，在应用的urls.py文件中写url和视图函数的对应关系。**\n\nURL配置方式\n![1](Django学习图片9.png)\n\n### URL的匹配过程\n\n**在项目的urls.py文件中包含具体应用的urls.py文件，应用的urls.py文件中写url和视图函数的对应关系。**\n\n### 匹配方式和运行机制\n\n![1](Django学习图片10.png)\n\n当用户输入如http://127.0.0.1:8000/aindex时， **去除域名和最前面的/，剩下aindex，拿aindex字符串到项目的urls文件中进行匹配，配置成功之后，去除匹配的a字符，那剩下的index字符串继续到项目的urls文件中进行正则匹配，匹配成功之后执行视图函数index** ，index视图函数返回内容hello python给浏览器来显示。\n\n---\n\n## 模板\n\n*不仅仅是一个HTML文件*\n\n### 模板文件的使用\n\n1. 创建模板文件夹(templates文件夹)\n2. 配置模板目录\n\n**在项目文件中修改settings文件，将其TEMPLATES下的'DIRS'改为[os.path.join(BASE_DIR, 'templates')]**\n\n![1](./Django学习图片11.png)\n\n其中BASE_DIR是项目的绝对路径\n\n3. 使用模板文件\n\n**在templates文件夹下建立与应用同名的文件夹，防止混淆**\n\n* 加载模板文件\n\n在模板目录下面获取HTML文件的内容，得到一个模板对象\n```\nfrom django.templates import loader\ntemp = loader.get_template('相对于templates文件的相对路径')\n```\n\n* 定义模板上下文\n```\nfrom django.templates import RequestContext\ncontext = RequestContext(request, {一个字典，替代模板中变量的值})\n```\n\n向模板文件中传递数据\n\n* 模板渲染\n\n得到一个标准的HTML文件\n```\nres_html = temp.render(context)    # 渲染完成的HTML内容\nreturn HttpResponse(res_html)\n```\n\n**以上三点在Django内部已经进行了封装，可直接调用render函数返回**\n```\nreturn render(request, '相对于templates文件的相对路径', {一个字典，替代模板中变量的值})\n```\n\n### 在模板文件中定义变量\n1. 模板变量的使用 ： {{模板变量名}}\n2. for循环的使用 ： \n{% raw %}{% for i in list %}{% endraw %}\n\n{% raw %}{% empty %}{% endraw %}   # 当for循环中没有任何变量时显示的数据\n\n{% raw %}{% endfor %}{% endraw %}\n\n---\n\n## 模型\n\n### Django ORM\n![1](./Django学习图片12.png)\n\n**O：(objects)->类和对象。**<br>\n**R：(Relation)->关系，关系数据库中的表格。**<br>\n**M：（Mapping）->映射。**\n\n### Django ORM 框架的功能\n\n1. 建立模型类和表之间的对应关系，允许我们通过面向对象的方式操作数据库\n2. 根据设计的模型类生成数据库的表格\n3. 通过方便的配置就可以进行数据库的切换\n\n*在此之前使用的数据库都是Django默认的sqlite数据库，接下来我们将对Django配置进行修改，改为熟悉的MySQL数据库*\n### MySQL数据库配置\n\n**修改settings.py中的DATABASES。**\n![1](./Django学习图片13.png)\n***注意：django框架不会自动帮我们生成mysql数据库，所以我们需要自己去创建。***\n\n**切换mysql数据库之后不能启动服务器：**<br>\n安装mysqlPython包: <br>\npython2：\n  pip install mysql-python<br>\npython3:\n安装pymysql:\n  pip install pymysql<br>\n在test1/__init__.py中加如下内容：<br>\n```\nimport pymysql\npymysql.install_as_MySQLdb()\n```\n进行如上操作之后便完成了MySQL数据库的配置！\n\n![1](./斗图3.jpg)\n\n### 重定向\n最后在讲解一下重定向，当浏览器点击某一功能时，仍需要返回原网址。则需使用重定向。\n\n代码如下：\n```\nreturn HttpResponseRedirect('/当前网址')\n\nfrom django.shortcuts import redirct\nreturn redirect('/当前网址')    # 使用Django中封装好的重定向函数redirect返回\n```\n\n---\n\n## 字段属性和选项\n\n**属性命名限制：**\n1. 不能是python的保留关键字。\n2. 不允许使用连续的下划线，这是由django的查询方式决定的。\n3. 定义属性时需要指定字段类型，通过字段类型的参数指定选项，语法如下：\n属性名=models.字段类型(选项)\n\n### 字段类型\n**使用时需要引入django.db.models包**，字段类型如下：<br>\n**AutoField**：自动增长的IntegerField，通常不用指定，不指定时Django会自动创建属性名为id的自动增长属性。<br>\n**BooleanField**：布尔字段，值为True或False。<br>\n**NullBooleanField**：支持Null、True、False三种值。<br>\n**CharField(max_length=字符长度)**：字符串。\n参数max_length表示最大字符个数。<br>\n**TextField**：大文本字段，一般超过4000个字符时使用。<br>\n**IntegerField**：整数。<br>\n**DecimalField(max_digits=None, decimal_places=None)**：十进制浮点数。\n参数max_digits表示总位数。\n参数decimal_places表示小数位数。<br>\n**FloatField**：浮点数。<br>\n**DateField([auto_now=False, auto_now_add=False])**：日期。<br>\n*参数auto_now表示每次保存对象时，自动设置该字段为当前时间，用于\"最后一次修改\"的时间戳，它总是使用当前日期，默认为false。*<br>\n*参数auto_now_add表示当对象第一次被创建时自动设置当前时间，用于创建的时间戳，它总是使用当前日期，默认为false。*<br>\n**参数auto_now_add和auto_now是相互排斥的，组合将会发生错误。**<br>\n**imeField**：时间，参数同DateField。<br>\n**DateTimeField**：日期时间，参数同DateField。<br>\n**FileField**：上传文件字段。<br>\n**ImageField**：继承于FileField，对上传的内容进行校验，确保是有效的图片。<br>\n\n### 选项\n\n**通过选项实现对字段的约束，选项如下**：<br>\n**null**：如果为True，表示允许为空，默认值是False。<br>\n**blank**：如果为True，则该字段允许为空白，默认值是False。<br>\n***对比：null是数据库范畴的概念，blank是表单验证证范畴的。***<br>\n**db_column**：字段的名称，如果未指定，则使用属性的名称。<br>\n**db_index**：若值为True, 则在表中会为此字段创建索引，默认值是False。<br>\n**default**：默认值。<br>\n**primary_key**：若为True，则该字段会成为模型的主键字段，默认值是False，一般作为AutoField的选项使用。<br>\n**unique**：如果为True, 这个字段在表中必须有唯一值，默认值是False。<br>\n\n---\n\n## 查询\n\n### 查看MySQL的日志文件\n\n1. sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf **68 69行 注释取消**\n2. sudo service mysql restart 重启mysql服务\n3. /var/log/mysql/mysql.log #mysql操作的记录文件。\n4. sudo tail -f /var/log/mysql/mysql.log #实时查看mysql文件的内容。\n\n### 查询MySQL数据库中数据的方法\n\n**get()**:返回表中满足条件的一条且只能有一条数据。<br>\n如果查到多条数据，则抛异常：MultipleObjectsReturned<br>\n查询不到数据，则抛异常：\nDoesNotExist<br>\n\n**all()**:返回模型类对应表格中的所有数据。QuerySet类型，查询集<br>\n\n**filter()**:参数写查询条件，返回满足条件的数据。QuerySet<br>\n*条件格式：模型类属性名__条件名=值*\n\n### 查询条件\n\n1.  判等 exact。<br>\n例：查询编号为1的图书。<br>\nBookInfo.objects.get(id=1)<br>\nBookInfo.objects.get(id__exact=1)\n2.  模糊查询 contains<br>\n例：查询书名包含'传'的图书。<br>\nBookInfo.objects.filter(btitle__contains='传')<br>\n例：查询书名以'部'结尾的图书 endswith 开头:startswith<br>\nBookInfo.objects.filter(btitle__endswith='部')\n3.  空查询 isnull *(select * from booktest_bookinfo where title is not null)*<br>\n例：查询书名不为空的图书。<br>\nBookInfo.objects.filte(btitle__isnull=False)\n4.  范围查询 in *(select * from booktest_bookinfo where id in (1,3,5))*<br>\n例：查询编号为1或3或5的图书。<br>\nBookInfo.objects.filter(id__in = [1,3,5])\n5.  比较查询 <br>\n例：查询编号大于3的图书。gt(大于) lt(小于） gte(大于等于) lte(小于等于)<br>\nBookInfo.objects.filter(id__gt = 3)\n\n6.  日期查询<br>\n例：查询1980年发表的图书。<br>\nBookInfo.objects.filter(bpub_date__year=1980)<br>\n例：查询1980年1月1日后发表的图书。<br>\nfrom datetime import date\nBookInfo.objects.filter(bpub_date__gt = date(1980,1,1))<br>\n7. exclude:返回不满足条件的数据。QuerySet<br>\n例：查询id不为3的图书信息。<br>\nBookInfo.objects.exclude(id=3)<br>\n\n### F对象\n**作用：用于类属性之间的比较条件。**<br>\n使用之前需要先导入：<br>\n**from django.db.models import F**<br>\n例：查询图书阅读量大于评论量图书信息。<br>\nBookInfo.objects.filter(bread__gt = F('bcomment'))<br>\n例：查询图书阅读量大于2倍评论量图书信息。<br>\nBookInfo.objects.filter(bread__gt = F('bcomment')*2)\n\n\n### Q对象\n**作用：用于查询时的逻辑条件。not and or，可以对Q对象进行& | ~操作。**\n使用之前需要先导入：<br>\n**from django.db.models import Q**<br>\n例：查询id大于3且阅读量大于30的图书的信息。<br>\nBookInfo.objects.filter(id__gt=3, bread__gt=30)<br>\nBookInfo.objects.filter(Q(id__gt=3)&Q(bread__gt=30))<br>\n例：查询id大于3或者阅读量大于30的图书的信息。<br>\nBookInfo.objects.filter(Q(id__gt=3)|Q(bread__gt=30))<br>\n例：查询id不等于3图书的信息。<br>\nBookInfo.objects.filter(~Q(id=3))<br>\n### 排序 **order_by** QuerySet\n**作用：进行查询结果进行排序。**<br>\n例：查询所有图书的信息，按照id从小到大进行排序。<br>\nBookInfo.objects.all().order_by('id')<br>\nBookInfo.objects.order_by('id')<br>\n例：查询所有图书的信息，按照id从大到小进行排序。<br>\nBookInfo.objects.all().order_by(**'-id'**)<br>\n例：把id大于3的图书信息按阅读量从大到小排序显示；<br>\nBookInfo.objects.filter(id__gt=3).order_by('-bread')\n\n### 聚合函数\n**作用：对查询结果进行聚合操作。**<br>\n**sum count max min avg**<br>\n**aggregate**：调用这个函数来使用聚合。 返回值是一个字典<br>\n使用前需先导入聚合类： <br>\n**from django.db.models import Sum,Count,Max,Min,Avg**<br>\n例：查询所有图书的数目。Count<br>\nBookInfo.objects.aggregate(Count('id'))<br>\n返回值类型:\n{'id__count': 5}<br>\n例：查询所有图书阅读量的总和。<br>\nBookInfo.objects.aggregate(Sum('bread'))<br>\n返回值类型：\n{'bread__sum': 126}<br>\n**count函数 返回值是一个数字**<br>\n**作用：统计满足条件数据的数目。**<br>\n例：统计所有图书的数目。<br>\nBookInfo.objects.count()<br>\n例：统计id大于3的所有图书的数目。<br>\nBookInfo.objects.filter(id__gt=3).count()<br>\n\n\n**查询相关函数返回值总结：**<br>\n**get**:返回一个对象 <br>\n**all**:QuerySet 返回所有数据<br>\n**filter**:QuerySet 返回满足条件的数据<br>\n**exclude**:QuerySet 返回不满条件的数据 <br>\n**order_by**:QuerySet 对查询结果进行排序<br>\n**aggregate**:字典 进行聚合操作<br>\n**count**:数字 返回查询集中数据的数目<br>\nget,filter,exclude参数中可以写查询条件。<br>\n\n### 查询集\n**all, filter, exclude, order_by调用这些函数会产生一个查询集，可以在查询集上继续调用这些函数。**\n查询集特性：\n1. 惰性查询：只有在实际使用查询集中的数据的时候才会发生对数据库的真正查询。\n2. 缓存：当使用的是同一个查询集时，第一次的时候会发生实际数据库的查询，然后把结果缓存起来，之后再使用这个查询集时，使用的是缓存中的结果。\n限制查询集：<br>\n**可以对一个查询集进行取下标或者切片操作来限制查询集的结果。**<br>\nb[0]就是取出查询集的第一条数据，b[0:1].get()也可取出查询集的第一条数据。如果b[0]不存在，会抛出IndexError异常，如果b[0:1].get()不存在，会抛出DoesNotExist异常。多条时抛MultiObjectsReturned异常\n对一个查询集进行切片操作会产生一个新的查询集，下标不允许为负数。<br>\n**exists**:判断一个查询集中是否有数据。(True False)\n\n---\n\n## 模型类关系\n### 三种关系模式\n1. 一对多关系<br>\n例：图书类-英雄类 \nmodels.ForeignKey() 定义在多的类中。\n2. 多对多关系<br>\n例：新闻类-新闻类型类 体育新闻 国际<br>\nmodels.ManyToManyField() 定义在哪个类中都可以。\n3. 一对一关系<br>\n例：员工基本信息类-员工详细信息类<br>\nmodels.OneToOneField() 定义在哪个类中都可以。\n### 关联查询(一对多)\n**在一对多关系中，一对应的类我们把它叫做一类，多对应的那个类我们把它叫做多类，我们把多类中定义的建立关联的类属性叫做关联属性。**<br>\n例：查询图书id为1的所有英雄的信息。<br>\n    book = BookInfo.objects.get(id=1)<br>\n    book.heroinfo_set.all()<br>\n通过模型类查询：<br>\n    **HeroInfo.objects.filter(hbook_id=1)**<br>\n例：查询id为1的英雄所属图书信息。<br>\n    hero =HeroInfo.objects.get(id=1)<br>\n    hero.hbook<br>\n通过模型类查询：<br>\n    **BookInfo.objects.filter(heroinfo__id=1)**<br>\n    ![1](Django学习图片6.jpg)\n**由一类的对象查询多类的时候：**<br>\n    一类的对象.多类名小写_set.all() #查询所用数据<br>\n**由多类的对象查询一类的时候：**<br>\n    多类的对象.关联属性  #查询多类的对象对应的一类的对象<br>\n**由多类的对象查询一类对象的id时候：**<br>\n    多类的对象. 关联属性_id<br>\n***通过模型类实现关联查询：***<br>\n例：查询图书信息，要求图书中英雄的描述包含'八'。<br>\nBookInfo.objects.filter(heroinfo__hcomment__contains='八')<br>\n例：查询图书信息，要求图书中的英雄的id大于3.<br>\nBookInfo.objects.filter(heroinfo__id__gt=3)<br>\n例：查询书名为“天龙八部”的所有英雄。<br>\nHeroInfo.objects.filter(hbook__btitle='天龙八部')<br>\n**通过多类的条件查询一类的数据：**<br>\n    一类名.objects.filter(多类名小写__多类属性名__条件名) <br>\n**通过一类的条件查询多类的数据：**<br>\n    多类名.objects.filter(关联属性__一类属性名__条件名)<br>\n### 插入，更新和删除\n  调用一个模型类对象的save方法的时候就可以实现对模型类对应数据表的插入和更新。<br>\n调用一个模型类对象的delete方法的时候就可以实现对模型类对应数据表数据的删除。\n### 自关联\n**自关联是一种特殊的一对多的关系。即在一个表中建立外键。**<br>\n注：mysql终端中批量执行sql语句：source areas.sql;\n### 管理器\n在查询语句中都会使用到**类名.objects.方法**，那么objects是什么呢？<br>\nobjects是Django帮我自动生成的管理器对象，通过这个管理器可以实现对数据的查询。<br>\nobjects是models.Manger类的一个对象。自定义管理器之后Django不再帮我们生成默认的objects管理器。\n\n1. 自定义一个管理器类，这个类继承models.Manger类。\n```\nclass BookInfoManager(models.Manager):\n```\n2. 再在具体的模型类里定义一个自定义管理器类的对象。\n```\nobject = 自定义的管理器类()\n```\n自定义管理器类的应用场景：\n1. 改变查询的结果集。\n比如调用BookInfo.books.all()返回的是没有删除的图书的数据。\n2. 添加额外的方法。\n管理器类中定义一个方法帮我们创建对应的模型类对象。\n使用self.model()就可以创建一个跟自定义管理器对应的模型类对象。\n\n![1](Django学习图片14.png)\n\n### 元选项\nDjango默认生成的表名：<br>\n    **应用名小写_模型类名小写。**<br>\n元选项：<br>\n需要在模型类中定义一个元类Meta,在里面定义一个类属性db_table就可以指定表名。\n```\nclass Meta:\n    db_table = '表名'\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"Django","published":1,"updated":"2020-07-23T07:55:04.979Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckd0hv9hj0000j7jxeubpf4qx","content":"<h1 id=\"Django-框架\"><a href=\"#Django-框架\" class=\"headerlink\" title=\"Django 框架\"></a>Django 框架</h1><blockquote>\n<blockquote>\n<p><strong>本文基于Linux环境下操作</strong></p>\n</blockquote>\n</blockquote>\n<h2 id=\"MVT框架\"><a href=\"#MVT框架\" class=\"headerlink\" title=\"MVT框架\"></a>MVT框架</h2><ul>\n<li>M：Model <strong>模型</strong>&emsp;&emsp;作用：和后台数据库进行交互。</li>\n<li>V：View：<strong>视图</strong>&emsp;&emsp;&nbsp;作用：接受浏览器请求，进行处理并与模型和模板进行交互，返回应答。</li>\n<li>T: Template <strong>模板</strong>&nbsp;&nbsp;&nbsp;&emsp;作用：产生html页面。<a id=\"more\"></a>\n</li>\n</ul>\n<hr>\n<h2 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h2><ol>\n<li><strong>安装虚拟环境</strong>&nbsp;(仅仅只是Python环境的复制版本，并不是另一套系统)<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pip install virtualenv  # 利用pip下载virtualenv包</span><br></pre></td></tr></table></figure></li>\n<li><strong>安装虚拟环境扩展包</strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pip install virtualenvwrapper</span><br></pre></td></tr></table></figure></li>\n<li><strong>编辑家目录下面的.bashrc文件，添加下面两行。</strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export WORKON_HOME&#x3D;$HOME&#x2F;.virtualenvs</span><br><span class=\"line\">source &#x2F;usr&#x2F;local&#x2F;bin&#x2F;virtualenvwrapper.sh</span><br></pre></td></tr></table></figure></li>\n<li><strong>使用下面的命令使虚拟环境生效</strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source .bashrc</span><br></pre></td></tr></table></figure></li>\n<li><strong>创建虚拟环境</strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkvirtualenv 虚拟环境名  # 此时为Python2的解释器创建</span><br><span class=\"line\">mkvirtualenv -p python3 bj11_py3</span><br><span class=\"line\">workon 虚拟环境名  # 进入虚拟环境工作</span><br><span class=\"line\">workon 空格 + 两个tab键  # 查看主机上所有的虚拟环境</span><br><span class=\"line\">deactivate  # 退出虚拟环境</span><br><span class=\"line\">rmvirtualenv 虚拟环境名  #删除虚拟环境</span><br></pre></td></tr></table></figure></li>\n<li><strong>安装Django环境</strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install django&#x3D;&#x3D;1.8.2  # 注意：不能使用sudo安装，sudo会安装到真是的主机环境上，而不是虚拟环境中</span><br><span class=\"line\">pip list  # 可以查看虚拟环境中安装了哪些python包</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h2 id=\"项目创建\"><a href=\"#项目创建\" class=\"headerlink\" title=\"项目创建\"></a>项目创建</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">django-admin startproject 项目名称</span><br></pre></td></tr></table></figure>\n<p><strong><em>注意：创建应用必须先进入虚拟环境。</em></strong><br><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%87-1.jpg\" alt=\"1\"></p>\n<h4 id=\"各个文件的说明\"><a href=\"#各个文件的说明\" class=\"headerlink\" title=\"各个文件的说明\"></a>各个文件的说明</h4><ul>\n<li>_ <em>init</em> _.py:说明该项目是一个Python包</li>\n<li>settings.py:项目配置文件</li>\n<li>urls.py:进行url路由的配置</li>\n<li>wsgi.py:web服务器和Django交互的入口</li>\n<li>manage.py:项目的管理文件</li>\n</ul>\n<p><em>注：一个项目由多个应用组成，每个应用完成一个特定的功能，在Django中，每个模块使用一个Django应用来开发</em></p>\n<p><strong>因此，接下来将了解如何创建一个应用</strong></p>\n<h2 id=\"应用创建\"><a href=\"#应用创建\" class=\"headerlink\" title=\"应用创建\"></a>应用创建</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py startapp 应用名称   # 创建应用时需先进入到项目目录</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%872.jpg\" alt=\"1\"></p>\n<h4 id=\"各个文件的说明-1\"><a href=\"#各个文件的说明-1\" class=\"headerlink\" title=\"各个文件的说明\"></a>各个文件的说明</h4><ul>\n<li>_ <em>init_</em>.py:说明该目录是一个Python模块</li>\n<li>models.py:用来写和数据库交互的功能</li>\n<li>views.py:定义处理函数，称为视图函数</li>\n<li>tests.py:用来写测试代码的文件</li>\n<li>admin.py:网站后台管理的相关文件</li>\n</ul>\n<p><strong>在建立了项目与应用之后，还需要对应用进行注册，才能使该项目和该应用关联</strong></p>\n<h4 id=\"方法：修改settings-py中的INSTALLED-APPS配置项。\"><a href=\"#方法：修改settings-py中的INSTALLED-APPS配置项。\" class=\"headerlink\" title=\"方法：修改settings.py中的INSTALLED_APPS配置项。\"></a>方法：修改settings.py中的INSTALLED_APPS配置项。</h4><p><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%873.jpg\" alt=\"1\"></p>\n<h3 id=\"运行Django框架命令-在项目目录下进行\"><a href=\"#运行Django框架命令-在项目目录下进行\" class=\"headerlink\" title=\"运行Django框架命令(在项目目录下进行)\"></a>运行Django框架命令(在项目目录下进行)</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py runserver</span><br></pre></td></tr></table></figure>\n\n<p><strong><em>完成了上述动作之后就已经构建起了基本的Django的框架，接下来就可以向此框架中添加配置了！</em></strong></p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/2019/07/23/Django/%E6%96%97%E5%9B%BE1.jpg\" alt=\"1\"></p>\n<hr>\n<h2 id=\"ORM模型-对象——关系映射\"><a href=\"#ORM模型-对象——关系映射\" class=\"headerlink\" title=\"ORM模型(对象——关系映射)\"></a>ORM模型(对象——关系映射)</h2><p><strong>Django中内嵌了ORM框架，ORM的作用是将类和数据表进行关联，即只需要对类和对象进行操作就可以对数据库进行更改，并且ORM可以根据设计的类自动生成表。</strong></p>\n<p><strong>注意：在应用下的model.py文件中设计模型类时，该类必须继承models.Model类</strong><br><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%874.png\" alt=\"1\"></p>\n<p>如上图所示，bookinfo类继承了models.Model类，并且可以看出bookinfo有两种属性，分别是bittle和bpub_date,代表了图书的名称和出版日期。</p>\n<h2 id=\"模型类生成表\"><a href=\"#模型类生成表\" class=\"headerlink\" title=\"模型类生成表\"></a>模型类生成表</h2><p><strong>刚刚说到ORM可以根据模型类自动生成表，那么要如何操作呢，接下来就来看看.</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/2019/07/23/Django/%E6%96%97%E5%9B%BE2.jpg\" alt=\"1\"></p>\n<ul>\n<li>生成迁移文件<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py makemigrations</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%875.jpg.png\" alt=\"1\"></p>\n<ul>\n<li>执行迁移文件生成表<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py migrate</span><br></pre></td></tr></table></figure></li>\n<li><em>生成表的默认格式：应用名_模型类名(小写)*</em></li>\n<li><strong>注意：先在生成的数据库是sqlite3数据库，如果你想看到图形化的数据库界面，可以安装sqliteman，使用如下命令*</strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install sqliteman</span><br><span class=\"line\">sqliteman     # 即可启动sqliteman查看图形化的sqlite数据库</span><br></pre></td></tr></table></figure>\n<h4 id=\"pip和apt-get的区别\"><a href=\"#pip和apt-get的区别\" class=\"headerlink\" title=\"pip和apt-get的区别\"></a>pip和apt-get的区别</h4>这里简单介绍一下二者的区别，apt-get一般用于安装软件，而pip是Python管理包的工具，通常用于进行Python包和模块的安装</li>\n</ul>\n<hr>\n<h2 id=\"通过模型类操作数据表\"><a href=\"#通过模型类操作数据表\" class=\"headerlink\" title=\"通过模型类操作数据表\"></a>通过模型类操作数据表</h2><p><strong>进入Python shell的命令</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py shell</span><br></pre></td></tr></table></figure>\n\n<p><em>应当先导入刚才在应用中建立的models类</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from 应用名.models import 类名</span><br></pre></td></tr></table></figure>\n\n<p><strong>以下为在相互shell终端中演示的例子：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1) 向booktest_bookinfo表中插入一条数据。</span><br><span class=\"line\">    b &#x3D; BookInfo() #定义一个BookInfo类的对象</span><br><span class=\"line\">    b.btitle &#x3D;&#39;天龙八部&#39; #定义b对象的属性并赋值</span><br><span class=\"line\">    b.bpub_date &#x3D; date(1990,10,11) </span><br><span class=\"line\">    b.save() #才会将数据保存进数据库</span><br><span class=\"line\"></span><br><span class=\"line\">2）查询出booktest_bookinfo表中id为1的数据。</span><br><span class=\"line\">    b &#x3D; BookInfo.objects.get(id&#x3D;1)</span><br><span class=\"line\">     </span><br><span class=\"line\">3）在上一步的基础上改变b对应图书的出版日期。</span><br><span class=\"line\">    b.bpub_date &#x3D; date(1989,10,21)</span><br><span class=\"line\">    b.save() #才会更新表格中的数据</span><br><span class=\"line\"></span><br><span class=\"line\">4）紧接上一步，删除b对应的图书的数据。</span><br><span class=\"line\">    b.delete() #才会删除</span><br><span class=\"line\"></span><br><span class=\"line\">5）向booktest_heroInfo表中插入一条数据。</span><br><span class=\"line\">    h &#x3D; HeroInfo()</span><br><span class=\"line\">    h.hname &#x3D; &#39;郭靖&#39;</span><br><span class=\"line\">    h.hgender &#x3D; False</span><br><span class=\"line\">    h.hcomment &#x3D; ‘降龙十八掌’</span><br><span class=\"line\">    b2 &#x3D; BookInfo.objects.get(id&#x3D;2)</span><br><span class=\"line\">    h.hbook &#x3D; b2  #给关系属性赋值，英雄对象所属的图书对象</span><br><span class=\"line\">    h.save() </span><br><span class=\"line\"></span><br><span class=\"line\">6）查询图书表里面的所有内容。</span><br><span class=\"line\">    BookInfo.objects.all()</span><br><span class=\"line\">    HeroInfo.objects.all()</span><br><span class=\"line\">    </span><br><span class=\"line\">7）查询出id为2的图书中所有英雄人物的信息。</span><br><span class=\"line\">    b &#x3D; BookInfo.objects.get(id&#x3D;2)</span><br><span class=\"line\">    b.heroinfo_set.all() #查询出b图书中所有英雄人物的信息</span><br></pre></td></tr></table></figure>\n<p><strong>多类之间的关系</strong><br><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%876.jpg\" alt=\"1\"></p>\n<hr>\n<h2 id=\"后台管理\"><a href=\"#后台管理\" class=\"headerlink\" title=\"后台管理\"></a>后台管理</h2><ol>\n<li>本地化</li>\n</ol>\n<p>进行语言和时区的本地化</p>\n<p>修改settings.py文件。<br><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%877.png\" alt=\"1\"></p>\n<ol start=\"2\">\n<li>创建管理员<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py createsuperuser</span><br></pre></td></tr></table></figure></li>\n<li>注册模型类</li>\n</ol>\n<p>在应用下的admin.py中注册模型类。<br>告诉djang框架根据注册的模型类来生成对应表管理页面。<br><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%878.png\" alt=\"1\"></p>\n<hr>\n<h2 id=\"视图\"><a href=\"#视图\" class=\"headerlink\" title=\"视图\"></a>视图</h2><p><strong>在Django中，通过浏览器去请求一个页面时，使用视图函数来处理这个请求的，视图函数处理之后，要给浏览器返回页面内容。</strong></p>\n<h3 id=\"视图函数的使用\"><a href=\"#视图函数的使用\" class=\"headerlink\" title=\"视图函数的使用\"></a>视图函数的使用</h3><ul>\n<li>定义视图函数</li>\n</ul>\n<p><strong>视图函数定义在views.py中。</strong><br>例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def index(request):</span><br><span class=\"line\">    #  进行处理</span><br><span class=\"line\">    return HttpResponse(&#39;hello python&#39;)</span><br></pre></td></tr></table></figure>\n<p>视图函数必须有一个参数request，进行处理之后，需要返回一个HttpResponse的类对象，hello python就是返回给浏览器显示的内容。</p>\n<ul>\n<li>进行URL配置</li>\n</ul>\n<p>url配置的目的是让建立url和视图函数的对应关系。</p>\n<p>url配置项定义在urlpatterns的列表中，每一个配置项都调用url函数。</p>\n<p>url函数有两个参数，第一个参数是一个正则表达式，第二个是对应的处理动作。</p>\n<p>配置url时，有两种语法格式：</p>\n<ol>\n<li>url(正则表达式，视图函数名)</li>\n<li>url(正则表达式，include(应用中的urls文件))</li>\n</ol>\n<p><strong>实际在配置url时，首先在项目的urls.py文件中添加配置项时，并不写具体的url和视图函数之间的对应关系，而是包含具体应用的urls.py文件，在应用的urls.py文件中写url和视图函数的对应关系。</strong></p>\n<p>URL配置方式<br><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%879.png\" alt=\"1\"></p>\n<h3 id=\"URL的匹配过程\"><a href=\"#URL的匹配过程\" class=\"headerlink\" title=\"URL的匹配过程\"></a>URL的匹配过程</h3><p><strong>在项目的urls.py文件中包含具体应用的urls.py文件，应用的urls.py文件中写url和视图函数的对应关系。</strong></p>\n<h3 id=\"匹配方式和运行机制\"><a href=\"#匹配方式和运行机制\" class=\"headerlink\" title=\"匹配方式和运行机制\"></a>匹配方式和运行机制</h3><p><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%8710.png\" alt=\"1\"></p>\n<p>当用户输入如<a href=\"http://127.0.0.1:8000/aindex时，\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8000/aindex时，</a> <strong>去除域名和最前面的/，剩下aindex，拿aindex字符串到项目的urls文件中进行匹配，配置成功之后，去除匹配的a字符，那剩下的index字符串继续到项目的urls文件中进行正则匹配，匹配成功之后执行视图函数index</strong> ，index视图函数返回内容hello python给浏览器来显示。</p>\n<hr>\n<h2 id=\"模板\"><a href=\"#模板\" class=\"headerlink\" title=\"模板\"></a>模板</h2><p><em>不仅仅是一个HTML文件</em></p>\n<h3 id=\"模板文件的使用\"><a href=\"#模板文件的使用\" class=\"headerlink\" title=\"模板文件的使用\"></a>模板文件的使用</h3><ol>\n<li>创建模板文件夹(templates文件夹)</li>\n<li>配置模板目录</li>\n</ol>\n<p><strong>在项目文件中修改settings文件，将其TEMPLATES下的’DIRS’改为[os.path.join(BASE_DIR, ‘templates’)]</strong></p>\n<p><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%8711.png\" alt=\"1\"></p>\n<p>其中BASE_DIR是项目的绝对路径</p>\n<ol start=\"3\">\n<li>使用模板文件</li>\n</ol>\n<p><strong>在templates文件夹下建立与应用同名的文件夹，防止混淆</strong></p>\n<ul>\n<li>加载模板文件</li>\n</ul>\n<p>在模板目录下面获取HTML文件的内容，得到一个模板对象</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from django.templates import loader</span><br><span class=\"line\">temp &#x3D; loader.get_template(&#39;相对于templates文件的相对路径&#39;)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>定义模板上下文<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from django.templates import RequestContext</span><br><span class=\"line\">context &#x3D; RequestContext(request, &#123;一个字典，替代模板中变量的值&#125;)</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>向模板文件中传递数据</p>\n<ul>\n<li>模板渲染</li>\n</ul>\n<p>得到一个标准的HTML文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res_html &#x3D; temp.render(context)    # 渲染完成的HTML内容</span><br><span class=\"line\">return HttpResponse(res_html)</span><br></pre></td></tr></table></figure>\n\n<p><strong>以上三点在Django内部已经进行了封装，可直接调用render函数返回</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return render(request, &#39;相对于templates文件的相对路径&#39;, &#123;一个字典，替代模板中变量的值&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在模板文件中定义变量\"><a href=\"#在模板文件中定义变量\" class=\"headerlink\" title=\"在模板文件中定义变量\"></a>在模板文件中定义变量</h3><ol>\n<li>模板变量的使用 ： </li>\n<li>for循环的使用 ： {% for i in list %}\n\n</li>\n</ol>\n{% empty %}   # 当for循环中没有任何变量时显示的数据\n\n{% endfor %}\n\n<hr>\n<h2 id=\"模型\"><a href=\"#模型\" class=\"headerlink\" title=\"模型\"></a>模型</h2><h3 id=\"Django-ORM\"><a href=\"#Django-ORM\" class=\"headerlink\" title=\"Django ORM\"></a>Django ORM</h3><p><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%8712.png\" alt=\"1\"></p>\n<p><strong>O：(objects)-&gt;类和对象。</strong><br><br><strong>R：(Relation)-&gt;关系，关系数据库中的表格。</strong><br><br><strong>M：（Mapping）-&gt;映射。</strong></p>\n<h3 id=\"Django-ORM-框架的功能\"><a href=\"#Django-ORM-框架的功能\" class=\"headerlink\" title=\"Django ORM 框架的功能\"></a>Django ORM 框架的功能</h3><ol>\n<li>建立模型类和表之间的对应关系，允许我们通过面向对象的方式操作数据库</li>\n<li>根据设计的模型类生成数据库的表格</li>\n<li>通过方便的配置就可以进行数据库的切换</li>\n</ol>\n<p><em>在此之前使用的数据库都是Django默认的sqlite数据库，接下来我们将对Django配置进行修改，改为熟悉的MySQL数据库</em></p>\n<h3 id=\"MySQL数据库配置\"><a href=\"#MySQL数据库配置\" class=\"headerlink\" title=\"MySQL数据库配置\"></a>MySQL数据库配置</h3><p><strong>修改settings.py中的DATABASES。</strong><br><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%8713.png\" alt=\"1\"><br><strong><em>注意：django框架不会自动帮我们生成mysql数据库，所以我们需要自己去创建。</em></strong></p>\n<p><strong>切换mysql数据库之后不能启动服务器：</strong><br><br>安装mysqlPython包: <br><br>python2：<br>  pip install mysql-python<br><br>python3:<br>安装pymysql:<br>  pip install pymysql<br><br>在test1/<strong>init</strong>.py中加如下内容：<br></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import pymysql</span><br><span class=\"line\">pymysql.install_as_MySQLdb()</span><br></pre></td></tr></table></figure>\n<p>进行如上操作之后便完成了MySQL数据库的配置！</p>\n<p><img src=\"/2019/07/23/Django/%E6%96%97%E5%9B%BE3.jpg\" alt=\"1\"></p>\n<h3 id=\"重定向\"><a href=\"#重定向\" class=\"headerlink\" title=\"重定向\"></a>重定向</h3><p>最后在讲解一下重定向，当浏览器点击某一功能时，仍需要返回原网址。则需使用重定向。</p>\n<p>代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return HttpResponseRedirect(&#39;&#x2F;当前网址&#39;)</span><br><span class=\"line\"></span><br><span class=\"line\">from django.shortcuts import redirct</span><br><span class=\"line\">return redirect(&#39;&#x2F;当前网址&#39;)    # 使用Django中封装好的重定向函数redirect返回</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"字段属性和选项\"><a href=\"#字段属性和选项\" class=\"headerlink\" title=\"字段属性和选项\"></a>字段属性和选项</h2><p><strong>属性命名限制：</strong></p>\n<ol>\n<li>不能是python的保留关键字。</li>\n<li>不允许使用连续的下划线，这是由django的查询方式决定的。</li>\n<li>定义属性时需要指定字段类型，通过字段类型的参数指定选项，语法如下：<br>属性名=models.字段类型(选项)</li>\n</ol>\n<h3 id=\"字段类型\"><a href=\"#字段类型\" class=\"headerlink\" title=\"字段类型\"></a>字段类型</h3><p><strong>使用时需要引入django.db.models包</strong>，字段类型如下：<br><br><strong>AutoField</strong>：自动增长的IntegerField，通常不用指定，不指定时Django会自动创建属性名为id的自动增长属性。<br><br><strong>BooleanField</strong>：布尔字段，值为True或False。<br><br><strong>NullBooleanField</strong>：支持Null、True、False三种值。<br><br><strong>CharField(max_length=字符长度)</strong>：字符串。<br>参数max_length表示最大字符个数。<br><br><strong>TextField</strong>：大文本字段，一般超过4000个字符时使用。<br><br><strong>IntegerField</strong>：整数。<br><br><strong>DecimalField(max_digits=None, decimal_places=None)</strong>：十进制浮点数。<br>参数max_digits表示总位数。<br>参数decimal_places表示小数位数。<br><br><strong>FloatField</strong>：浮点数。<br><br><strong>DateField([auto_now=False, auto_now_add=False])</strong>：日期。<br><br><em>参数auto_now表示每次保存对象时，自动设置该字段为当前时间，用于”最后一次修改”的时间戳，它总是使用当前日期，默认为false。</em><br><br><em>参数auto_now_add表示当对象第一次被创建时自动设置当前时间，用于创建的时间戳，它总是使用当前日期，默认为false。</em><br><br><strong>参数auto_now_add和auto_now是相互排斥的，组合将会发生错误。</strong><br><br><strong>imeField</strong>：时间，参数同DateField。<br><br><strong>DateTimeField</strong>：日期时间，参数同DateField。<br><br><strong>FileField</strong>：上传文件字段。<br><br><strong>ImageField</strong>：继承于FileField，对上传的内容进行校验，确保是有效的图片。<br></p>\n<h3 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"选项\"></a>选项</h3><p><strong>通过选项实现对字段的约束，选项如下</strong>：<br><br><strong>null</strong>：如果为True，表示允许为空，默认值是False。<br><br><strong>blank</strong>：如果为True，则该字段允许为空白，默认值是False。<br><br><strong><em>对比：null是数据库范畴的概念，blank是表单验证证范畴的。</em></strong><br><br><strong>db_column</strong>：字段的名称，如果未指定，则使用属性的名称。<br><br><strong>db_index</strong>：若值为True, 则在表中会为此字段创建索引，默认值是False。<br><br><strong>default</strong>：默认值。<br><br><strong>primary_key</strong>：若为True，则该字段会成为模型的主键字段，默认值是False，一般作为AutoField的选项使用。<br><br><strong>unique</strong>：如果为True, 这个字段在表中必须有唯一值，默认值是False。<br></p>\n<hr>\n<h2 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h2><h3 id=\"查看MySQL的日志文件\"><a href=\"#查看MySQL的日志文件\" class=\"headerlink\" title=\"查看MySQL的日志文件\"></a>查看MySQL的日志文件</h3><ol>\n<li>sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf <strong>68 69行 注释取消</strong></li>\n<li>sudo service mysql restart 重启mysql服务</li>\n<li>/var/log/mysql/mysql.log #mysql操作的记录文件。</li>\n<li>sudo tail -f /var/log/mysql/mysql.log #实时查看mysql文件的内容。</li>\n</ol>\n<h3 id=\"查询MySQL数据库中数据的方法\"><a href=\"#查询MySQL数据库中数据的方法\" class=\"headerlink\" title=\"查询MySQL数据库中数据的方法\"></a>查询MySQL数据库中数据的方法</h3><p><strong>get()</strong>:返回表中满足条件的一条且只能有一条数据。<br><br>如果查到多条数据，则抛异常：MultipleObjectsReturned<br><br>查询不到数据，则抛异常：<br>DoesNotExist<br></p>\n<p><strong>all()</strong>:返回模型类对应表格中的所有数据。QuerySet类型，查询集<br></p>\n<p><strong>filter()</strong>:参数写查询条件，返回满足条件的数据。QuerySet<br><br><em>条件格式：模型类属性名__条件名=值</em></p>\n<h3 id=\"查询条件\"><a href=\"#查询条件\" class=\"headerlink\" title=\"查询条件\"></a>查询条件</h3><ol>\n<li><p>判等 exact。<br><br>例：查询编号为1的图书。<br><br>BookInfo.objects.get(id=1)<br><br>BookInfo.objects.get(id__exact=1)</p>\n</li>\n<li><p>模糊查询 contains<br><br>例：查询书名包含’传’的图书。<br><br>BookInfo.objects.filter(btitle__contains=’传’)<br><br>例：查询书名以’部’结尾的图书 endswith 开头:startswith<br><br>BookInfo.objects.filter(btitle__endswith=’部’)</p>\n</li>\n<li><p>空查询 isnull <em>(select * from booktest_bookinfo where title is not null)</em><br><br>例：查询书名不为空的图书。<br><br>BookInfo.objects.filte(btitle__isnull=False)</p>\n</li>\n<li><p>范围查询 in <em>(select * from booktest_bookinfo where id in (1,3,5))</em><br><br>例：查询编号为1或3或5的图书。<br><br>BookInfo.objects.filter(id__in = [1,3,5])</p>\n</li>\n<li><p>比较查询 <br><br>例：查询编号大于3的图书。gt(大于) lt(小于） gte(大于等于) lte(小于等于)<br><br>BookInfo.objects.filter(id__gt = 3)</p>\n</li>\n<li><p>日期查询<br><br>例：查询1980年发表的图书。<br><br>BookInfo.objects.filter(bpub_date__year=1980)<br><br>例：查询1980年1月1日后发表的图书。<br><br>from datetime import date<br>BookInfo.objects.filter(bpub_date__gt = date(1980,1,1))<br></p>\n</li>\n<li><p>exclude:返回不满足条件的数据。QuerySet<br><br>例：查询id不为3的图书信息。<br><br>BookInfo.objects.exclude(id=3)<br></p>\n</li>\n</ol>\n<h3 id=\"F对象\"><a href=\"#F对象\" class=\"headerlink\" title=\"F对象\"></a>F对象</h3><p><strong>作用：用于类属性之间的比较条件。</strong><br><br>使用之前需要先导入：<br><br><strong>from django.db.models import F</strong><br><br>例：查询图书阅读量大于评论量图书信息。<br><br>BookInfo.objects.filter(bread__gt = F(‘bcomment’))<br><br>例：查询图书阅读量大于2倍评论量图书信息。<br><br>BookInfo.objects.filter(bread__gt = F(‘bcomment’)*2)</p>\n<h3 id=\"Q对象\"><a href=\"#Q对象\" class=\"headerlink\" title=\"Q对象\"></a>Q对象</h3><p><strong>作用：用于查询时的逻辑条件。not and or，可以对Q对象进行&amp; | ~操作。</strong><br>使用之前需要先导入：<br><br><strong>from django.db.models import Q</strong><br><br>例：查询id大于3且阅读量大于30的图书的信息。<br><br>BookInfo.objects.filter(id__gt=3, bread__gt=30)<br><br>BookInfo.objects.filter(Q(id__gt=3)&amp;Q(bread__gt=30))<br><br>例：查询id大于3或者阅读量大于30的图书的信息。<br><br>BookInfo.objects.filter(Q(id__gt=3)|Q(bread__gt=30))<br><br>例：查询id不等于3图书的信息。<br><br>BookInfo.objects.filter(~Q(id=3))<br></p>\n<h3 id=\"排序-order-by-QuerySet\"><a href=\"#排序-order-by-QuerySet\" class=\"headerlink\" title=\"排序 order_by QuerySet\"></a>排序 <strong>order_by</strong> QuerySet</h3><p><strong>作用：进行查询结果进行排序。</strong><br><br>例：查询所有图书的信息，按照id从小到大进行排序。<br><br>BookInfo.objects.all().order_by(‘id’)<br><br>BookInfo.objects.order_by(‘id’)<br><br>例：查询所有图书的信息，按照id从大到小进行排序。<br><br>BookInfo.objects.all().order_by(<strong>‘-id’</strong>)<br><br>例：把id大于3的图书信息按阅读量从大到小排序显示；<br><br>BookInfo.objects.filter(id__gt=3).order_by(‘-bread’)</p>\n<h3 id=\"聚合函数\"><a href=\"#聚合函数\" class=\"headerlink\" title=\"聚合函数\"></a>聚合函数</h3><p><strong>作用：对查询结果进行聚合操作。</strong><br><br><strong>sum count max min avg</strong><br><br><strong>aggregate</strong>：调用这个函数来使用聚合。 返回值是一个字典<br><br>使用前需先导入聚合类： <br><br><strong>from django.db.models import Sum,Count,Max,Min,Avg</strong><br><br>例：查询所有图书的数目。Count<br><br>BookInfo.objects.aggregate(Count(‘id’))<br><br>返回值类型:<br>{‘id__count’: 5}<br><br>例：查询所有图书阅读量的总和。<br><br>BookInfo.objects.aggregate(Sum(‘bread’))<br><br>返回值类型：<br>{‘bread__sum’: 126}<br><br><strong>count函数 返回值是一个数字</strong><br><br><strong>作用：统计满足条件数据的数目。</strong><br><br>例：统计所有图书的数目。<br><br>BookInfo.objects.count()<br><br>例：统计id大于3的所有图书的数目。<br><br>BookInfo.objects.filter(id__gt=3).count()<br></p>\n<p><strong>查询相关函数返回值总结：</strong><br><br><strong>get</strong>:返回一个对象 <br><br><strong>all</strong>:QuerySet 返回所有数据<br><br><strong>filter</strong>:QuerySet 返回满足条件的数据<br><br><strong>exclude</strong>:QuerySet 返回不满条件的数据 <br><br><strong>order_by</strong>:QuerySet 对查询结果进行排序<br><br><strong>aggregate</strong>:字典 进行聚合操作<br><br><strong>count</strong>:数字 返回查询集中数据的数目<br><br>get,filter,exclude参数中可以写查询条件。<br></p>\n<h3 id=\"查询集\"><a href=\"#查询集\" class=\"headerlink\" title=\"查询集\"></a>查询集</h3><p><strong>all, filter, exclude, order_by调用这些函数会产生一个查询集，可以在查询集上继续调用这些函数。</strong><br>查询集特性：</p>\n<ol>\n<li>惰性查询：只有在实际使用查询集中的数据的时候才会发生对数据库的真正查询。</li>\n<li>缓存：当使用的是同一个查询集时，第一次的时候会发生实际数据库的查询，然后把结果缓存起来，之后再使用这个查询集时，使用的是缓存中的结果。<br>限制查询集：<br></li>\n</ol>\n<p><strong>可以对一个查询集进行取下标或者切片操作来限制查询集的结果。</strong><br><br>b[0]就是取出查询集的第一条数据，b[0:1].get()也可取出查询集的第一条数据。如果b[0]不存在，会抛出IndexError异常，如果b[0:1].get()不存在，会抛出DoesNotExist异常。多条时抛MultiObjectsReturned异常<br>对一个查询集进行切片操作会产生一个新的查询集，下标不允许为负数。<br><br><strong>exists</strong>:判断一个查询集中是否有数据。(True False)</p>\n<hr>\n<h2 id=\"模型类关系\"><a href=\"#模型类关系\" class=\"headerlink\" title=\"模型类关系\"></a>模型类关系</h2><h3 id=\"三种关系模式\"><a href=\"#三种关系模式\" class=\"headerlink\" title=\"三种关系模式\"></a>三种关系模式</h3><ol>\n<li>一对多关系<br><br>例：图书类-英雄类<br>models.ForeignKey() 定义在多的类中。</li>\n<li>多对多关系<br><br>例：新闻类-新闻类型类 体育新闻 国际<br><br>models.ManyToManyField() 定义在哪个类中都可以。</li>\n<li>一对一关系<br><br>例：员工基本信息类-员工详细信息类<br><br>models.OneToOneField() 定义在哪个类中都可以。<h3 id=\"关联查询-一对多\"><a href=\"#关联查询-一对多\" class=\"headerlink\" title=\"关联查询(一对多)\"></a>关联查询(一对多)</h3></li>\n</ol>\n<p><strong>在一对多关系中，一对应的类我们把它叫做一类，多对应的那个类我们把它叫做多类，我们把多类中定义的建立关联的类属性叫做关联属性。</strong><br><br>例：查询图书id为1的所有英雄的信息。<br><br>    book = BookInfo.objects.get(id=1)<br><br>    book.heroinfo_set.all()<br><br>通过模型类查询：<br><br>    <strong>HeroInfo.objects.filter(hbook_id=1)</strong><br><br>例：查询id为1的英雄所属图书信息。<br><br>    hero =HeroInfo.objects.get(id=1)<br><br>    hero.hbook<br><br>通过模型类查询：<br><br>    <strong>BookInfo.objects.filter(heroinfo__id=1)</strong><br><br>    <img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%876.jpg\" alt=\"1\"><br><strong>由一类的对象查询多类的时候：</strong><br><br>    一类的对象.多类名小写_set.all() #查询所用数据<br><br><strong>由多类的对象查询一类的时候：</strong><br><br>    多类的对象.关联属性  #查询多类的对象对应的一类的对象<br><br><strong>由多类的对象查询一类对象的id时候：</strong><br><br>    多类的对象. 关联属性_id<br><br><strong><em>通过模型类实现关联查询：</em></strong><br><br>例：查询图书信息，要求图书中英雄的描述包含’八’。<br><br>BookInfo.objects.filter(heroinfo__hcomment__contains=’八’)<br><br>例：查询图书信息，要求图书中的英雄的id大于3.<br><br>BookInfo.objects.filter(heroinfo__id__gt=3)<br><br>例：查询书名为“天龙八部”的所有英雄。<br><br>HeroInfo.objects.filter(hbook__btitle=’天龙八部’)<br><br><strong>通过多类的条件查询一类的数据：</strong><br><br>    一类名.objects.filter(多类名小写<strong>多类属性名</strong>条件名) <br><br><strong>通过一类的条件查询多类的数据：</strong><br><br>    多类名.objects.filter(关联属性<strong>一类属性名</strong>条件名)<br></p>\n<h3 id=\"插入，更新和删除\"><a href=\"#插入，更新和删除\" class=\"headerlink\" title=\"插入，更新和删除\"></a>插入，更新和删除</h3><p>  调用一个模型类对象的save方法的时候就可以实现对模型类对应数据表的插入和更新。<br><br>调用一个模型类对象的delete方法的时候就可以实现对模型类对应数据表数据的删除。</p>\n<h3 id=\"自关联\"><a href=\"#自关联\" class=\"headerlink\" title=\"自关联\"></a>自关联</h3><p><strong>自关联是一种特殊的一对多的关系。即在一个表中建立外键。</strong><br><br>注：mysql终端中批量执行sql语句：source areas.sql;</p>\n<h3 id=\"管理器\"><a href=\"#管理器\" class=\"headerlink\" title=\"管理器\"></a>管理器</h3><p>在查询语句中都会使用到<strong>类名.objects.方法</strong>，那么objects是什么呢？<br><br>objects是Django帮我自动生成的管理器对象，通过这个管理器可以实现对数据的查询。<br><br>objects是models.Manger类的一个对象。自定义管理器之后Django不再帮我们生成默认的objects管理器。</p>\n<ol>\n<li>自定义一个管理器类，这个类继承models.Manger类。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class BookInfoManager(models.Manager):</span><br></pre></td></tr></table></figure></li>\n<li>再在具体的模型类里定义一个自定义管理器类的对象。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">object &#x3D; 自定义的管理器类()</span><br></pre></td></tr></table></figure>\n自定义管理器类的应用场景：</li>\n<li>改变查询的结果集。<br>比如调用BookInfo.books.all()返回的是没有删除的图书的数据。</li>\n<li>添加额外的方法。<br>管理器类中定义一个方法帮我们创建对应的模型类对象。<br>使用self.model()就可以创建一个跟自定义管理器对应的模型类对象。</li>\n</ol>\n<p><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%8714.png\" alt=\"1\"></p>\n<h3 id=\"元选项\"><a href=\"#元选项\" class=\"headerlink\" title=\"元选项\"></a>元选项</h3><p>Django默认生成的表名：<br><br>    <strong>应用名小写_模型类名小写。</strong><br><br>元选项：<br><br>需要在模型类中定义一个元类Meta,在里面定义一个类属性db_table就可以指定表名。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Meta:</span><br><span class=\"line\">    db_table &#x3D; &#39;表名&#39;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","site":{"data":{}},"excerpt":"<h1 id=\"Django-框架\"><a href=\"#Django-框架\" class=\"headerlink\" title=\"Django 框架\"></a>Django 框架</h1><blockquote>\n<blockquote>\n<p><strong>本文基于Linux环境下操作</strong></p>\n</blockquote>\n</blockquote>\n<h2 id=\"MVT框架\"><a href=\"#MVT框架\" class=\"headerlink\" title=\"MVT框架\"></a>MVT框架</h2><ul>\n<li>M：Model <strong>模型</strong>&emsp;&emsp;作用：和后台数据库进行交互。</li>\n<li>V：View：<strong>视图</strong>&emsp;&emsp;&nbsp;作用：接受浏览器请求，进行处理并与模型和模板进行交互，返回应答。</li>\n<li>T: Template <strong>模板</strong>&nbsp;&nbsp;&nbsp;&emsp;作用：产生html页面。</li></ul>","more":"\n\n<hr>\n<h2 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h2><ol>\n<li><strong>安装虚拟环境</strong>&nbsp;(仅仅只是Python环境的复制版本，并不是另一套系统)<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pip install virtualenv  # 利用pip下载virtualenv包</span><br></pre></td></tr></table></figure></li>\n<li><strong>安装虚拟环境扩展包</strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pip install virtualenvwrapper</span><br></pre></td></tr></table></figure></li>\n<li><strong>编辑家目录下面的.bashrc文件，添加下面两行。</strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export WORKON_HOME&#x3D;$HOME&#x2F;.virtualenvs</span><br><span class=\"line\">source &#x2F;usr&#x2F;local&#x2F;bin&#x2F;virtualenvwrapper.sh</span><br></pre></td></tr></table></figure></li>\n<li><strong>使用下面的命令使虚拟环境生效</strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source .bashrc</span><br></pre></td></tr></table></figure></li>\n<li><strong>创建虚拟环境</strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkvirtualenv 虚拟环境名  # 此时为Python2的解释器创建</span><br><span class=\"line\">mkvirtualenv -p python3 bj11_py3</span><br><span class=\"line\">workon 虚拟环境名  # 进入虚拟环境工作</span><br><span class=\"line\">workon 空格 + 两个tab键  # 查看主机上所有的虚拟环境</span><br><span class=\"line\">deactivate  # 退出虚拟环境</span><br><span class=\"line\">rmvirtualenv 虚拟环境名  #删除虚拟环境</span><br></pre></td></tr></table></figure></li>\n<li><strong>安装Django环境</strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install django&#x3D;&#x3D;1.8.2  # 注意：不能使用sudo安装，sudo会安装到真是的主机环境上，而不是虚拟环境中</span><br><span class=\"line\">pip list  # 可以查看虚拟环境中安装了哪些python包</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h2 id=\"项目创建\"><a href=\"#项目创建\" class=\"headerlink\" title=\"项目创建\"></a>项目创建</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">django-admin startproject 项目名称</span><br></pre></td></tr></table></figure>\n<p><strong><em>注意：创建应用必须先进入虚拟环境。</em></strong><br><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%87-1.jpg\" alt=\"1\"></p>\n<h4 id=\"各个文件的说明\"><a href=\"#各个文件的说明\" class=\"headerlink\" title=\"各个文件的说明\"></a>各个文件的说明</h4><ul>\n<li>_ <em>init</em> _.py:说明该项目是一个Python包</li>\n<li>settings.py:项目配置文件</li>\n<li>urls.py:进行url路由的配置</li>\n<li>wsgi.py:web服务器和Django交互的入口</li>\n<li>manage.py:项目的管理文件</li>\n</ul>\n<p><em>注：一个项目由多个应用组成，每个应用完成一个特定的功能，在Django中，每个模块使用一个Django应用来开发</em></p>\n<p><strong>因此，接下来将了解如何创建一个应用</strong></p>\n<h2 id=\"应用创建\"><a href=\"#应用创建\" class=\"headerlink\" title=\"应用创建\"></a>应用创建</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py startapp 应用名称   # 创建应用时需先进入到项目目录</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%872.jpg\" alt=\"1\"></p>\n<h4 id=\"各个文件的说明-1\"><a href=\"#各个文件的说明-1\" class=\"headerlink\" title=\"各个文件的说明\"></a>各个文件的说明</h4><ul>\n<li>_ <em>init_</em>.py:说明该目录是一个Python模块</li>\n<li>models.py:用来写和数据库交互的功能</li>\n<li>views.py:定义处理函数，称为视图函数</li>\n<li>tests.py:用来写测试代码的文件</li>\n<li>admin.py:网站后台管理的相关文件</li>\n</ul>\n<p><strong>在建立了项目与应用之后，还需要对应用进行注册，才能使该项目和该应用关联</strong></p>\n<h4 id=\"方法：修改settings-py中的INSTALLED-APPS配置项。\"><a href=\"#方法：修改settings-py中的INSTALLED-APPS配置项。\" class=\"headerlink\" title=\"方法：修改settings.py中的INSTALLED_APPS配置项。\"></a>方法：修改settings.py中的INSTALLED_APPS配置项。</h4><p><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%873.jpg\" alt=\"1\"></p>\n<h3 id=\"运行Django框架命令-在项目目录下进行\"><a href=\"#运行Django框架命令-在项目目录下进行\" class=\"headerlink\" title=\"运行Django框架命令(在项目目录下进行)\"></a>运行Django框架命令(在项目目录下进行)</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py runserver</span><br></pre></td></tr></table></figure>\n\n<p><strong><em>完成了上述动作之后就已经构建起了基本的Django的框架，接下来就可以向此框架中添加配置了！</em></strong></p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/2019/07/23/Django/%E6%96%97%E5%9B%BE1.jpg\" alt=\"1\"></p>\n<hr>\n<h2 id=\"ORM模型-对象——关系映射\"><a href=\"#ORM模型-对象——关系映射\" class=\"headerlink\" title=\"ORM模型(对象——关系映射)\"></a>ORM模型(对象——关系映射)</h2><p><strong>Django中内嵌了ORM框架，ORM的作用是将类和数据表进行关联，即只需要对类和对象进行操作就可以对数据库进行更改，并且ORM可以根据设计的类自动生成表。</strong></p>\n<p><strong>注意：在应用下的model.py文件中设计模型类时，该类必须继承models.Model类</strong><br><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%874.png\" alt=\"1\"></p>\n<p>如上图所示，bookinfo类继承了models.Model类，并且可以看出bookinfo有两种属性，分别是bittle和bpub_date,代表了图书的名称和出版日期。</p>\n<h2 id=\"模型类生成表\"><a href=\"#模型类生成表\" class=\"headerlink\" title=\"模型类生成表\"></a>模型类生成表</h2><p><strong>刚刚说到ORM可以根据模型类自动生成表，那么要如何操作呢，接下来就来看看.</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/2019/07/23/Django/%E6%96%97%E5%9B%BE2.jpg\" alt=\"1\"></p>\n<ul>\n<li>生成迁移文件<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py makemigrations</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%875.jpg.png\" alt=\"1\"></p>\n<ul>\n<li>执行迁移文件生成表<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py migrate</span><br></pre></td></tr></table></figure></li>\n<li><em>生成表的默认格式：应用名_模型类名(小写)*</em></li>\n<li><strong>注意：先在生成的数据库是sqlite3数据库，如果你想看到图形化的数据库界面，可以安装sqliteman，使用如下命令*</strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install sqliteman</span><br><span class=\"line\">sqliteman     # 即可启动sqliteman查看图形化的sqlite数据库</span><br></pre></td></tr></table></figure>\n<h4 id=\"pip和apt-get的区别\"><a href=\"#pip和apt-get的区别\" class=\"headerlink\" title=\"pip和apt-get的区别\"></a>pip和apt-get的区别</h4>这里简单介绍一下二者的区别，apt-get一般用于安装软件，而pip是Python管理包的工具，通常用于进行Python包和模块的安装</li>\n</ul>\n<hr>\n<h2 id=\"通过模型类操作数据表\"><a href=\"#通过模型类操作数据表\" class=\"headerlink\" title=\"通过模型类操作数据表\"></a>通过模型类操作数据表</h2><p><strong>进入Python shell的命令</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py shell</span><br></pre></td></tr></table></figure>\n\n<p><em>应当先导入刚才在应用中建立的models类</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from 应用名.models import 类名</span><br></pre></td></tr></table></figure>\n\n<p><strong>以下为在相互shell终端中演示的例子：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1) 向booktest_bookinfo表中插入一条数据。</span><br><span class=\"line\">    b &#x3D; BookInfo() #定义一个BookInfo类的对象</span><br><span class=\"line\">    b.btitle &#x3D;&#39;天龙八部&#39; #定义b对象的属性并赋值</span><br><span class=\"line\">    b.bpub_date &#x3D; date(1990,10,11) </span><br><span class=\"line\">    b.save() #才会将数据保存进数据库</span><br><span class=\"line\"></span><br><span class=\"line\">2）查询出booktest_bookinfo表中id为1的数据。</span><br><span class=\"line\">    b &#x3D; BookInfo.objects.get(id&#x3D;1)</span><br><span class=\"line\">     </span><br><span class=\"line\">3）在上一步的基础上改变b对应图书的出版日期。</span><br><span class=\"line\">    b.bpub_date &#x3D; date(1989,10,21)</span><br><span class=\"line\">    b.save() #才会更新表格中的数据</span><br><span class=\"line\"></span><br><span class=\"line\">4）紧接上一步，删除b对应的图书的数据。</span><br><span class=\"line\">    b.delete() #才会删除</span><br><span class=\"line\"></span><br><span class=\"line\">5）向booktest_heroInfo表中插入一条数据。</span><br><span class=\"line\">    h &#x3D; HeroInfo()</span><br><span class=\"line\">    h.hname &#x3D; &#39;郭靖&#39;</span><br><span class=\"line\">    h.hgender &#x3D; False</span><br><span class=\"line\">    h.hcomment &#x3D; ‘降龙十八掌’</span><br><span class=\"line\">    b2 &#x3D; BookInfo.objects.get(id&#x3D;2)</span><br><span class=\"line\">    h.hbook &#x3D; b2  #给关系属性赋值，英雄对象所属的图书对象</span><br><span class=\"line\">    h.save() </span><br><span class=\"line\"></span><br><span class=\"line\">6）查询图书表里面的所有内容。</span><br><span class=\"line\">    BookInfo.objects.all()</span><br><span class=\"line\">    HeroInfo.objects.all()</span><br><span class=\"line\">    </span><br><span class=\"line\">7）查询出id为2的图书中所有英雄人物的信息。</span><br><span class=\"line\">    b &#x3D; BookInfo.objects.get(id&#x3D;2)</span><br><span class=\"line\">    b.heroinfo_set.all() #查询出b图书中所有英雄人物的信息</span><br></pre></td></tr></table></figure>\n<p><strong>多类之间的关系</strong><br><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%876.jpg\" alt=\"1\"></p>\n<hr>\n<h2 id=\"后台管理\"><a href=\"#后台管理\" class=\"headerlink\" title=\"后台管理\"></a>后台管理</h2><ol>\n<li>本地化</li>\n</ol>\n<p>进行语言和时区的本地化</p>\n<p>修改settings.py文件。<br><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%877.png\" alt=\"1\"></p>\n<ol start=\"2\">\n<li>创建管理员<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py createsuperuser</span><br></pre></td></tr></table></figure></li>\n<li>注册模型类</li>\n</ol>\n<p>在应用下的admin.py中注册模型类。<br>告诉djang框架根据注册的模型类来生成对应表管理页面。<br><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%878.png\" alt=\"1\"></p>\n<hr>\n<h2 id=\"视图\"><a href=\"#视图\" class=\"headerlink\" title=\"视图\"></a>视图</h2><p><strong>在Django中，通过浏览器去请求一个页面时，使用视图函数来处理这个请求的，视图函数处理之后，要给浏览器返回页面内容。</strong></p>\n<h3 id=\"视图函数的使用\"><a href=\"#视图函数的使用\" class=\"headerlink\" title=\"视图函数的使用\"></a>视图函数的使用</h3><ul>\n<li>定义视图函数</li>\n</ul>\n<p><strong>视图函数定义在views.py中。</strong><br>例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def index(request):</span><br><span class=\"line\">    #  进行处理</span><br><span class=\"line\">    return HttpResponse(&#39;hello python&#39;)</span><br></pre></td></tr></table></figure>\n<p>视图函数必须有一个参数request，进行处理之后，需要返回一个HttpResponse的类对象，hello python就是返回给浏览器显示的内容。</p>\n<ul>\n<li>进行URL配置</li>\n</ul>\n<p>url配置的目的是让建立url和视图函数的对应关系。</p>\n<p>url配置项定义在urlpatterns的列表中，每一个配置项都调用url函数。</p>\n<p>url函数有两个参数，第一个参数是一个正则表达式，第二个是对应的处理动作。</p>\n<p>配置url时，有两种语法格式：</p>\n<ol>\n<li>url(正则表达式，视图函数名)</li>\n<li>url(正则表达式，include(应用中的urls文件))</li>\n</ol>\n<p><strong>实际在配置url时，首先在项目的urls.py文件中添加配置项时，并不写具体的url和视图函数之间的对应关系，而是包含具体应用的urls.py文件，在应用的urls.py文件中写url和视图函数的对应关系。</strong></p>\n<p>URL配置方式<br><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%879.png\" alt=\"1\"></p>\n<h3 id=\"URL的匹配过程\"><a href=\"#URL的匹配过程\" class=\"headerlink\" title=\"URL的匹配过程\"></a>URL的匹配过程</h3><p><strong>在项目的urls.py文件中包含具体应用的urls.py文件，应用的urls.py文件中写url和视图函数的对应关系。</strong></p>\n<h3 id=\"匹配方式和运行机制\"><a href=\"#匹配方式和运行机制\" class=\"headerlink\" title=\"匹配方式和运行机制\"></a>匹配方式和运行机制</h3><p><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%8710.png\" alt=\"1\"></p>\n<p>当用户输入如<a href=\"http://127.0.0.1:8000/aindex时，\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8000/aindex时，</a> <strong>去除域名和最前面的/，剩下aindex，拿aindex字符串到项目的urls文件中进行匹配，配置成功之后，去除匹配的a字符，那剩下的index字符串继续到项目的urls文件中进行正则匹配，匹配成功之后执行视图函数index</strong> ，index视图函数返回内容hello python给浏览器来显示。</p>\n<hr>\n<h2 id=\"模板\"><a href=\"#模板\" class=\"headerlink\" title=\"模板\"></a>模板</h2><p><em>不仅仅是一个HTML文件</em></p>\n<h3 id=\"模板文件的使用\"><a href=\"#模板文件的使用\" class=\"headerlink\" title=\"模板文件的使用\"></a>模板文件的使用</h3><ol>\n<li>创建模板文件夹(templates文件夹)</li>\n<li>配置模板目录</li>\n</ol>\n<p><strong>在项目文件中修改settings文件，将其TEMPLATES下的’DIRS’改为[os.path.join(BASE_DIR, ‘templates’)]</strong></p>\n<p><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%8711.png\" alt=\"1\"></p>\n<p>其中BASE_DIR是项目的绝对路径</p>\n<ol start=\"3\">\n<li>使用模板文件</li>\n</ol>\n<p><strong>在templates文件夹下建立与应用同名的文件夹，防止混淆</strong></p>\n<ul>\n<li>加载模板文件</li>\n</ul>\n<p>在模板目录下面获取HTML文件的内容，得到一个模板对象</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from django.templates import loader</span><br><span class=\"line\">temp &#x3D; loader.get_template(&#39;相对于templates文件的相对路径&#39;)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>定义模板上下文<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from django.templates import RequestContext</span><br><span class=\"line\">context &#x3D; RequestContext(request, &#123;一个字典，替代模板中变量的值&#125;)</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>向模板文件中传递数据</p>\n<ul>\n<li>模板渲染</li>\n</ul>\n<p>得到一个标准的HTML文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res_html &#x3D; temp.render(context)    # 渲染完成的HTML内容</span><br><span class=\"line\">return HttpResponse(res_html)</span><br></pre></td></tr></table></figure>\n\n<p><strong>以上三点在Django内部已经进行了封装，可直接调用render函数返回</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return render(request, &#39;相对于templates文件的相对路径&#39;, &#123;一个字典，替代模板中变量的值&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在模板文件中定义变量\"><a href=\"#在模板文件中定义变量\" class=\"headerlink\" title=\"在模板文件中定义变量\"></a>在模板文件中定义变量</h3><ol>\n<li>模板变量的使用 ： </li>\n<li>for循环的使用 ： {% for i in list %}\n\n</li>\n</ol>\n{% empty %}   # 当for循环中没有任何变量时显示的数据\n\n{% endfor %}\n\n<hr>\n<h2 id=\"模型\"><a href=\"#模型\" class=\"headerlink\" title=\"模型\"></a>模型</h2><h3 id=\"Django-ORM\"><a href=\"#Django-ORM\" class=\"headerlink\" title=\"Django ORM\"></a>Django ORM</h3><p><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%8712.png\" alt=\"1\"></p>\n<p><strong>O：(objects)-&gt;类和对象。</strong><br><br><strong>R：(Relation)-&gt;关系，关系数据库中的表格。</strong><br><br><strong>M：（Mapping）-&gt;映射。</strong></p>\n<h3 id=\"Django-ORM-框架的功能\"><a href=\"#Django-ORM-框架的功能\" class=\"headerlink\" title=\"Django ORM 框架的功能\"></a>Django ORM 框架的功能</h3><ol>\n<li>建立模型类和表之间的对应关系，允许我们通过面向对象的方式操作数据库</li>\n<li>根据设计的模型类生成数据库的表格</li>\n<li>通过方便的配置就可以进行数据库的切换</li>\n</ol>\n<p><em>在此之前使用的数据库都是Django默认的sqlite数据库，接下来我们将对Django配置进行修改，改为熟悉的MySQL数据库</em></p>\n<h3 id=\"MySQL数据库配置\"><a href=\"#MySQL数据库配置\" class=\"headerlink\" title=\"MySQL数据库配置\"></a>MySQL数据库配置</h3><p><strong>修改settings.py中的DATABASES。</strong><br><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%8713.png\" alt=\"1\"><br><strong><em>注意：django框架不会自动帮我们生成mysql数据库，所以我们需要自己去创建。</em></strong></p>\n<p><strong>切换mysql数据库之后不能启动服务器：</strong><br><br>安装mysqlPython包: <br><br>python2：<br>  pip install mysql-python<br><br>python3:<br>安装pymysql:<br>  pip install pymysql<br><br>在test1/<strong>init</strong>.py中加如下内容：<br></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import pymysql</span><br><span class=\"line\">pymysql.install_as_MySQLdb()</span><br></pre></td></tr></table></figure>\n<p>进行如上操作之后便完成了MySQL数据库的配置！</p>\n<p><img src=\"/2019/07/23/Django/%E6%96%97%E5%9B%BE3.jpg\" alt=\"1\"></p>\n<h3 id=\"重定向\"><a href=\"#重定向\" class=\"headerlink\" title=\"重定向\"></a>重定向</h3><p>最后在讲解一下重定向，当浏览器点击某一功能时，仍需要返回原网址。则需使用重定向。</p>\n<p>代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return HttpResponseRedirect(&#39;&#x2F;当前网址&#39;)</span><br><span class=\"line\"></span><br><span class=\"line\">from django.shortcuts import redirct</span><br><span class=\"line\">return redirect(&#39;&#x2F;当前网址&#39;)    # 使用Django中封装好的重定向函数redirect返回</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"字段属性和选项\"><a href=\"#字段属性和选项\" class=\"headerlink\" title=\"字段属性和选项\"></a>字段属性和选项</h2><p><strong>属性命名限制：</strong></p>\n<ol>\n<li>不能是python的保留关键字。</li>\n<li>不允许使用连续的下划线，这是由django的查询方式决定的。</li>\n<li>定义属性时需要指定字段类型，通过字段类型的参数指定选项，语法如下：<br>属性名=models.字段类型(选项)</li>\n</ol>\n<h3 id=\"字段类型\"><a href=\"#字段类型\" class=\"headerlink\" title=\"字段类型\"></a>字段类型</h3><p><strong>使用时需要引入django.db.models包</strong>，字段类型如下：<br><br><strong>AutoField</strong>：自动增长的IntegerField，通常不用指定，不指定时Django会自动创建属性名为id的自动增长属性。<br><br><strong>BooleanField</strong>：布尔字段，值为True或False。<br><br><strong>NullBooleanField</strong>：支持Null、True、False三种值。<br><br><strong>CharField(max_length=字符长度)</strong>：字符串。<br>参数max_length表示最大字符个数。<br><br><strong>TextField</strong>：大文本字段，一般超过4000个字符时使用。<br><br><strong>IntegerField</strong>：整数。<br><br><strong>DecimalField(max_digits=None, decimal_places=None)</strong>：十进制浮点数。<br>参数max_digits表示总位数。<br>参数decimal_places表示小数位数。<br><br><strong>FloatField</strong>：浮点数。<br><br><strong>DateField([auto_now=False, auto_now_add=False])</strong>：日期。<br><br><em>参数auto_now表示每次保存对象时，自动设置该字段为当前时间，用于”最后一次修改”的时间戳，它总是使用当前日期，默认为false。</em><br><br><em>参数auto_now_add表示当对象第一次被创建时自动设置当前时间，用于创建的时间戳，它总是使用当前日期，默认为false。</em><br><br><strong>参数auto_now_add和auto_now是相互排斥的，组合将会发生错误。</strong><br><br><strong>imeField</strong>：时间，参数同DateField。<br><br><strong>DateTimeField</strong>：日期时间，参数同DateField。<br><br><strong>FileField</strong>：上传文件字段。<br><br><strong>ImageField</strong>：继承于FileField，对上传的内容进行校验，确保是有效的图片。<br></p>\n<h3 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"选项\"></a>选项</h3><p><strong>通过选项实现对字段的约束，选项如下</strong>：<br><br><strong>null</strong>：如果为True，表示允许为空，默认值是False。<br><br><strong>blank</strong>：如果为True，则该字段允许为空白，默认值是False。<br><br><strong><em>对比：null是数据库范畴的概念，blank是表单验证证范畴的。</em></strong><br><br><strong>db_column</strong>：字段的名称，如果未指定，则使用属性的名称。<br><br><strong>db_index</strong>：若值为True, 则在表中会为此字段创建索引，默认值是False。<br><br><strong>default</strong>：默认值。<br><br><strong>primary_key</strong>：若为True，则该字段会成为模型的主键字段，默认值是False，一般作为AutoField的选项使用。<br><br><strong>unique</strong>：如果为True, 这个字段在表中必须有唯一值，默认值是False。<br></p>\n<hr>\n<h2 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h2><h3 id=\"查看MySQL的日志文件\"><a href=\"#查看MySQL的日志文件\" class=\"headerlink\" title=\"查看MySQL的日志文件\"></a>查看MySQL的日志文件</h3><ol>\n<li>sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf <strong>68 69行 注释取消</strong></li>\n<li>sudo service mysql restart 重启mysql服务</li>\n<li>/var/log/mysql/mysql.log #mysql操作的记录文件。</li>\n<li>sudo tail -f /var/log/mysql/mysql.log #实时查看mysql文件的内容。</li>\n</ol>\n<h3 id=\"查询MySQL数据库中数据的方法\"><a href=\"#查询MySQL数据库中数据的方法\" class=\"headerlink\" title=\"查询MySQL数据库中数据的方法\"></a>查询MySQL数据库中数据的方法</h3><p><strong>get()</strong>:返回表中满足条件的一条且只能有一条数据。<br><br>如果查到多条数据，则抛异常：MultipleObjectsReturned<br><br>查询不到数据，则抛异常：<br>DoesNotExist<br></p>\n<p><strong>all()</strong>:返回模型类对应表格中的所有数据。QuerySet类型，查询集<br></p>\n<p><strong>filter()</strong>:参数写查询条件，返回满足条件的数据。QuerySet<br><br><em>条件格式：模型类属性名__条件名=值</em></p>\n<h3 id=\"查询条件\"><a href=\"#查询条件\" class=\"headerlink\" title=\"查询条件\"></a>查询条件</h3><ol>\n<li><p>判等 exact。<br><br>例：查询编号为1的图书。<br><br>BookInfo.objects.get(id=1)<br><br>BookInfo.objects.get(id__exact=1)</p>\n</li>\n<li><p>模糊查询 contains<br><br>例：查询书名包含’传’的图书。<br><br>BookInfo.objects.filter(btitle__contains=’传’)<br><br>例：查询书名以’部’结尾的图书 endswith 开头:startswith<br><br>BookInfo.objects.filter(btitle__endswith=’部’)</p>\n</li>\n<li><p>空查询 isnull <em>(select * from booktest_bookinfo where title is not null)</em><br><br>例：查询书名不为空的图书。<br><br>BookInfo.objects.filte(btitle__isnull=False)</p>\n</li>\n<li><p>范围查询 in <em>(select * from booktest_bookinfo where id in (1,3,5))</em><br><br>例：查询编号为1或3或5的图书。<br><br>BookInfo.objects.filter(id__in = [1,3,5])</p>\n</li>\n<li><p>比较查询 <br><br>例：查询编号大于3的图书。gt(大于) lt(小于） gte(大于等于) lte(小于等于)<br><br>BookInfo.objects.filter(id__gt = 3)</p>\n</li>\n<li><p>日期查询<br><br>例：查询1980年发表的图书。<br><br>BookInfo.objects.filter(bpub_date__year=1980)<br><br>例：查询1980年1月1日后发表的图书。<br><br>from datetime import date<br>BookInfo.objects.filter(bpub_date__gt = date(1980,1,1))<br></p>\n</li>\n<li><p>exclude:返回不满足条件的数据。QuerySet<br><br>例：查询id不为3的图书信息。<br><br>BookInfo.objects.exclude(id=3)<br></p>\n</li>\n</ol>\n<h3 id=\"F对象\"><a href=\"#F对象\" class=\"headerlink\" title=\"F对象\"></a>F对象</h3><p><strong>作用：用于类属性之间的比较条件。</strong><br><br>使用之前需要先导入：<br><br><strong>from django.db.models import F</strong><br><br>例：查询图书阅读量大于评论量图书信息。<br><br>BookInfo.objects.filter(bread__gt = F(‘bcomment’))<br><br>例：查询图书阅读量大于2倍评论量图书信息。<br><br>BookInfo.objects.filter(bread__gt = F(‘bcomment’)*2)</p>\n<h3 id=\"Q对象\"><a href=\"#Q对象\" class=\"headerlink\" title=\"Q对象\"></a>Q对象</h3><p><strong>作用：用于查询时的逻辑条件。not and or，可以对Q对象进行&amp; | ~操作。</strong><br>使用之前需要先导入：<br><br><strong>from django.db.models import Q</strong><br><br>例：查询id大于3且阅读量大于30的图书的信息。<br><br>BookInfo.objects.filter(id__gt=3, bread__gt=30)<br><br>BookInfo.objects.filter(Q(id__gt=3)&amp;Q(bread__gt=30))<br><br>例：查询id大于3或者阅读量大于30的图书的信息。<br><br>BookInfo.objects.filter(Q(id__gt=3)|Q(bread__gt=30))<br><br>例：查询id不等于3图书的信息。<br><br>BookInfo.objects.filter(~Q(id=3))<br></p>\n<h3 id=\"排序-order-by-QuerySet\"><a href=\"#排序-order-by-QuerySet\" class=\"headerlink\" title=\"排序 order_by QuerySet\"></a>排序 <strong>order_by</strong> QuerySet</h3><p><strong>作用：进行查询结果进行排序。</strong><br><br>例：查询所有图书的信息，按照id从小到大进行排序。<br><br>BookInfo.objects.all().order_by(‘id’)<br><br>BookInfo.objects.order_by(‘id’)<br><br>例：查询所有图书的信息，按照id从大到小进行排序。<br><br>BookInfo.objects.all().order_by(<strong>‘-id’</strong>)<br><br>例：把id大于3的图书信息按阅读量从大到小排序显示；<br><br>BookInfo.objects.filter(id__gt=3).order_by(‘-bread’)</p>\n<h3 id=\"聚合函数\"><a href=\"#聚合函数\" class=\"headerlink\" title=\"聚合函数\"></a>聚合函数</h3><p><strong>作用：对查询结果进行聚合操作。</strong><br><br><strong>sum count max min avg</strong><br><br><strong>aggregate</strong>：调用这个函数来使用聚合。 返回值是一个字典<br><br>使用前需先导入聚合类： <br><br><strong>from django.db.models import Sum,Count,Max,Min,Avg</strong><br><br>例：查询所有图书的数目。Count<br><br>BookInfo.objects.aggregate(Count(‘id’))<br><br>返回值类型:<br>{‘id__count’: 5}<br><br>例：查询所有图书阅读量的总和。<br><br>BookInfo.objects.aggregate(Sum(‘bread’))<br><br>返回值类型：<br>{‘bread__sum’: 126}<br><br><strong>count函数 返回值是一个数字</strong><br><br><strong>作用：统计满足条件数据的数目。</strong><br><br>例：统计所有图书的数目。<br><br>BookInfo.objects.count()<br><br>例：统计id大于3的所有图书的数目。<br><br>BookInfo.objects.filter(id__gt=3).count()<br></p>\n<p><strong>查询相关函数返回值总结：</strong><br><br><strong>get</strong>:返回一个对象 <br><br><strong>all</strong>:QuerySet 返回所有数据<br><br><strong>filter</strong>:QuerySet 返回满足条件的数据<br><br><strong>exclude</strong>:QuerySet 返回不满条件的数据 <br><br><strong>order_by</strong>:QuerySet 对查询结果进行排序<br><br><strong>aggregate</strong>:字典 进行聚合操作<br><br><strong>count</strong>:数字 返回查询集中数据的数目<br><br>get,filter,exclude参数中可以写查询条件。<br></p>\n<h3 id=\"查询集\"><a href=\"#查询集\" class=\"headerlink\" title=\"查询集\"></a>查询集</h3><p><strong>all, filter, exclude, order_by调用这些函数会产生一个查询集，可以在查询集上继续调用这些函数。</strong><br>查询集特性：</p>\n<ol>\n<li>惰性查询：只有在实际使用查询集中的数据的时候才会发生对数据库的真正查询。</li>\n<li>缓存：当使用的是同一个查询集时，第一次的时候会发生实际数据库的查询，然后把结果缓存起来，之后再使用这个查询集时，使用的是缓存中的结果。<br>限制查询集：<br></li>\n</ol>\n<p><strong>可以对一个查询集进行取下标或者切片操作来限制查询集的结果。</strong><br><br>b[0]就是取出查询集的第一条数据，b[0:1].get()也可取出查询集的第一条数据。如果b[0]不存在，会抛出IndexError异常，如果b[0:1].get()不存在，会抛出DoesNotExist异常。多条时抛MultiObjectsReturned异常<br>对一个查询集进行切片操作会产生一个新的查询集，下标不允许为负数。<br><br><strong>exists</strong>:判断一个查询集中是否有数据。(True False)</p>\n<hr>\n<h2 id=\"模型类关系\"><a href=\"#模型类关系\" class=\"headerlink\" title=\"模型类关系\"></a>模型类关系</h2><h3 id=\"三种关系模式\"><a href=\"#三种关系模式\" class=\"headerlink\" title=\"三种关系模式\"></a>三种关系模式</h3><ol>\n<li>一对多关系<br><br>例：图书类-英雄类<br>models.ForeignKey() 定义在多的类中。</li>\n<li>多对多关系<br><br>例：新闻类-新闻类型类 体育新闻 国际<br><br>models.ManyToManyField() 定义在哪个类中都可以。</li>\n<li>一对一关系<br><br>例：员工基本信息类-员工详细信息类<br><br>models.OneToOneField() 定义在哪个类中都可以。<h3 id=\"关联查询-一对多\"><a href=\"#关联查询-一对多\" class=\"headerlink\" title=\"关联查询(一对多)\"></a>关联查询(一对多)</h3></li>\n</ol>\n<p><strong>在一对多关系中，一对应的类我们把它叫做一类，多对应的那个类我们把它叫做多类，我们把多类中定义的建立关联的类属性叫做关联属性。</strong><br><br>例：查询图书id为1的所有英雄的信息。<br><br>    book = BookInfo.objects.get(id=1)<br><br>    book.heroinfo_set.all()<br><br>通过模型类查询：<br><br>    <strong>HeroInfo.objects.filter(hbook_id=1)</strong><br><br>例：查询id为1的英雄所属图书信息。<br><br>    hero =HeroInfo.objects.get(id=1)<br><br>    hero.hbook<br><br>通过模型类查询：<br><br>    <strong>BookInfo.objects.filter(heroinfo__id=1)</strong><br><br>    <img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%876.jpg\" alt=\"1\"><br><strong>由一类的对象查询多类的时候：</strong><br><br>    一类的对象.多类名小写_set.all() #查询所用数据<br><br><strong>由多类的对象查询一类的时候：</strong><br><br>    多类的对象.关联属性  #查询多类的对象对应的一类的对象<br><br><strong>由多类的对象查询一类对象的id时候：</strong><br><br>    多类的对象. 关联属性_id<br><br><strong><em>通过模型类实现关联查询：</em></strong><br><br>例：查询图书信息，要求图书中英雄的描述包含’八’。<br><br>BookInfo.objects.filter(heroinfo__hcomment__contains=’八’)<br><br>例：查询图书信息，要求图书中的英雄的id大于3.<br><br>BookInfo.objects.filter(heroinfo__id__gt=3)<br><br>例：查询书名为“天龙八部”的所有英雄。<br><br>HeroInfo.objects.filter(hbook__btitle=’天龙八部’)<br><br><strong>通过多类的条件查询一类的数据：</strong><br><br>    一类名.objects.filter(多类名小写<strong>多类属性名</strong>条件名) <br><br><strong>通过一类的条件查询多类的数据：</strong><br><br>    多类名.objects.filter(关联属性<strong>一类属性名</strong>条件名)<br></p>\n<h3 id=\"插入，更新和删除\"><a href=\"#插入，更新和删除\" class=\"headerlink\" title=\"插入，更新和删除\"></a>插入，更新和删除</h3><p>  调用一个模型类对象的save方法的时候就可以实现对模型类对应数据表的插入和更新。<br><br>调用一个模型类对象的delete方法的时候就可以实现对模型类对应数据表数据的删除。</p>\n<h3 id=\"自关联\"><a href=\"#自关联\" class=\"headerlink\" title=\"自关联\"></a>自关联</h3><p><strong>自关联是一种特殊的一对多的关系。即在一个表中建立外键。</strong><br><br>注：mysql终端中批量执行sql语句：source areas.sql;</p>\n<h3 id=\"管理器\"><a href=\"#管理器\" class=\"headerlink\" title=\"管理器\"></a>管理器</h3><p>在查询语句中都会使用到<strong>类名.objects.方法</strong>，那么objects是什么呢？<br><br>objects是Django帮我自动生成的管理器对象，通过这个管理器可以实现对数据的查询。<br><br>objects是models.Manger类的一个对象。自定义管理器之后Django不再帮我们生成默认的objects管理器。</p>\n<ol>\n<li>自定义一个管理器类，这个类继承models.Manger类。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class BookInfoManager(models.Manager):</span><br></pre></td></tr></table></figure></li>\n<li>再在具体的模型类里定义一个自定义管理器类的对象。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">object &#x3D; 自定义的管理器类()</span><br></pre></td></tr></table></figure>\n自定义管理器类的应用场景：</li>\n<li>改变查询的结果集。<br>比如调用BookInfo.books.all()返回的是没有删除的图书的数据。</li>\n<li>添加额外的方法。<br>管理器类中定义一个方法帮我们创建对应的模型类对象。<br>使用self.model()就可以创建一个跟自定义管理器对应的模型类对象。</li>\n</ol>\n<p><img src=\"/2019/07/23/Django/Django%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%8714.png\" alt=\"1\"></p>\n<h3 id=\"元选项\"><a href=\"#元选项\" class=\"headerlink\" title=\"元选项\"></a>元选项</h3><p>Django默认生成的表名：<br><br>    <strong>应用名小写_模型类名小写。</strong><br><br>元选项：<br><br>需要在模型类中定义一个元类Meta,在里面定义一个类属性db_table就可以指定表名。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Meta:</span><br><span class=\"line\">    db_table &#x3D; &#39;表名&#39;</span><br></pre></td></tr></table></figure>"},{"title":"Go基础","date":"2020-07-23T09:09:28.000Z","_content":"","source":"_posts/Go基础.md","raw":"---\ntitle: Go基础\ndate: 2020-07-23 17:09:28\ntags:\n---\n","slug":"Go基础","published":1,"updated":"2020-07-23T09:14:01.466Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckd0hv9i00002j7jxedi21kv0","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Python中不同赋值形式的差异","date":"2020-04-07T00:00:27.000Z","_content":"# Python中的不同传递形式的差异\n先来看一到题，题目是：给你一幅由 N × N 矩阵表示的图像，其中每个像素的大小为 4 字节。请你设计一种算法，将图像旋转 90 度。\n不占用额外内存空间能否做到？\n<!--more-->\n\n给定 matrix = \n[\n  [1,2,3],\n  [4,5,6],\n  [7,8,9]\n],\n\n原地旋转输入矩阵，使其变为:\n[\n  [7,4,1],\n  [8,5,2],\n  [9,6,3]\n]\n\n**下面给出其中一种解法的两段Python3代码：**\n```\n## Code1\nclass Solution:\n    def rotate(self, matrix):\n        matrix = list(zip(*matrix[::-1]))\n\n## Code2\nclass Solution:\n    def rotate(self, matrix):\n        matrix[:] = list(zip(*matrix[::-1]))\n```\n在研究两段代码区别之前，先来了解一下Python关于拷贝的一些坑。\n\n## 深拷贝、浅拷贝、赋值、切片\n研究下面的代码：\n```\na = [1, 2, ['a',3], \"asd\", [5, 10, 15]]\na_fuzhi = a \na_copy = a.copy()\na_deepcopy = copy.deepcopy(a)\na_slice = a[:]\n\n## 当修改a时，四种引用方式会发生不同的效果\na[0] = 100\na[2][1] = 100\n\n\nout:a_fuzhi=[100, 2, ['a', 100], 'asd', [5, 10, 15]]\na_copy=[1, 2, ['a', 100], 'asd', [5, 10, 15]]\na_deepcopy=[1, 2, ['a', 3], 'asd', [5, 10, 15]]\na_slice=[1, 2, ['a', 100], 'asd', [5, 10, 15]]\n```\n通过上面的代码可以看出，**在Python中只有深拷贝是将原来的全部数据重新放到一个新的内存地址中。**而浅拷贝和切片都和原数据有关联，**当改变父级数据是他们不会改变，但改变子数据时，他们也会随之改变。**，对于赋值操作而言，只是增加了一个对原数据的指针(相当于起了一个别名)。\n\n|type    | a_fuzhi  | a_copy   | a_deepcopy | a_slice |\n|:------:|:---------|:--------:|:----------:|:-------:|\n|parent  |   true   |   false  |    false   |   false |\n|children|   true   |   true   |    false   |   true  |\n\n\n那么回过头来看开头的那个问题，因为要求不占用其他内存，所以函数使用了**原地处理**,故没有返回值。在第一种方式中，**matrix相当于只是函数中的一个变量**，在函数调用结束时便会被回收；第二种方式中，`matrix[:]`利用了切片对解包压缩后的数据进行了拷贝，最终输出正确的结果。\n\n\n\n个人能力有限，若有描述不当的地方，请多多包涵。","source":"_posts/Python中不同赋值形式的差异.md","raw":"---\ntitle: Python中不同赋值形式的差异\ndate: 2020-04-07 08:00:27\ntags: python\n---\n# Python中的不同传递形式的差异\n先来看一到题，题目是：给你一幅由 N × N 矩阵表示的图像，其中每个像素的大小为 4 字节。请你设计一种算法，将图像旋转 90 度。\n不占用额外内存空间能否做到？\n<!--more-->\n\n给定 matrix = \n[\n  [1,2,3],\n  [4,5,6],\n  [7,8,9]\n],\n\n原地旋转输入矩阵，使其变为:\n[\n  [7,4,1],\n  [8,5,2],\n  [9,6,3]\n]\n\n**下面给出其中一种解法的两段Python3代码：**\n```\n## Code1\nclass Solution:\n    def rotate(self, matrix):\n        matrix = list(zip(*matrix[::-1]))\n\n## Code2\nclass Solution:\n    def rotate(self, matrix):\n        matrix[:] = list(zip(*matrix[::-1]))\n```\n在研究两段代码区别之前，先来了解一下Python关于拷贝的一些坑。\n\n## 深拷贝、浅拷贝、赋值、切片\n研究下面的代码：\n```\na = [1, 2, ['a',3], \"asd\", [5, 10, 15]]\na_fuzhi = a \na_copy = a.copy()\na_deepcopy = copy.deepcopy(a)\na_slice = a[:]\n\n## 当修改a时，四种引用方式会发生不同的效果\na[0] = 100\na[2][1] = 100\n\n\nout:a_fuzhi=[100, 2, ['a', 100], 'asd', [5, 10, 15]]\na_copy=[1, 2, ['a', 100], 'asd', [5, 10, 15]]\na_deepcopy=[1, 2, ['a', 3], 'asd', [5, 10, 15]]\na_slice=[1, 2, ['a', 100], 'asd', [5, 10, 15]]\n```\n通过上面的代码可以看出，**在Python中只有深拷贝是将原来的全部数据重新放到一个新的内存地址中。**而浅拷贝和切片都和原数据有关联，**当改变父级数据是他们不会改变，但改变子数据时，他们也会随之改变。**，对于赋值操作而言，只是增加了一个对原数据的指针(相当于起了一个别名)。\n\n|type    | a_fuzhi  | a_copy   | a_deepcopy | a_slice |\n|:------:|:---------|:--------:|:----------:|:-------:|\n|parent  |   true   |   false  |    false   |   false |\n|children|   true   |   true   |    false   |   true  |\n\n\n那么回过头来看开头的那个问题，因为要求不占用其他内存，所以函数使用了**原地处理**,故没有返回值。在第一种方式中，**matrix相当于只是函数中的一个变量**，在函数调用结束时便会被回收；第二种方式中，`matrix[:]`利用了切片对解包压缩后的数据进行了拷贝，最终输出正确的结果。\n\n\n\n个人能力有限，若有描述不当的地方，请多多包涵。","slug":"Python中不同赋值形式的差异","published":1,"updated":"2020-07-23T12:55:46.910Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckd0hv9i90005j7jx66am0386","content":"<h1 id=\"Python中的不同传递形式的差异\"><a href=\"#Python中的不同传递形式的差异\" class=\"headerlink\" title=\"Python中的不同传递形式的差异\"></a>Python中的不同传递形式的差异</h1><p>先来看一到题，题目是：给你一幅由 N × N 矩阵表示的图像，其中每个像素的大小为 4 字节。请你设计一种算法，将图像旋转 90 度。<br>不占用额外内存空间能否做到？</p>\n<a id=\"more\"></a>\n\n<p>给定 matrix =<br>[<br>  [1,2,3],<br>  [4,5,6],<br>  [7,8,9]<br>],</p>\n<p>原地旋转输入矩阵，使其变为:<br>[<br>  [7,4,1],<br>  [8,5,2],<br>  [9,6,3]<br>]</p>\n<p><strong>下面给出其中一种解法的两段Python3代码：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## Code1</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def rotate(self, matrix):</span><br><span class=\"line\">        matrix &#x3D; list(zip(*matrix[::-1]))</span><br><span class=\"line\"></span><br><span class=\"line\">## Code2</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def rotate(self, matrix):</span><br><span class=\"line\">        matrix[:] &#x3D; list(zip(*matrix[::-1]))</span><br></pre></td></tr></table></figure>\n<p>在研究两段代码区别之前，先来了解一下Python关于拷贝的一些坑。</p>\n<h2 id=\"深拷贝、浅拷贝、赋值、切片\"><a href=\"#深拷贝、浅拷贝、赋值、切片\" class=\"headerlink\" title=\"深拷贝、浅拷贝、赋值、切片\"></a>深拷贝、浅拷贝、赋值、切片</h2><p>研究下面的代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a &#x3D; [1, 2, [&#39;a&#39;,3], &quot;asd&quot;, [5, 10, 15]]</span><br><span class=\"line\">a_fuzhi &#x3D; a </span><br><span class=\"line\">a_copy &#x3D; a.copy()</span><br><span class=\"line\">a_deepcopy &#x3D; copy.deepcopy(a)</span><br><span class=\"line\">a_slice &#x3D; a[:]</span><br><span class=\"line\"></span><br><span class=\"line\">## 当修改a时，四种引用方式会发生不同的效果</span><br><span class=\"line\">a[0] &#x3D; 100</span><br><span class=\"line\">a[2][1] &#x3D; 100</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">out:a_fuzhi&#x3D;[100, 2, [&#39;a&#39;, 100], &#39;asd&#39;, [5, 10, 15]]</span><br><span class=\"line\">a_copy&#x3D;[1, 2, [&#39;a&#39;, 100], &#39;asd&#39;, [5, 10, 15]]</span><br><span class=\"line\">a_deepcopy&#x3D;[1, 2, [&#39;a&#39;, 3], &#39;asd&#39;, [5, 10, 15]]</span><br><span class=\"line\">a_slice&#x3D;[1, 2, [&#39;a&#39;, 100], &#39;asd&#39;, [5, 10, 15]]</span><br></pre></td></tr></table></figure>\n<p>通过上面的代码可以看出，<strong>在Python中只有深拷贝是将原来的全部数据重新放到一个新的内存地址中。</strong>而浅拷贝和切片都和原数据有关联，<strong>当改变父级数据是他们不会改变，但改变子数据时，他们也会随之改变。</strong>，对于赋值操作而言，只是增加了一个对原数据的指针(相当于起了一个别名)。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">type</th>\n<th align=\"left\">a_fuzhi</th>\n<th align=\"center\">a_copy</th>\n<th align=\"center\">a_deepcopy</th>\n<th align=\"center\">a_slice</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">parent</td>\n<td align=\"left\">true</td>\n<td align=\"center\">false</td>\n<td align=\"center\">false</td>\n<td align=\"center\">false</td>\n</tr>\n<tr>\n<td align=\"center\">children</td>\n<td align=\"left\">true</td>\n<td align=\"center\">true</td>\n<td align=\"center\">false</td>\n<td align=\"center\">true</td>\n</tr>\n</tbody></table>\n<p>那么回过头来看开头的那个问题，因为要求不占用其他内存，所以函数使用了<strong>原地处理</strong>,故没有返回值。在第一种方式中，<strong>matrix相当于只是函数中的一个变量</strong>，在函数调用结束时便会被回收；第二种方式中，<code>matrix[:]</code>利用了切片对解包压缩后的数据进行了拷贝，最终输出正确的结果。</p>\n<p>个人能力有限，若有描述不当的地方，请多多包涵。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"Python中的不同传递形式的差异\"><a href=\"#Python中的不同传递形式的差异\" class=\"headerlink\" title=\"Python中的不同传递形式的差异\"></a>Python中的不同传递形式的差异</h1><p>先来看一到题，题目是：给你一幅由 N × N 矩阵表示的图像，其中每个像素的大小为 4 字节。请你设计一种算法，将图像旋转 90 度。<br>不占用额外内存空间能否做到？</p>","more":"<p>给定 matrix =<br>[<br>  [1,2,3],<br>  [4,5,6],<br>  [7,8,9]<br>],</p>\n<p>原地旋转输入矩阵，使其变为:<br>[<br>  [7,4,1],<br>  [8,5,2],<br>  [9,6,3]<br>]</p>\n<p><strong>下面给出其中一种解法的两段Python3代码：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## Code1</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def rotate(self, matrix):</span><br><span class=\"line\">        matrix &#x3D; list(zip(*matrix[::-1]))</span><br><span class=\"line\"></span><br><span class=\"line\">## Code2</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def rotate(self, matrix):</span><br><span class=\"line\">        matrix[:] &#x3D; list(zip(*matrix[::-1]))</span><br></pre></td></tr></table></figure>\n<p>在研究两段代码区别之前，先来了解一下Python关于拷贝的一些坑。</p>\n<h2 id=\"深拷贝、浅拷贝、赋值、切片\"><a href=\"#深拷贝、浅拷贝、赋值、切片\" class=\"headerlink\" title=\"深拷贝、浅拷贝、赋值、切片\"></a>深拷贝、浅拷贝、赋值、切片</h2><p>研究下面的代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a &#x3D; [1, 2, [&#39;a&#39;,3], &quot;asd&quot;, [5, 10, 15]]</span><br><span class=\"line\">a_fuzhi &#x3D; a </span><br><span class=\"line\">a_copy &#x3D; a.copy()</span><br><span class=\"line\">a_deepcopy &#x3D; copy.deepcopy(a)</span><br><span class=\"line\">a_slice &#x3D; a[:]</span><br><span class=\"line\"></span><br><span class=\"line\">## 当修改a时，四种引用方式会发生不同的效果</span><br><span class=\"line\">a[0] &#x3D; 100</span><br><span class=\"line\">a[2][1] &#x3D; 100</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">out:a_fuzhi&#x3D;[100, 2, [&#39;a&#39;, 100], &#39;asd&#39;, [5, 10, 15]]</span><br><span class=\"line\">a_copy&#x3D;[1, 2, [&#39;a&#39;, 100], &#39;asd&#39;, [5, 10, 15]]</span><br><span class=\"line\">a_deepcopy&#x3D;[1, 2, [&#39;a&#39;, 3], &#39;asd&#39;, [5, 10, 15]]</span><br><span class=\"line\">a_slice&#x3D;[1, 2, [&#39;a&#39;, 100], &#39;asd&#39;, [5, 10, 15]]</span><br></pre></td></tr></table></figure>\n<p>通过上面的代码可以看出，<strong>在Python中只有深拷贝是将原来的全部数据重新放到一个新的内存地址中。</strong>而浅拷贝和切片都和原数据有关联，<strong>当改变父级数据是他们不会改变，但改变子数据时，他们也会随之改变。</strong>，对于赋值操作而言，只是增加了一个对原数据的指针(相当于起了一个别名)。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">type</th>\n<th align=\"left\">a_fuzhi</th>\n<th align=\"center\">a_copy</th>\n<th align=\"center\">a_deepcopy</th>\n<th align=\"center\">a_slice</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">parent</td>\n<td align=\"left\">true</td>\n<td align=\"center\">false</td>\n<td align=\"center\">false</td>\n<td align=\"center\">false</td>\n</tr>\n<tr>\n<td align=\"center\">children</td>\n<td align=\"left\">true</td>\n<td align=\"center\">true</td>\n<td align=\"center\">false</td>\n<td align=\"center\">true</td>\n</tr>\n</tbody></table>\n<p>那么回过头来看开头的那个问题，因为要求不占用其他内存，所以函数使用了<strong>原地处理</strong>,故没有返回值。在第一种方式中，<strong>matrix相当于只是函数中的一个变量</strong>，在函数调用结束时便会被回收；第二种方式中，<code>matrix[:]</code>利用了切片对解包压缩后的数据进行了拷贝，最终输出正确的结果。</p>\n<p>个人能力有限，若有描述不当的地方，请多多包涵。</p>"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2020-07-21T09:20:13.105Z","updated":"2020-07-21T09:20:13.105Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckd0hv9ie0006j7jx80tdabm6","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"计算机网络基础","date":"2020-01-17T09:11:57.000Z","_content":"# TCP协议\n## 当今互联网基石——TCP/IP协议栈\n&nbsp;&nbsp;&nbsp;&nbsp;TCP/IP传输协议，即传输控制/网络协议，也叫作网络通讯协议。它是在网络的使用中的最基本的通信协议。TCP/IP传输协议对互联网中各部分进行通信的标准和方法进行了规定。并且，TCP/IP传输协议是保证网络数据信息及时、完整传输的两个重要的协议。\n<!--more-->\n[百度百科](https://baike.baidu.com/item/TCP/IP%E5%8D%8F%E8%AE%AE/212915)\n\n---\n\n## TCP协议特点\n&nbsp;&nbsp;&nbsp;&nbsp;TCP被称为是面向连接的，这是因为在一个应用进程可以开始向另一个应用进程发送数据之前，这两个进程必须先相互“握手”，即必须相互发送某些预备报文，以建立确保函数传输的参数。<br>\n&nbsp;&nbsp;&nbsp;&nbsp;TCP连接提供的是**全双工服务**：如果一台主机上的进程A与另一台主机上的进程B存在一条TCP连接，那么应用层数据就可以在从进程B流向进程A的同时，也从进程A流向进程B。TCP连接也是点对点的连接，即在一次单个发送方与单个接收方的连接。\n\n---\n## TCP报文结构\n![1](./TCP报文段结构.jpg)<br>\n源端口号：发送方的端口号<br>\n目的端口号：接收方端口号<br>\n序号：该报文段的字节流编号<br>\n确认号：发送方期望从接收方收到的序号<br>\n首部长度：指示了32字节的首部长度，由于选项长度是不定的，当选项长度为0时，首部长度为20字节<br>\n接收窗口：用于流量控制，指示接收方愿意接受的字节数量<br>\n检验和：提供了差错检验功能<br>\n紧急数据指针：指出紧急数据<br>\n选项：用于发送方和接收方协商最大报文段长度时，或在高速网络环境下用作窗口调节因子时使用<br>\n数据：应用层数据<br>\n\n---\n## TCP连接控制(三次握手/四次挥手)\n\n&nbsp;&nbsp;&nbsp;&nbsp;TCP作为可靠数据连接，其连接机制起着至关作用。</br>\n\n### 三次握手TCP连接机制\n1. 客户端的TCP首先向服务器端的TCP发送一个特殊的TCP报文段。该报文段中不含有应用层的数据，但是在首部中的一个标志位(即**SYN比特**)被置为1。因此这个特殊的报文段被称为SYN报文段。另外，客户端会随机选择一个初始序号(client_isn)，并将此编号放置于该起始的TCP SYN报文段的序号字段。该报文段会被封装到一个IP数据报中，并发送给服务器。\n\n2. 一旦包含TCP SYN报文段的IP数据报到达服务器主机，服务器会从该数据报中提取出TCP SYN报文段，**为该TCP连接分配TCP缓存和变量**，并向该客户TCP发送允许连接的报文段。这个允许连接的报文段也不包含任何的应用层数据。但是，在该报文段的首部包含着三个重要的信息。a：***SYN比特被置为1***；b：***首部确认号字段被置为client_isn+1***；c：***服务器选择自己的初始序号(server_isn)，并将其放置到TCP报文段首部的序号字段中。***该允许连接的报文段称为SYNACK报文段。\n\n3. 在客户端收到SYNACK报文段后，客户也要为该链接分配缓存和变量。客户主机接着向服务器发送另外一个报文段，最后一个报文段对服务器的允许连接的报文段进行了确认，将确认号字段置为server_isn+1。此时连接已经建立，所以**将SYN比特置为0**。该三次握手的第三个阶段(此阶段)可以在报文段负载中携带客户到服务器的数据。</br>\n![1](./三次握手.png)\n\n### 四次挥手TCP断开机制\n\n1. 客户应用进程发出一个关闭命令。这会引起客户TCP向服务器进程发送一个特殊的TCP报文段。**这个特殊的报文段让其首部中的FIN比特被置为1。**\n\n2. 当服务器接收到该报文段后，返回一个确认报文段。\n\n3. 当服务器发送给客户端的最后一个报文段发送完成后，发送终止报文段，**此报文段中的FIN比特被置为1。**\n\n4. 客户端接受到终止报文段之后，对服务器TCP返回确认报文，**并进入到TIME_WAIT状态**(典型值为一分钟或两分钟)，该状态的目的是为了确保确认报文成功送达到服务器端。</br>\n![1](./四次挥手.png)\n\n---\n## TCP流量控制\n&nbsp;&nbsp;&nbsp;&nbsp;TCP为什么需要流量控制：***对接收方缓存区的溢出而采取的措施。***</br>\n&nbsp;&nbsp;&nbsp;&nbsp;TCP通过让发送方维护一个称为**接收窗口**的变量来提供流量控制。通俗来说：接收窗口用于给发送方一个指示——接收方还有多少可用的缓存空间。</br>\n&nbsp;&nbsp;&nbsp;&nbsp;通过下面这个例子来详细了解一下TCP的流量控制。</br>\n&nbsp;&nbsp;&nbsp;&nbsp;假设主机A通过一条TCP连接向主机B发送一个大文件，主机B上为该链接分配了一个接受缓存，并用RcvBuffer来表示其大小。主机B上的应用从TCP缓存区读取数据时，定义以下变量：LastByteRead(主机B上的应用进程从缓存读出的数据流的最后一个字节的编号)，LastByteRcvd(从网络中到达的并且已经放入主机B接受缓存中的数据流的最后一个字节的编号)。</br>\n&nbsp;&nbsp;&nbsp;&nbsp;由于TCP不允许已分配的缓存溢出，则有下式成立：</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LastByteRcvd&nbsp;-&nbsp;LastByteRead &nbsp;<=&nbsp; RcvBuffer</br>\n&nbsp;&nbsp;&nbsp;&nbsp;接受窗口用rwnd表示，其大小由缓存可用空间的数量来设置：</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rwnd&nbsp;=&nbsp;RcvBuffer&nbsp;-&nbsp;[LastByteRcvd&nbsp;-&nbsp;LastByteRead]</br>\n&nbsp;&nbsp;&nbsp;&nbsp;利用变量rwnd来控制流量服务。主机B通过把当前的rwnd值(开始时，主机B设定rwnd=RcvBuffer)放入发给主机A的报文段的接收窗口字段中，通知主机A它在该链接的缓存中还有多少可用空间。因此，主机A要轮流跟踪两个变量，LastByteSent和LastByteAcked，这两个变量的差值即为主机A发送到连接中但未被确认的数据量。通过将未确认的数据量控制在rwnd以内，就可以保证主机A不会使主机B的接收缓存溢出。所以主机A在连接的整个生命周期须保证：</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LastByteSent&nbsp;-&nbsp;LastByteAcked&nbsp;<=&nbsp;rwnd</br>\n&nbsp;&nbsp;&nbsp;&nbsp;**注：当主机B的接收缓存已满时，即rwnd为0，主机A继续发送只有一个字节的数据报文段，这些报文段将会被接收方确认，最终缓存区将开始清空，并且确认报文中将包含一个非0的rwnd值。**\n\n---\n## TCP拥塞控制\n\n&nbsp;&nbsp;&nbsp;&nbsp;TCP为什么需要拥塞控制：***对IP网络的拥塞而采取的措施。***\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;![1](./一点点.jpg)</br>\n&nbsp;&nbsp;&nbsp;&nbsp;TCP所采用的方法是让每一个发送方根据所感知到的网络拥塞程度来限制其能向链接发送流量的速率。</br>\n1. TCP发送方如何限制它向其连接发送流量的速率？</br>\n&nbsp;&nbsp;&nbsp;&nbsp;答：运行在发送方的TCP拥塞控制机制跟踪一个额外的变量，即拥塞窗口(cwnd)。在一个发送方中未被确认的数据量不会超过cwnd和rwnd中的最小值，即LastByteSent&nbsp;-&nbsp;LastByteAcked&nbsp;<=&nbsp;min{cwnd&nbsp;，&nbsp;rwnd}\n2. TCP发送方如何感知从它到目的地之间的路径是否存在拥塞呢？</br>\n&nbsp;&nbsp;&nbsp;&nbsp;答：我们将TCP发送方的“丢包事件”定义为：要么出现超时，要么收到来自接收方的3个冗余ACK。此时发送方就认为在该路径上出现了拥塞。注意到：当网络没有拥塞时，如果确认报文以相当慢的速率到达时，则该拥塞窗口将以相当慢的速率增加，另一方面，当确认报文以高速率到达时，拥塞窗口将迅速的增大，以使发送报文段的速率迅速增加。所以TCP被说成是**自计时**的。\n3. 当发送方感知到端到端的拥塞时，采用何种算法来改变其发送速率呢？</br>\n&nbsp;&nbsp;&nbsp;&nbsp;答：TCP通过***TCP拥塞控制算法***来控制其发送报文段的速率。该算法包括3个重要部分，分别为：慢启动；拥塞避免；快速恢复。</br>\n* 慢启动</br>\n当一条TCP连接开始时，cwnd通常初始置为一个MSS的较小值，这就使得初始的发送速率大约为MSS/RTT(RTT为传播时延)。在慢启动状态，cwnd的值以一个MSS开始并且每当传输的报文段首次被确认就增加一个MSS。此时发送速率呈倍数增长，直到存在一个超市指示的丢包事件，**TCP发送方将cwnd设置为1并重新开始慢启动过程，还将第二个状态变量的值ssthresh设置为cwnd/2，即当前检测到拥塞时将ssthresh置为拥塞窗口值的一半**。当cwnd的值到达或超过ssthresh时，TCP转移到**拥塞避免模式。**第二种结束慢启动的方式为，**当检测到三次冗余ACK时，TCP执行一种快速重传并进入快速恢复状态。**\n* 拥塞避免</br>\n一旦进入拥塞避免状态，cwnd的值大约是上次遇到拥塞时的值得一半。**每当新的确认报文到达时，就将cwnd的值增加一个MSS。**(不同于慢启动状态下的翻倍增长)当发生超时时，cwnd的值被更新为1个MSS，ssthresh被置为cwnd的一半并进入**慢启动状态**。当发送端收到三次冗余ACK后，TCP将cwnd的值减半(一般置为cwnd/2+3MSS)，将ssthresh的值记录为cwnd值的一半，进入到**快速恢复状态**。\n* 快速恢复</br>\n在快速恢复中，对于引起TCP进入快速恢复状态的缺失报文段，对收到每个冗余ACK后，cwnd的值增加一个MSS。最终，当对丢失报文的ACK到达后，TCP在降低cwnd后进入**拥塞避免状态**。如果出现超时丢包事件，将cwnd的值置为1，ssthresh的值置为cwnd的一半，迁移到**慢启动状态。**</br>\n![对比](./控制过程.jpg)</br>\n***注：TCP拥塞控制常常被称为加性增，乘性减拥塞控制方式***</br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;![对比](./停.jpg)</br>\n","source":"_posts/计算机网络基础.md","raw":"---\ntitle: 计算机网络基础\ndate: 2020-01-17 17:11:57\ntags: network\n---\n# TCP协议\n## 当今互联网基石——TCP/IP协议栈\n&nbsp;&nbsp;&nbsp;&nbsp;TCP/IP传输协议，即传输控制/网络协议，也叫作网络通讯协议。它是在网络的使用中的最基本的通信协议。TCP/IP传输协议对互联网中各部分进行通信的标准和方法进行了规定。并且，TCP/IP传输协议是保证网络数据信息及时、完整传输的两个重要的协议。\n<!--more-->\n[百度百科](https://baike.baidu.com/item/TCP/IP%E5%8D%8F%E8%AE%AE/212915)\n\n---\n\n## TCP协议特点\n&nbsp;&nbsp;&nbsp;&nbsp;TCP被称为是面向连接的，这是因为在一个应用进程可以开始向另一个应用进程发送数据之前，这两个进程必须先相互“握手”，即必须相互发送某些预备报文，以建立确保函数传输的参数。<br>\n&nbsp;&nbsp;&nbsp;&nbsp;TCP连接提供的是**全双工服务**：如果一台主机上的进程A与另一台主机上的进程B存在一条TCP连接，那么应用层数据就可以在从进程B流向进程A的同时，也从进程A流向进程B。TCP连接也是点对点的连接，即在一次单个发送方与单个接收方的连接。\n\n---\n## TCP报文结构\n![1](./TCP报文段结构.jpg)<br>\n源端口号：发送方的端口号<br>\n目的端口号：接收方端口号<br>\n序号：该报文段的字节流编号<br>\n确认号：发送方期望从接收方收到的序号<br>\n首部长度：指示了32字节的首部长度，由于选项长度是不定的，当选项长度为0时，首部长度为20字节<br>\n接收窗口：用于流量控制，指示接收方愿意接受的字节数量<br>\n检验和：提供了差错检验功能<br>\n紧急数据指针：指出紧急数据<br>\n选项：用于发送方和接收方协商最大报文段长度时，或在高速网络环境下用作窗口调节因子时使用<br>\n数据：应用层数据<br>\n\n---\n## TCP连接控制(三次握手/四次挥手)\n\n&nbsp;&nbsp;&nbsp;&nbsp;TCP作为可靠数据连接，其连接机制起着至关作用。</br>\n\n### 三次握手TCP连接机制\n1. 客户端的TCP首先向服务器端的TCP发送一个特殊的TCP报文段。该报文段中不含有应用层的数据，但是在首部中的一个标志位(即**SYN比特**)被置为1。因此这个特殊的报文段被称为SYN报文段。另外，客户端会随机选择一个初始序号(client_isn)，并将此编号放置于该起始的TCP SYN报文段的序号字段。该报文段会被封装到一个IP数据报中，并发送给服务器。\n\n2. 一旦包含TCP SYN报文段的IP数据报到达服务器主机，服务器会从该数据报中提取出TCP SYN报文段，**为该TCP连接分配TCP缓存和变量**，并向该客户TCP发送允许连接的报文段。这个允许连接的报文段也不包含任何的应用层数据。但是，在该报文段的首部包含着三个重要的信息。a：***SYN比特被置为1***；b：***首部确认号字段被置为client_isn+1***；c：***服务器选择自己的初始序号(server_isn)，并将其放置到TCP报文段首部的序号字段中。***该允许连接的报文段称为SYNACK报文段。\n\n3. 在客户端收到SYNACK报文段后，客户也要为该链接分配缓存和变量。客户主机接着向服务器发送另外一个报文段，最后一个报文段对服务器的允许连接的报文段进行了确认，将确认号字段置为server_isn+1。此时连接已经建立，所以**将SYN比特置为0**。该三次握手的第三个阶段(此阶段)可以在报文段负载中携带客户到服务器的数据。</br>\n![1](./三次握手.png)\n\n### 四次挥手TCP断开机制\n\n1. 客户应用进程发出一个关闭命令。这会引起客户TCP向服务器进程发送一个特殊的TCP报文段。**这个特殊的报文段让其首部中的FIN比特被置为1。**\n\n2. 当服务器接收到该报文段后，返回一个确认报文段。\n\n3. 当服务器发送给客户端的最后一个报文段发送完成后，发送终止报文段，**此报文段中的FIN比特被置为1。**\n\n4. 客户端接受到终止报文段之后，对服务器TCP返回确认报文，**并进入到TIME_WAIT状态**(典型值为一分钟或两分钟)，该状态的目的是为了确保确认报文成功送达到服务器端。</br>\n![1](./四次挥手.png)\n\n---\n## TCP流量控制\n&nbsp;&nbsp;&nbsp;&nbsp;TCP为什么需要流量控制：***对接收方缓存区的溢出而采取的措施。***</br>\n&nbsp;&nbsp;&nbsp;&nbsp;TCP通过让发送方维护一个称为**接收窗口**的变量来提供流量控制。通俗来说：接收窗口用于给发送方一个指示——接收方还有多少可用的缓存空间。</br>\n&nbsp;&nbsp;&nbsp;&nbsp;通过下面这个例子来详细了解一下TCP的流量控制。</br>\n&nbsp;&nbsp;&nbsp;&nbsp;假设主机A通过一条TCP连接向主机B发送一个大文件，主机B上为该链接分配了一个接受缓存，并用RcvBuffer来表示其大小。主机B上的应用从TCP缓存区读取数据时，定义以下变量：LastByteRead(主机B上的应用进程从缓存读出的数据流的最后一个字节的编号)，LastByteRcvd(从网络中到达的并且已经放入主机B接受缓存中的数据流的最后一个字节的编号)。</br>\n&nbsp;&nbsp;&nbsp;&nbsp;由于TCP不允许已分配的缓存溢出，则有下式成立：</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LastByteRcvd&nbsp;-&nbsp;LastByteRead &nbsp;<=&nbsp; RcvBuffer</br>\n&nbsp;&nbsp;&nbsp;&nbsp;接受窗口用rwnd表示，其大小由缓存可用空间的数量来设置：</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rwnd&nbsp;=&nbsp;RcvBuffer&nbsp;-&nbsp;[LastByteRcvd&nbsp;-&nbsp;LastByteRead]</br>\n&nbsp;&nbsp;&nbsp;&nbsp;利用变量rwnd来控制流量服务。主机B通过把当前的rwnd值(开始时，主机B设定rwnd=RcvBuffer)放入发给主机A的报文段的接收窗口字段中，通知主机A它在该链接的缓存中还有多少可用空间。因此，主机A要轮流跟踪两个变量，LastByteSent和LastByteAcked，这两个变量的差值即为主机A发送到连接中但未被确认的数据量。通过将未确认的数据量控制在rwnd以内，就可以保证主机A不会使主机B的接收缓存溢出。所以主机A在连接的整个生命周期须保证：</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LastByteSent&nbsp;-&nbsp;LastByteAcked&nbsp;<=&nbsp;rwnd</br>\n&nbsp;&nbsp;&nbsp;&nbsp;**注：当主机B的接收缓存已满时，即rwnd为0，主机A继续发送只有一个字节的数据报文段，这些报文段将会被接收方确认，最终缓存区将开始清空，并且确认报文中将包含一个非0的rwnd值。**\n\n---\n## TCP拥塞控制\n\n&nbsp;&nbsp;&nbsp;&nbsp;TCP为什么需要拥塞控制：***对IP网络的拥塞而采取的措施。***\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;![1](./一点点.jpg)</br>\n&nbsp;&nbsp;&nbsp;&nbsp;TCP所采用的方法是让每一个发送方根据所感知到的网络拥塞程度来限制其能向链接发送流量的速率。</br>\n1. TCP发送方如何限制它向其连接发送流量的速率？</br>\n&nbsp;&nbsp;&nbsp;&nbsp;答：运行在发送方的TCP拥塞控制机制跟踪一个额外的变量，即拥塞窗口(cwnd)。在一个发送方中未被确认的数据量不会超过cwnd和rwnd中的最小值，即LastByteSent&nbsp;-&nbsp;LastByteAcked&nbsp;<=&nbsp;min{cwnd&nbsp;，&nbsp;rwnd}\n2. TCP发送方如何感知从它到目的地之间的路径是否存在拥塞呢？</br>\n&nbsp;&nbsp;&nbsp;&nbsp;答：我们将TCP发送方的“丢包事件”定义为：要么出现超时，要么收到来自接收方的3个冗余ACK。此时发送方就认为在该路径上出现了拥塞。注意到：当网络没有拥塞时，如果确认报文以相当慢的速率到达时，则该拥塞窗口将以相当慢的速率增加，另一方面，当确认报文以高速率到达时，拥塞窗口将迅速的增大，以使发送报文段的速率迅速增加。所以TCP被说成是**自计时**的。\n3. 当发送方感知到端到端的拥塞时，采用何种算法来改变其发送速率呢？</br>\n&nbsp;&nbsp;&nbsp;&nbsp;答：TCP通过***TCP拥塞控制算法***来控制其发送报文段的速率。该算法包括3个重要部分，分别为：慢启动；拥塞避免；快速恢复。</br>\n* 慢启动</br>\n当一条TCP连接开始时，cwnd通常初始置为一个MSS的较小值，这就使得初始的发送速率大约为MSS/RTT(RTT为传播时延)。在慢启动状态，cwnd的值以一个MSS开始并且每当传输的报文段首次被确认就增加一个MSS。此时发送速率呈倍数增长，直到存在一个超市指示的丢包事件，**TCP发送方将cwnd设置为1并重新开始慢启动过程，还将第二个状态变量的值ssthresh设置为cwnd/2，即当前检测到拥塞时将ssthresh置为拥塞窗口值的一半**。当cwnd的值到达或超过ssthresh时，TCP转移到**拥塞避免模式。**第二种结束慢启动的方式为，**当检测到三次冗余ACK时，TCP执行一种快速重传并进入快速恢复状态。**\n* 拥塞避免</br>\n一旦进入拥塞避免状态，cwnd的值大约是上次遇到拥塞时的值得一半。**每当新的确认报文到达时，就将cwnd的值增加一个MSS。**(不同于慢启动状态下的翻倍增长)当发生超时时，cwnd的值被更新为1个MSS，ssthresh被置为cwnd的一半并进入**慢启动状态**。当发送端收到三次冗余ACK后，TCP将cwnd的值减半(一般置为cwnd/2+3MSS)，将ssthresh的值记录为cwnd值的一半，进入到**快速恢复状态**。\n* 快速恢复</br>\n在快速恢复中，对于引起TCP进入快速恢复状态的缺失报文段，对收到每个冗余ACK后，cwnd的值增加一个MSS。最终，当对丢失报文的ACK到达后，TCP在降低cwnd后进入**拥塞避免状态**。如果出现超时丢包事件，将cwnd的值置为1，ssthresh的值置为cwnd的一半，迁移到**慢启动状态。**</br>\n![对比](./控制过程.jpg)</br>\n***注：TCP拥塞控制常常被称为加性增，乘性减拥塞控制方式***</br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;![对比](./停.jpg)</br>\n","slug":"计算机网络基础","published":1,"updated":"2020-07-23T09:13:57.842Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckd0hv9im0007j7jx5d7v2d68","content":"<h1 id=\"TCP协议\"><a href=\"#TCP协议\" class=\"headerlink\" title=\"TCP协议\"></a>TCP协议</h1><h2 id=\"当今互联网基石——TCP-IP协议栈\"><a href=\"#当今互联网基石——TCP-IP协议栈\" class=\"headerlink\" title=\"当今互联网基石——TCP/IP协议栈\"></a>当今互联网基石——TCP/IP协议栈</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;TCP/IP传输协议，即传输控制/网络协议，也叫作网络通讯协议。它是在网络的使用中的最基本的通信协议。TCP/IP传输协议对互联网中各部分进行通信的标准和方法进行了规定。并且，TCP/IP传输协议是保证网络数据信息及时、完整传输的两个重要的协议。</p>\n<a id=\"more\"></a>\n<p><a href=\"https://baike.baidu.com/item/TCP/IP%E5%8D%8F%E8%AE%AE/212915\" target=\"_blank\" rel=\"noopener\">百度百科</a></p>\n<hr>\n<h2 id=\"TCP协议特点\"><a href=\"#TCP协议特点\" class=\"headerlink\" title=\"TCP协议特点\"></a>TCP协议特点</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;TCP被称为是面向连接的，这是因为在一个应用进程可以开始向另一个应用进程发送数据之前，这两个进程必须先相互“握手”，即必须相互发送某些预备报文，以建立确保函数传输的参数。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;TCP连接提供的是<strong>全双工服务</strong>：如果一台主机上的进程A与另一台主机上的进程B存在一条TCP连接，那么应用层数据就可以在从进程B流向进程A的同时，也从进程A流向进程B。TCP连接也是点对点的连接，即在一次单个发送方与单个接收方的连接。</p>\n<hr>\n<h2 id=\"TCP报文结构\"><a href=\"#TCP报文结构\" class=\"headerlink\" title=\"TCP报文结构\"></a>TCP报文结构</h2><p><img src=\"/2020/01/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/TCP%E6%8A%A5%E6%96%87%E6%AE%B5%E7%BB%93%E6%9E%84.jpg\" alt=\"1\"><br><br>源端口号：发送方的端口号<br><br>目的端口号：接收方端口号<br><br>序号：该报文段的字节流编号<br><br>确认号：发送方期望从接收方收到的序号<br><br>首部长度：指示了32字节的首部长度，由于选项长度是不定的，当选项长度为0时，首部长度为20字节<br><br>接收窗口：用于流量控制，指示接收方愿意接受的字节数量<br><br>检验和：提供了差错检验功能<br><br>紧急数据指针：指出紧急数据<br><br>选项：用于发送方和接收方协商最大报文段长度时，或在高速网络环境下用作窗口调节因子时使用<br><br>数据：应用层数据<br></p>\n<hr>\n<h2 id=\"TCP连接控制-三次握手-四次挥手\"><a href=\"#TCP连接控制-三次握手-四次挥手\" class=\"headerlink\" title=\"TCP连接控制(三次握手/四次挥手)\"></a>TCP连接控制(三次握手/四次挥手)</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;TCP作为可靠数据连接，其连接机制起着至关作用。<br></p>\n<h3 id=\"三次握手TCP连接机制\"><a href=\"#三次握手TCP连接机制\" class=\"headerlink\" title=\"三次握手TCP连接机制\"></a>三次握手TCP连接机制</h3><ol>\n<li><p>客户端的TCP首先向服务器端的TCP发送一个特殊的TCP报文段。该报文段中不含有应用层的数据，但是在首部中的一个标志位(即<strong>SYN比特</strong>)被置为1。因此这个特殊的报文段被称为SYN报文段。另外，客户端会随机选择一个初始序号(client_isn)，并将此编号放置于该起始的TCP SYN报文段的序号字段。该报文段会被封装到一个IP数据报中，并发送给服务器。</p>\n</li>\n<li><p>一旦包含TCP SYN报文段的IP数据报到达服务器主机，服务器会从该数据报中提取出TCP SYN报文段，<strong>为该TCP连接分配TCP缓存和变量</strong>，并向该客户TCP发送允许连接的报文段。这个允许连接的报文段也不包含任何的应用层数据。但是，在该报文段的首部包含着三个重要的信息。a：<strong><em>SYN比特被置为1</em></strong>；b：<strong><em>首部确认号字段被置为client_isn+1</em></strong>；c：<strong><em>服务器选择自己的初始序号(server_isn)，并将其放置到TCP报文段首部的序号字段中。</em></strong>该允许连接的报文段称为SYNACK报文段。</p>\n</li>\n<li><p>在客户端收到SYNACK报文段后，客户也要为该链接分配缓存和变量。客户主机接着向服务器发送另外一个报文段，最后一个报文段对服务器的允许连接的报文段进行了确认，将确认号字段置为server_isn+1。此时连接已经建立，所以<strong>将SYN比特置为0</strong>。该三次握手的第三个阶段(此阶段)可以在报文段负载中携带客户到服务器的数据。<br><br><img src=\"/2020/01/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B.png\" alt=\"1\"></p>\n</li>\n</ol>\n<h3 id=\"四次挥手TCP断开机制\"><a href=\"#四次挥手TCP断开机制\" class=\"headerlink\" title=\"四次挥手TCP断开机制\"></a>四次挥手TCP断开机制</h3><ol>\n<li><p>客户应用进程发出一个关闭命令。这会引起客户TCP向服务器进程发送一个特殊的TCP报文段。<strong>这个特殊的报文段让其首部中的FIN比特被置为1。</strong></p>\n</li>\n<li><p>当服务器接收到该报文段后，返回一个确认报文段。</p>\n</li>\n<li><p>当服务器发送给客户端的最后一个报文段发送完成后，发送终止报文段，<strong>此报文段中的FIN比特被置为1。</strong></p>\n</li>\n<li><p>客户端接受到终止报文段之后，对服务器TCP返回确认报文，<strong>并进入到TIME_WAIT状态</strong>(典型值为一分钟或两分钟)，该状态的目的是为了确保确认报文成功送达到服务器端。<br><br><img src=\"/2020/01/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B.png\" alt=\"1\"></p>\n</li>\n</ol>\n<hr>\n<h2 id=\"TCP流量控制\"><a href=\"#TCP流量控制\" class=\"headerlink\" title=\"TCP流量控制\"></a>TCP流量控制</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;TCP为什么需要流量控制：<strong><em>对接收方缓存区的溢出而采取的措施。</em></strong><br><br>&nbsp;&nbsp;&nbsp;&nbsp;TCP通过让发送方维护一个称为<strong>接收窗口</strong>的变量来提供流量控制。通俗来说：接收窗口用于给发送方一个指示——接收方还有多少可用的缓存空间。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;通过下面这个例子来详细了解一下TCP的流量控制。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;假设主机A通过一条TCP连接向主机B发送一个大文件，主机B上为该链接分配了一个接受缓存，并用RcvBuffer来表示其大小。主机B上的应用从TCP缓存区读取数据时，定义以下变量：LastByteRead(主机B上的应用进程从缓存读出的数据流的最后一个字节的编号)，LastByteRcvd(从网络中到达的并且已经放入主机B接受缓存中的数据流的最后一个字节的编号)。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;由于TCP不允许已分配的缓存溢出，则有下式成立：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LastByteRcvd&nbsp;-&nbsp;LastByteRead &nbsp;&lt;=&nbsp; RcvBuffer<br><br>&nbsp;&nbsp;&nbsp;&nbsp;接受窗口用rwnd表示，其大小由缓存可用空间的数量来设置：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rwnd&nbsp;=&nbsp;RcvBuffer&nbsp;-&nbsp;[LastByteRcvd&nbsp;-&nbsp;LastByteRead]<br><br>&nbsp;&nbsp;&nbsp;&nbsp;利用变量rwnd来控制流量服务。主机B通过把当前的rwnd值(开始时，主机B设定rwnd=RcvBuffer)放入发给主机A的报文段的接收窗口字段中，通知主机A它在该链接的缓存中还有多少可用空间。因此，主机A要轮流跟踪两个变量，LastByteSent和LastByteAcked，这两个变量的差值即为主机A发送到连接中但未被确认的数据量。通过将未确认的数据量控制在rwnd以内，就可以保证主机A不会使主机B的接收缓存溢出。所以主机A在连接的整个生命周期须保证：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LastByteSent&nbsp;-&nbsp;LastByteAcked&nbsp;&lt;=&nbsp;rwnd<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>注：当主机B的接收缓存已满时，即rwnd为0，主机A继续发送只有一个字节的数据报文段，这些报文段将会被接收方确认，最终缓存区将开始清空，并且确认报文中将包含一个非0的rwnd值。</strong></p>\n<hr>\n<h2 id=\"TCP拥塞控制\"><a href=\"#TCP拥塞控制\" class=\"headerlink\" title=\"TCP拥塞控制\"></a>TCP拥塞控制</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;TCP为什么需要拥塞控制：<strong><em>对IP网络的拥塞而采取的措施。</em></strong></p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/2020/01/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E4%B8%80%E7%82%B9%E7%82%B9.jpg\" alt=\"1\"><br><br>&nbsp;&nbsp;&nbsp;&nbsp;TCP所采用的方法是让每一个发送方根据所感知到的网络拥塞程度来限制其能向链接发送流量的速率。<br></p>\n<ol>\n<li>TCP发送方如何限制它向其连接发送流量的速率？<br><br>&nbsp;&nbsp;&nbsp;&nbsp;答：运行在发送方的TCP拥塞控制机制跟踪一个额外的变量，即拥塞窗口(cwnd)。在一个发送方中未被确认的数据量不会超过cwnd和rwnd中的最小值，即LastByteSent&nbsp;-&nbsp;LastByteAcked&nbsp;&lt;=&nbsp;min{cwnd&nbsp;，&nbsp;rwnd}</li>\n<li>TCP发送方如何感知从它到目的地之间的路径是否存在拥塞呢？<br><br>&nbsp;&nbsp;&nbsp;&nbsp;答：我们将TCP发送方的“丢包事件”定义为：要么出现超时，要么收到来自接收方的3个冗余ACK。此时发送方就认为在该路径上出现了拥塞。注意到：当网络没有拥塞时，如果确认报文以相当慢的速率到达时，则该拥塞窗口将以相当慢的速率增加，另一方面，当确认报文以高速率到达时，拥塞窗口将迅速的增大，以使发送报文段的速率迅速增加。所以TCP被说成是<strong>自计时</strong>的。</li>\n<li>当发送方感知到端到端的拥塞时，采用何种算法来改变其发送速率呢？<br><br>&nbsp;&nbsp;&nbsp;&nbsp;答：TCP通过<strong><em>TCP拥塞控制算法</em></strong>来控制其发送报文段的速率。该算法包括3个重要部分，分别为：慢启动；拥塞避免；快速恢复。<br></li>\n</ol>\n<ul>\n<li>慢启动<br><br>当一条TCP连接开始时，cwnd通常初始置为一个MSS的较小值，这就使得初始的发送速率大约为MSS/RTT(RTT为传播时延)。在慢启动状态，cwnd的值以一个MSS开始并且每当传输的报文段首次被确认就增加一个MSS。此时发送速率呈倍数增长，直到存在一个超市指示的丢包事件，<strong>TCP发送方将cwnd设置为1并重新开始慢启动过程，还将第二个状态变量的值ssthresh设置为cwnd/2，即当前检测到拥塞时将ssthresh置为拥塞窗口值的一半</strong>。当cwnd的值到达或超过ssthresh时，TCP转移到<strong>拥塞避免模式。</strong>第二种结束慢启动的方式为，<strong>当检测到三次冗余ACK时，TCP执行一种快速重传并进入快速恢复状态。</strong></li>\n<li>拥塞避免<br><br>一旦进入拥塞避免状态，cwnd的值大约是上次遇到拥塞时的值得一半。<strong>每当新的确认报文到达时，就将cwnd的值增加一个MSS。</strong>(不同于慢启动状态下的翻倍增长)当发生超时时，cwnd的值被更新为1个MSS，ssthresh被置为cwnd的一半并进入<strong>慢启动状态</strong>。当发送端收到三次冗余ACK后，TCP将cwnd的值减半(一般置为cwnd/2+3MSS)，将ssthresh的值记录为cwnd值的一半，进入到<strong>快速恢复状态</strong>。</li>\n<li>快速恢复<br><br>在快速恢复中，对于引起TCP进入快速恢复状态的缺失报文段，对收到每个冗余ACK后，cwnd的值增加一个MSS。最终，当对丢失报文的ACK到达后，TCP在降低cwnd后进入<strong>拥塞避免状态</strong>。如果出现超时丢包事件，将cwnd的值置为1，ssthresh的值置为cwnd的一半，迁移到<strong>慢启动状态。</strong><br><br><img src=\"/2020/01/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%8E%A7%E5%88%B6%E8%BF%87%E7%A8%8B.jpg\" alt=\"对比\"><br></li>\n<li><strong>注：TCP拥塞控制常常被称为加性增，乘性减拥塞控制方式*</strong><br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/2020/01/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E5%81%9C.jpg\" alt=\"对比\"><br></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"TCP协议\"><a href=\"#TCP协议\" class=\"headerlink\" title=\"TCP协议\"></a>TCP协议</h1><h2 id=\"当今互联网基石——TCP-IP协议栈\"><a href=\"#当今互联网基石——TCP-IP协议栈\" class=\"headerlink\" title=\"当今互联网基石——TCP/IP协议栈\"></a>当今互联网基石——TCP/IP协议栈</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;TCP/IP传输协议，即传输控制/网络协议，也叫作网络通讯协议。它是在网络的使用中的最基本的通信协议。TCP/IP传输协议对互联网中各部分进行通信的标准和方法进行了规定。并且，TCP/IP传输协议是保证网络数据信息及时、完整传输的两个重要的协议。</p>","more":"<p><a href=\"https://baike.baidu.com/item/TCP/IP%E5%8D%8F%E8%AE%AE/212915\" target=\"_blank\" rel=\"noopener\">百度百科</a></p>\n<hr>\n<h2 id=\"TCP协议特点\"><a href=\"#TCP协议特点\" class=\"headerlink\" title=\"TCP协议特点\"></a>TCP协议特点</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;TCP被称为是面向连接的，这是因为在一个应用进程可以开始向另一个应用进程发送数据之前，这两个进程必须先相互“握手”，即必须相互发送某些预备报文，以建立确保函数传输的参数。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;TCP连接提供的是<strong>全双工服务</strong>：如果一台主机上的进程A与另一台主机上的进程B存在一条TCP连接，那么应用层数据就可以在从进程B流向进程A的同时，也从进程A流向进程B。TCP连接也是点对点的连接，即在一次单个发送方与单个接收方的连接。</p>\n<hr>\n<h2 id=\"TCP报文结构\"><a href=\"#TCP报文结构\" class=\"headerlink\" title=\"TCP报文结构\"></a>TCP报文结构</h2><p><img src=\"/2020/01/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/TCP%E6%8A%A5%E6%96%87%E6%AE%B5%E7%BB%93%E6%9E%84.jpg\" alt=\"1\"><br><br>源端口号：发送方的端口号<br><br>目的端口号：接收方端口号<br><br>序号：该报文段的字节流编号<br><br>确认号：发送方期望从接收方收到的序号<br><br>首部长度：指示了32字节的首部长度，由于选项长度是不定的，当选项长度为0时，首部长度为20字节<br><br>接收窗口：用于流量控制，指示接收方愿意接受的字节数量<br><br>检验和：提供了差错检验功能<br><br>紧急数据指针：指出紧急数据<br><br>选项：用于发送方和接收方协商最大报文段长度时，或在高速网络环境下用作窗口调节因子时使用<br><br>数据：应用层数据<br></p>\n<hr>\n<h2 id=\"TCP连接控制-三次握手-四次挥手\"><a href=\"#TCP连接控制-三次握手-四次挥手\" class=\"headerlink\" title=\"TCP连接控制(三次握手/四次挥手)\"></a>TCP连接控制(三次握手/四次挥手)</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;TCP作为可靠数据连接，其连接机制起着至关作用。<br></p>\n<h3 id=\"三次握手TCP连接机制\"><a href=\"#三次握手TCP连接机制\" class=\"headerlink\" title=\"三次握手TCP连接机制\"></a>三次握手TCP连接机制</h3><ol>\n<li><p>客户端的TCP首先向服务器端的TCP发送一个特殊的TCP报文段。该报文段中不含有应用层的数据，但是在首部中的一个标志位(即<strong>SYN比特</strong>)被置为1。因此这个特殊的报文段被称为SYN报文段。另外，客户端会随机选择一个初始序号(client_isn)，并将此编号放置于该起始的TCP SYN报文段的序号字段。该报文段会被封装到一个IP数据报中，并发送给服务器。</p>\n</li>\n<li><p>一旦包含TCP SYN报文段的IP数据报到达服务器主机，服务器会从该数据报中提取出TCP SYN报文段，<strong>为该TCP连接分配TCP缓存和变量</strong>，并向该客户TCP发送允许连接的报文段。这个允许连接的报文段也不包含任何的应用层数据。但是，在该报文段的首部包含着三个重要的信息。a：<strong><em>SYN比特被置为1</em></strong>；b：<strong><em>首部确认号字段被置为client_isn+1</em></strong>；c：<strong><em>服务器选择自己的初始序号(server_isn)，并将其放置到TCP报文段首部的序号字段中。</em></strong>该允许连接的报文段称为SYNACK报文段。</p>\n</li>\n<li><p>在客户端收到SYNACK报文段后，客户也要为该链接分配缓存和变量。客户主机接着向服务器发送另外一个报文段，最后一个报文段对服务器的允许连接的报文段进行了确认，将确认号字段置为server_isn+1。此时连接已经建立，所以<strong>将SYN比特置为0</strong>。该三次握手的第三个阶段(此阶段)可以在报文段负载中携带客户到服务器的数据。<br><br><img src=\"/2020/01/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B.png\" alt=\"1\"></p>\n</li>\n</ol>\n<h3 id=\"四次挥手TCP断开机制\"><a href=\"#四次挥手TCP断开机制\" class=\"headerlink\" title=\"四次挥手TCP断开机制\"></a>四次挥手TCP断开机制</h3><ol>\n<li><p>客户应用进程发出一个关闭命令。这会引起客户TCP向服务器进程发送一个特殊的TCP报文段。<strong>这个特殊的报文段让其首部中的FIN比特被置为1。</strong></p>\n</li>\n<li><p>当服务器接收到该报文段后，返回一个确认报文段。</p>\n</li>\n<li><p>当服务器发送给客户端的最后一个报文段发送完成后，发送终止报文段，<strong>此报文段中的FIN比特被置为1。</strong></p>\n</li>\n<li><p>客户端接受到终止报文段之后，对服务器TCP返回确认报文，<strong>并进入到TIME_WAIT状态</strong>(典型值为一分钟或两分钟)，该状态的目的是为了确保确认报文成功送达到服务器端。<br><br><img src=\"/2020/01/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B.png\" alt=\"1\"></p>\n</li>\n</ol>\n<hr>\n<h2 id=\"TCP流量控制\"><a href=\"#TCP流量控制\" class=\"headerlink\" title=\"TCP流量控制\"></a>TCP流量控制</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;TCP为什么需要流量控制：<strong><em>对接收方缓存区的溢出而采取的措施。</em></strong><br><br>&nbsp;&nbsp;&nbsp;&nbsp;TCP通过让发送方维护一个称为<strong>接收窗口</strong>的变量来提供流量控制。通俗来说：接收窗口用于给发送方一个指示——接收方还有多少可用的缓存空间。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;通过下面这个例子来详细了解一下TCP的流量控制。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;假设主机A通过一条TCP连接向主机B发送一个大文件，主机B上为该链接分配了一个接受缓存，并用RcvBuffer来表示其大小。主机B上的应用从TCP缓存区读取数据时，定义以下变量：LastByteRead(主机B上的应用进程从缓存读出的数据流的最后一个字节的编号)，LastByteRcvd(从网络中到达的并且已经放入主机B接受缓存中的数据流的最后一个字节的编号)。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;由于TCP不允许已分配的缓存溢出，则有下式成立：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LastByteRcvd&nbsp;-&nbsp;LastByteRead &nbsp;&lt;=&nbsp; RcvBuffer<br><br>&nbsp;&nbsp;&nbsp;&nbsp;接受窗口用rwnd表示，其大小由缓存可用空间的数量来设置：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rwnd&nbsp;=&nbsp;RcvBuffer&nbsp;-&nbsp;[LastByteRcvd&nbsp;-&nbsp;LastByteRead]<br><br>&nbsp;&nbsp;&nbsp;&nbsp;利用变量rwnd来控制流量服务。主机B通过把当前的rwnd值(开始时，主机B设定rwnd=RcvBuffer)放入发给主机A的报文段的接收窗口字段中，通知主机A它在该链接的缓存中还有多少可用空间。因此，主机A要轮流跟踪两个变量，LastByteSent和LastByteAcked，这两个变量的差值即为主机A发送到连接中但未被确认的数据量。通过将未确认的数据量控制在rwnd以内，就可以保证主机A不会使主机B的接收缓存溢出。所以主机A在连接的整个生命周期须保证：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LastByteSent&nbsp;-&nbsp;LastByteAcked&nbsp;&lt;=&nbsp;rwnd<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>注：当主机B的接收缓存已满时，即rwnd为0，主机A继续发送只有一个字节的数据报文段，这些报文段将会被接收方确认，最终缓存区将开始清空，并且确认报文中将包含一个非0的rwnd值。</strong></p>\n<hr>\n<h2 id=\"TCP拥塞控制\"><a href=\"#TCP拥塞控制\" class=\"headerlink\" title=\"TCP拥塞控制\"></a>TCP拥塞控制</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;TCP为什么需要拥塞控制：<strong><em>对IP网络的拥塞而采取的措施。</em></strong></p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/2020/01/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E4%B8%80%E7%82%B9%E7%82%B9.jpg\" alt=\"1\"><br><br>&nbsp;&nbsp;&nbsp;&nbsp;TCP所采用的方法是让每一个发送方根据所感知到的网络拥塞程度来限制其能向链接发送流量的速率。<br></p>\n<ol>\n<li>TCP发送方如何限制它向其连接发送流量的速率？<br><br>&nbsp;&nbsp;&nbsp;&nbsp;答：运行在发送方的TCP拥塞控制机制跟踪一个额外的变量，即拥塞窗口(cwnd)。在一个发送方中未被确认的数据量不会超过cwnd和rwnd中的最小值，即LastByteSent&nbsp;-&nbsp;LastByteAcked&nbsp;&lt;=&nbsp;min{cwnd&nbsp;，&nbsp;rwnd}</li>\n<li>TCP发送方如何感知从它到目的地之间的路径是否存在拥塞呢？<br><br>&nbsp;&nbsp;&nbsp;&nbsp;答：我们将TCP发送方的“丢包事件”定义为：要么出现超时，要么收到来自接收方的3个冗余ACK。此时发送方就认为在该路径上出现了拥塞。注意到：当网络没有拥塞时，如果确认报文以相当慢的速率到达时，则该拥塞窗口将以相当慢的速率增加，另一方面，当确认报文以高速率到达时，拥塞窗口将迅速的增大，以使发送报文段的速率迅速增加。所以TCP被说成是<strong>自计时</strong>的。</li>\n<li>当发送方感知到端到端的拥塞时，采用何种算法来改变其发送速率呢？<br><br>&nbsp;&nbsp;&nbsp;&nbsp;答：TCP通过<strong><em>TCP拥塞控制算法</em></strong>来控制其发送报文段的速率。该算法包括3个重要部分，分别为：慢启动；拥塞避免；快速恢复。<br></li>\n</ol>\n<ul>\n<li>慢启动<br><br>当一条TCP连接开始时，cwnd通常初始置为一个MSS的较小值，这就使得初始的发送速率大约为MSS/RTT(RTT为传播时延)。在慢启动状态，cwnd的值以一个MSS开始并且每当传输的报文段首次被确认就增加一个MSS。此时发送速率呈倍数增长，直到存在一个超市指示的丢包事件，<strong>TCP发送方将cwnd设置为1并重新开始慢启动过程，还将第二个状态变量的值ssthresh设置为cwnd/2，即当前检测到拥塞时将ssthresh置为拥塞窗口值的一半</strong>。当cwnd的值到达或超过ssthresh时，TCP转移到<strong>拥塞避免模式。</strong>第二种结束慢启动的方式为，<strong>当检测到三次冗余ACK时，TCP执行一种快速重传并进入快速恢复状态。</strong></li>\n<li>拥塞避免<br><br>一旦进入拥塞避免状态，cwnd的值大约是上次遇到拥塞时的值得一半。<strong>每当新的确认报文到达时，就将cwnd的值增加一个MSS。</strong>(不同于慢启动状态下的翻倍增长)当发生超时时，cwnd的值被更新为1个MSS，ssthresh被置为cwnd的一半并进入<strong>慢启动状态</strong>。当发送端收到三次冗余ACK后，TCP将cwnd的值减半(一般置为cwnd/2+3MSS)，将ssthresh的值记录为cwnd值的一半，进入到<strong>快速恢复状态</strong>。</li>\n<li>快速恢复<br><br>在快速恢复中，对于引起TCP进入快速恢复状态的缺失报文段，对收到每个冗余ACK后，cwnd的值增加一个MSS。最终，当对丢失报文的ACK到达后，TCP在降低cwnd后进入<strong>拥塞避免状态</strong>。如果出现超时丢包事件，将cwnd的值置为1，ssthresh的值置为cwnd的一半，迁移到<strong>慢启动状态。</strong><br><br><img src=\"/2020/01/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%8E%A7%E5%88%B6%E8%BF%87%E7%A8%8B.jpg\" alt=\"对比\"><br></li>\n<li><strong>注：TCP拥塞控制常常被称为加性增，乘性减拥塞控制方式*</strong><br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/2020/01/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E5%81%9C.jpg\" alt=\"对比\"><br></li>\n</ul>"}],"PostAsset":[{"_id":"source/_posts/Django/Django学习图片14.png","slug":"Django学习图片14.png","post":"ckd0hv9hj0000j7jxeubpf4qx","modified":0,"renderable":0},{"_id":"source/_posts/计算机网络基础/TCP报文段结构.gif","slug":"TCP报文段结构.gif","post":"ckd0hv9im0007j7jx5d7v2d68","modified":0,"renderable":0},{"_id":"source/_posts/计算机网络基础/TCP报文段结构.jpg","slug":"TCP报文段结构.jpg","post":"ckd0hv9im0007j7jx5d7v2d68","modified":0,"renderable":0},{"_id":"source/_posts/计算机网络基础/一点点.jpg","slug":"一点点.jpg","post":"ckd0hv9im0007j7jx5d7v2d68","modified":0,"renderable":0},{"_id":"source/_posts/计算机网络基础/三次握手.png","slug":"三次握手.png","post":"ckd0hv9im0007j7jx5d7v2d68","modified":0,"renderable":0},{"_id":"source/_posts/计算机网络基础/停.jpg","slug":"停.jpg","post":"ckd0hv9im0007j7jx5d7v2d68","modified":0,"renderable":0},{"_id":"source/_posts/计算机网络基础/四次挥手.png","slug":"四次挥手.png","post":"ckd0hv9im0007j7jx5d7v2d68","modified":0,"renderable":0},{"_id":"source/_posts/计算机网络基础/控制过程.jpg","slug":"控制过程.jpg","post":"ckd0hv9im0007j7jx5d7v2d68","modified":0,"renderable":0},{"_id":"source/_posts/Django/Django学习图片-1.jpg","slug":"Django学习图片-1.jpg","post":"ckd0hv9hj0000j7jxeubpf4qx","modified":0,"renderable":0},{"_id":"source/_posts/Django/Django学习图片10.png","slug":"Django学习图片10.png","post":"ckd0hv9hj0000j7jxeubpf4qx","modified":0,"renderable":0},{"_id":"source/_posts/Django/Django学习图片11.png","slug":"Django学习图片11.png","post":"ckd0hv9hj0000j7jxeubpf4qx","modified":0,"renderable":0},{"_id":"source/_posts/Django/Django学习图片12.png","slug":"Django学习图片12.png","post":"ckd0hv9hj0000j7jxeubpf4qx","modified":0,"renderable":0},{"_id":"source/_posts/Django/Django学习图片13.png","slug":"Django学习图片13.png","post":"ckd0hv9hj0000j7jxeubpf4qx","modified":0,"renderable":0},{"_id":"source/_posts/Django/Django学习图片2.jpg","slug":"Django学习图片2.jpg","post":"ckd0hv9hj0000j7jxeubpf4qx","modified":0,"renderable":0},{"_id":"source/_posts/Django/Django学习图片3.jpg","slug":"Django学习图片3.jpg","post":"ckd0hv9hj0000j7jxeubpf4qx","modified":0,"renderable":0},{"_id":"source/_posts/Django/Django学习图片4.png","slug":"Django学习图片4.png","post":"ckd0hv9hj0000j7jxeubpf4qx","modified":0,"renderable":0},{"_id":"source/_posts/Django/Django学习图片5.jpg.png","slug":"Django学习图片5.jpg.png","post":"ckd0hv9hj0000j7jxeubpf4qx","modified":0,"renderable":0},{"_id":"source/_posts/Django/Django学习图片6.jpg","slug":"Django学习图片6.jpg","post":"ckd0hv9hj0000j7jxeubpf4qx","modified":0,"renderable":0},{"_id":"source/_posts/Django/Django学习图片7.png","slug":"Django学习图片7.png","post":"ckd0hv9hj0000j7jxeubpf4qx","modified":0,"renderable":0},{"_id":"source/_posts/Django/Django学习图片8.png","slug":"Django学习图片8.png","post":"ckd0hv9hj0000j7jxeubpf4qx","modified":0,"renderable":0},{"_id":"source/_posts/Django/Django学习图片9.png","slug":"Django学习图片9.png","post":"ckd0hv9hj0000j7jxeubpf4qx","modified":0,"renderable":0},{"_id":"source/_posts/Django/斗图1.jpg","slug":"斗图1.jpg","post":"ckd0hv9hj0000j7jxeubpf4qx","modified":0,"renderable":0},{"_id":"source/_posts/Django/斗图2.jpg","slug":"斗图2.jpg","post":"ckd0hv9hj0000j7jxeubpf4qx","modified":0,"renderable":0},{"_id":"source/_posts/Django/斗图3.jpg","slug":"斗图3.jpg","post":"ckd0hv9hj0000j7jxeubpf4qx","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"ckd0hv9hj0000j7jxeubpf4qx","tag_id":"ckd0hv9i70004j7jxalsu2uwq","_id":"ckd0hv9iq0009j7jx1i8f5rh1"},{"post_id":"ckd0hv9i90005j7jx66am0386","tag_id":"ckd0hv9i70004j7jxalsu2uwq","_id":"ckd0hv9is000bj7jx0d61gz0v"},{"post_id":"ckd0hv9im0007j7jx5d7v2d68","tag_id":"ckd0hv9ir000aj7jx5nps7tf5","_id":"ckd0hv9it000cj7jxgrje0xb1"}],"Tag":[{"name":"python","_id":"ckd0hv9i70004j7jxalsu2uwq"},{"name":"network","_id":"ckd0hv9ir000aj7jx5nps7tf5"}]}}